/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/packs/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*********************************************!*\
  !*** ./app/javascript/packs/application.js ***!
  \*********************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uikit__ = __webpack_require__(/*! uikit */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uikit___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_uikit__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_uikit_dist_js_uikit_icons__ = __webpack_require__(/*! uikit/dist/js/uikit-icons */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_uikit_dist_js_uikit_icons___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_uikit_dist_js_uikit_icons__);\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // loads the Icon plugin\n  __WEBPACK_IMPORTED_MODULE_0_uikit___default.a.use(__WEBPACK_IMPORTED_MODULE_1_uikit_dist_js_uikit_icons___default.a);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcGxpY2F0aW9uLmpzP2UyM2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJa2l0IGZyb20gJ3Vpa2l0JztcbmltcG9ydCBJY29ucyBmcm9tICd1aWtpdC9kaXN0L2pzL3Vpa2l0LWljb25zJztcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcbiAgLy8gbG9hZHMgdGhlIEljb24gcGx1Z2luXG4gIFVJa2l0LnVzZShJY29ucyk7XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcGxpY2F0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!*********************************************!*\
  !*** ./node_modules/uikit/dist/js/uikit.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {/*! UIkit 3.0.0-beta.34 | http://www.getuikit.com | (c) 2014 - 2017 YOOtheme | MIT License */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('uikit', factory) :\n\t(global.UIkit = factory());\n}(this, (function () { 'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nvar async = 'setImmediate' in window ? setImmediate : setTimeout;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = Promise$1.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x.then;\n\n            if (x !== null && isObject(x) && isFunction(then)) {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var this$1 = this;\n\n    async(function () {\n        if (this$1.state !== PENDING) {\n            while (this$1.deferred.length) {\n                var deferred = this$1.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (this$1.state === RESOLVED) {\n                        if (isFunction(onResolved)) {\n                            resolve(onResolved.call(undefined, this$1.value));\n                        } else {\n                            resolve(this$1.value);\n                        }\n                    } else if (this$1.state === REJECTED) {\n                        if (isFunction(onRejected)) {\n                            resolve(onRejected.call(undefined, this$1.value));\n                        } else {\n                            reject(this$1.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var this$1 = this;\n\n    return new Promise$1(function (resolve, reject) {\n        this$1.deferred.push([onResolved, onRejected, resolve, reject]);\n        this$1.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nfunction bind(fn, context) {\n    return function (a) {\n        var l = arguments.length;\n        return l ? l > 1 ? fn.apply(context, arguments) : fn.call(context, a) : fn.call(context);\n    };\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n}\n\nvar Promise = 'Promise' in window ? window.Promise : Promise$1;\n\nvar classifyRe = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n    return str.replace(classifyRe, function (_, c) { return c ? c.toUpperCase() : ''; });\n}\n\nvar hyphenateRe = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n    return str\n        .replace(hyphenateRe, '$1-$2')\n        .toLowerCase()\n}\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n    return str.replace(camelizeRE, toUpper)\n}\n\nfunction toUpper(_, c) {\n    return c ? c.toUpperCase() : ''\n}\n\nfunction ucfirst(str) {\n    return str.length ? toUpper(null, str.charAt(0)) + str.slice(1) : '';\n}\n\nvar strPrototype = String.prototype;\nvar startsWithFn = strPrototype.startsWith || function (search) { return this.lastIndexOf(search, 0) === 0; };\n\nfunction startsWith(str, search) {\n    return startsWithFn.call(str, search);\n}\n\nvar endsWithFn = strPrototype.endsWith || function (search) { return this.substr(-1 * search.length) === search; };\n\nfunction endsWith(str, search) {\n    return endsWithFn.call(str, search);\n}\n\nvar includesFn = function (search) { return ~this.indexOf(search); };\nvar includesStr = strPrototype.includes || includesFn;\nvar includesArray = Array.prototype.includes || includesFn;\n\nfunction includes(obj, search) {\n    return obj && (isString(obj) ? includesStr : includesArray).call(obj, search);\n}\n\nvar isArray = Array.isArray;\n\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\n}\n\nfunction isWindow(obj) {\n    return isObject(obj) && obj === obj.window;\n}\n\nfunction isDocument(obj) {\n    return isObject(obj) && obj.nodeType === 9;\n}\n\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nfunction isNumeric(value) {\n    return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\n}\n\nfunction isUndefined(value) {\n    return value === void 0;\n}\n\nfunction toBoolean(value) {\n    return isBoolean(value)\n        ? value\n        : value === 'true' || value === '1' || value === ''\n            ? true\n            : value === 'false' || value === '0'\n                ? false\n                : value;\n}\n\nfunction toNumber(value) {\n    var number = Number(value);\n    return !isNaN(number) ? number : false;\n}\n\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\nfunction toList(value) {\n    return isArray(value)\n        ? value\n        : isString(value)\n            ? value.split(',').map(function (value) { return isNumeric(value)\n                ? toNumber(value)\n                : toBoolean(value.trim()); })\n            : [value];\n}\n\nvar vars = {};\n\nfunction toMedia(value) {\n\n    if (isString(value)) {\n        if (value[0] === '@') {\n            var name = \"media-\" + (value.substr(1));\n            value = vars[name] || (vars[name] = toFloat(getCssVar(name)));\n        } else if (isNaN(value)) {\n            return value;\n        }\n    }\n\n    return value && !isNaN(value) ? (\"(min-width: \" + value + \"px)\") : false;\n}\n\nfunction coerce(type, value, context) {\n\n    if (type === Boolean) {\n        return toBoolean(value);\n    } else if (type === Number) {\n        return toNumber(value);\n    } else if (type === 'query') {\n        return query(value, context);\n    } else if (type === 'list') {\n        return toList(value);\n    } else if (type === 'media') {\n        return toMedia(value);\n    }\n\n    return type ? type(value) : value;\n}\n\nfunction toMs(time) {\n    return !time\n        ? 0\n        : endsWith(time, 'ms')\n            ? toFloat(time)\n            : toFloat(time) * 1000;\n}\n\nfunction swap(value, a, b) {\n    return value.replace(new RegExp((a + \"|\" + b), 'mg'), function (match) {\n        return match === a ? b : a\n    });\n}\n\nvar assign = Object.assign || function (target) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    target = Object(target);\n    for (var i = 0; i < args.length; i++) {\n        var source = args[i];\n        if (source !== null) {\n            for (var key in source) {\n                if (hasOwn(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n    }\n    return target;\n};\n\nfunction each(obj, cb) {\n    for (var key in obj) {\n        if (cb.call(obj[key], obj[key], key) === false) {\n            break;\n        }\n    }\n}\n\nfunction clamp(number, min, max) {\n    if ( min === void 0 ) min = 0;\n    if ( max === void 0 ) max = 1;\n\n    return Math.min(Math.max(number, min), max);\n}\n\nfunction noop() {}\n\nfunction intersectRect(r1, r2) {\n    return r1.left <= r2.right &&\n        r2.left <= r1.right &&\n        r1.top <= r2.bottom &&\n        r2.top <= r1.bottom;\n}\n\nfunction pointInRect(point, rect) {\n    return intersectRect({top: point.y, bottom: point.y, left: point.x, right: point.x}, rect)\n}\n\nfunction ajax(url, options) {\n    return new Promise(function (resolve, reject) {\n\n        var env = assign({\n            data: null,\n            method: 'GET',\n            headers: {},\n            xhr: new XMLHttpRequest(),\n            beforeSend: noop,\n            responseType: ''\n        }, options);\n\n        var xhr = env.xhr;\n\n        env.beforeSend(env);\n\n        for (var prop in env) {\n            if (prop in xhr) {\n                try {\n\n                    xhr[prop] = env[prop];\n\n                } catch (e) {}\n            }\n        }\n\n        xhr.open(env.method.toUpperCase(), url);\n\n        for (var header in env.headers) {\n            xhr.setRequestHeader(header, env.headers[header]);\n        }\n\n        on(xhr, 'load', function () {\n\n            if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n                resolve(xhr);\n            } else {\n                reject(assign(Error(xhr.statusText), {\n                    xhr: xhr,\n                    status: xhr.status\n                }));\n            }\n\n        });\n\n        on(xhr, 'error', function () { return reject(assign(Error('Network Error'), {xhr: xhr})); });\n        on(xhr, 'timeout', function () { return reject(assign(Error('Network Timeout'), {xhr: xhr})); });\n\n        xhr.send(env.data);\n    });\n}\n\nvar arrayProto = Array.prototype;\n\nfunction $$1(selector, context) {\n    return !isString(selector)\n        ? toNode(selector)\n        : isHtml(selector)\n            ? toNode(fragment(selector))\n            : find(selector, context);\n}\n\nfunction $$(selector, context) {\n    return !isString(selector)\n        ? toNodes(selector)\n        : isHtml(selector)\n            ? toNodes(fragment(selector))\n            : findAll(selector, context);\n}\n\nfunction isHtml(str) {\n    return str[0] === '<' || str.match(/^\\s*</);\n}\n\nfunction query(selector, context) {\n    return $$1(selector, isContextSelector(selector) ? context : doc);\n}\n\nfunction queryAll(selector, context) {\n    return $$(selector, isContextSelector(selector) ? context : doc);\n}\n\nfunction find(selector, context) {\n    return toNode(_query(selector, context, 'querySelector'));\n}\n\nfunction findAll(selector, context) {\n    return toNodes(_query(selector, context, 'querySelectorAll'));\n}\n\nfunction _query(selector, context, queryFn) {\n    if ( context === void 0 ) context = doc;\n\n\n    if (!selector || !isString(selector)) {\n        return null;\n    }\n\n    selector = selector.replace(contextSanitizeRe, '$1 *');\n\n    var removes;\n\n    if (isContextSelector(selector)) {\n\n        removes = [];\n\n        selector = selector.split(',').map(function (selector, i) {\n\n            var ctx = context;\n\n            selector = selector.trim();\n\n            if (selector[0] === '!') {\n\n                var selectors = selector.substr(1).trim().split(' ');\n                ctx = closest(context.parentNode, selectors[0]);\n                selector = selectors.slice(1).join(' ');\n\n            }\n\n            if (!ctx) {\n                return null;\n            }\n\n            if (!ctx.id) {\n                ctx.id = \"uk-\" + (Date.now()) + i;\n                removes.push(function () { return removeAttr(ctx, 'id'); });\n            }\n\n            return (\"#\" + (ctx.id) + \" \" + selector);\n\n        }).filter(Boolean).join(',');\n\n        context = doc;\n\n    }\n\n    try {\n\n        return context[queryFn](selector);\n\n    } catch (e) {\n\n        return null;\n\n    } finally {\n\n        removes && removes.forEach(function (remove) { return remove(); });\n\n    }\n\n}\n\nfunction filter(element, selector) {\n    return $$(element).filter(function (element) { return matches(element, selector); });\n}\n\nfunction within(element, selector) {\n    return !isString(selector)\n        ? element === selector || toNode(selector).contains(toNode(element))\n        : matches(element, selector) || closest(element, selector);\n}\n\nvar contextSelectorRe = /(^|,)\\s*[!>+~]/;\nvar contextSanitizeRe = /([!>+~])(?=\\s+[!>+~]|\\s*$)/g;\n\nfunction isContextSelector(selector) {\n    return isString(selector) && selector.match(contextSelectorRe);\n}\n\nvar elProto = Element.prototype;\nvar matchesFn = elProto.matches || elProto.msMatchesSelector;\n\nfunction matches(element, selector) {\n    return toNodes(element).some(function (element) { return matchesFn.call(element, selector); });\n}\n\nvar closestFn = elProto.closest || function (selector) {\n    var ancestor = this;\n\n    do {\n\n        if (matches(ancestor, selector)) {\n            return ancestor;\n        }\n\n        ancestor = ancestor.parentNode;\n\n    } while (ancestor && ancestor.nodeType === 1);\n};\n\nfunction closest(element, selector) {\n\n    if (startsWith(selector, '>')) {\n        selector = selector.slice(1);\n    }\n\n    return isNode(element)\n        ? element.parentNode && closestFn.call(element, selector)\n        : toNodes(element).map(function (element) { return element.parentNode && closestFn.call(element, selector); }).filter(Boolean);\n}\n\nfunction parents(element, selector) {\n    var elements = [], parent = toNode(element).parentNode;\n\n    while (parent && parent.nodeType === 1) {\n\n        if (matches(parent, selector)) {\n            elements.push(parent);\n        }\n\n        parent = parent.parentNode;\n    }\n\n    return elements;\n}\n\nfunction isJQuery(obj) {\n    return isObject(obj) && !!obj.jquery;\n}\n\nfunction isNode(element) {\n    return element instanceof Node || isObject(element) && element.nodeType === 1;\n}\n\nfunction isNodeCollection(element) {\n    return element instanceof NodeList || element instanceof HTMLCollection;\n}\n\nfunction toNode(element) {\n    return isNode(element) || isWindow(element) || isDocument(element)\n        ? element\n        : isNodeCollection(element) || isJQuery(element)\n            ? element[0]\n            : isArray(element)\n                ? toNode(element[0])\n                : null;\n}\n\nfunction toNodes(element) {\n    return isNode(element)\n        ? [element]\n        : isNodeCollection(element)\n            ? arrayProto.slice.call(element)\n            : isArray(element)\n                ? element.map(toNode).filter(Boolean)\n                : isJQuery(element)\n                    ? element.toArray()\n                    : [];\n}\n\nfunction attr(element, name, value) {\n\n    if (isObject(name)) {\n        for (var key in name) {\n            attr(element, key, name[key]);\n        }\n        return;\n    }\n\n    if (isUndefined(value)) {\n        element = toNode(element);\n        return element && element.getAttribute(name);\n    } else {\n        toNodes(element).forEach(function (element) {\n\n            if (isFunction(value)) {\n                value = value.call(element, attr(element, name));\n            }\n\n            if (value === null) {\n                removeAttr(element, name);\n            } else {\n                element.setAttribute(name, value);\n            }\n        });\n    }\n\n}\n\nfunction hasAttr(element, name) {\n    return toNodes(element).some(function (element) { return element.hasAttribute(name); });\n}\n\nfunction removeAttr(element, name) {\n    element = toNodes(element);\n    name.split(' ').forEach(function (name) { return element.forEach(function (element) { return element.removeAttribute(name); }\n        ); }\n    );\n}\n\nfunction filterAttr(element, attribute, pattern, replacement) {\n    attr(element, attribute, function (value) { return value ? value.replace(pattern, replacement) : value; });\n}\n\nfunction data(element, attribute) {\n    for (var i = 0, attrs = [attribute, (\"data-\" + attribute)]; i < attrs.length; i++) {\n        if (hasAttr(element, attrs[i])) {\n            return attr(element, attrs[i]);\n        }\n    }\n}\n\nvar win = window;\nvar doc = document;\nvar docEl = doc.documentElement;\n\nvar isRtl = attr(docEl, 'dir') === 'rtl';\n\nfunction isReady() {\n    return doc.readyState === 'complete' || doc.readyState !== 'loading' && !docEl.doScroll;\n}\n\nfunction ready(fn) {\n\n    if (isReady()) {\n        fn();\n        return;\n    }\n\n    var handle = function () {\n            unbind1();\n            unbind2();\n            fn();\n        },\n        unbind1 = on(doc, 'DOMContentLoaded', handle),\n        unbind2 = on(win, 'load', handle);\n}\n\nvar transitioncancel = 'transitioncanceled';\n\nfunction transition(element, props, duration, transition) {\n    if ( duration === void 0 ) duration = 400;\n    if ( transition === void 0 ) transition = 'linear';\n\n\n    return Promise.all(toNodes(element).map(function (element) { return new Promise(function (resolve, reject) {\n\n            for (var name in props) {\n                var value = css(element, name);\n                if (value === '') {\n                    css(element, name, value);\n                }\n            }\n\n            var timer = setTimeout(function () { return trigger(element, transitionend); }, duration);\n\n            once(element, (transitionend + \" \" + transitioncancel), function (ref) {\n                var type = ref.type;\n\n                clearTimeout(timer);\n                removeClass(element, 'uk-transition');\n                css(element, 'transition', '');\n                type === transitioncancel ? reject() : resolve();\n            }, false, function (ref) {\n                var target = ref.target;\n\n                return element === target;\n            });\n\n            addClass(element, 'uk-transition');\n            css(element, assign({transition: (\"all \" + duration + \"ms \" + transition)}, props));\n\n        }); }\n    ));\n\n}\n\nvar Transition = {\n\n    start: transition,\n\n    stop: function stop(element) {\n        trigger(element, transitionend);\n        return Promise.resolve();\n    },\n\n    cancel: function cancel(element) {\n        trigger(element, transitioncancel);\n    },\n\n    inProgress: function inProgress(element) {\n        return hasClass(element, 'uk-transition');\n    }\n\n};\n\nvar animationcancel = 'animationcancel';\nvar animationPrefix = 'uk-animation-';\nvar clsCancelAnimation = 'uk-cancel-animation';\n\nfunction animate(element, animation, duration, origin, out) {\n    var arguments$1 = arguments;\n    if ( duration === void 0 ) duration = 200;\n\n\n    return Promise.all(toNodes(element).map(function (element) { return new Promise(function (resolve, reject) {\n\n            if (hasClass(element, clsCancelAnimation)) {\n                requestAnimationFrame(function () { return Promise.resolve().then(function () { return animate.apply(null, arguments$1).then(resolve, reject); }\n                    ); }\n                );\n                return;\n            }\n\n            var cls = animation + \" \" + animationPrefix + (out ? 'leave' : 'enter');\n\n            if (startsWith(animation, animationPrefix)) {\n\n                if (origin) {\n                    cls += \" \" + animationPrefix + origin;\n                }\n\n                if (out) {\n                    cls += \" \" + animationPrefix + \"reverse\";\n                }\n\n            }\n\n            reset();\n\n            once(element, ((animationend || 'animationend') + \" \" + animationcancel), function (ref) {\n                var type = ref.type;\n\n\n                var hasReset = false;\n\n                if (type === animationcancel) {\n                    reject();\n                    reset();\n                } else {\n                    resolve();\n                    Promise.resolve().then(function () {\n                        hasReset = true;\n                        reset();\n                    });\n                }\n\n                requestAnimationFrame(function () {\n                    if (!hasReset) {\n                        addClass(element, clsCancelAnimation);\n\n                        requestAnimationFrame(function () { return removeClass(element, clsCancelAnimation); });\n                    }\n                });\n\n            }, false, function (ref) {\n                var target = ref.target;\n\n                return element === target;\n            });\n\n            css(element, 'animationDuration', (duration + \"ms\"));\n            addClass(element, cls);\n\n            if (!animationend) {\n                requestAnimationFrame(function () { return Animation.cancel(element); });\n            }\n\n            function reset() {\n                css(element, 'animationDuration', '');\n                removeClasses(element, (animationPrefix + \"\\\\S*\"));\n            }\n\n        }); }\n    ));\n\n}\n\nvar inProgress = new RegExp((animationPrefix + \"(enter|leave)\"));\nvar Animation = {\n\n    in: function in$1(element, animation, duration, origin) {\n        return animate(element, animation, duration, origin, false);\n    },\n\n    out: function out(element, animation, duration, origin) {\n        return animate(element, animation, duration, origin, true);\n    },\n\n    inProgress: function inProgress$1(element) {\n        return inProgress.test(attr(element, 'class'));\n    },\n\n    cancel: function cancel(element) {\n        trigger(element, animationcancel);\n    }\n\n};\n\nfunction isInView(element, top, left) {\n    if ( top === void 0 ) top = 0;\n    if ( left === void 0 ) left = 0;\n\n    return intersectRect(toNode(element).getBoundingClientRect(), {\n        top: top,\n        left: left,\n        bottom: top + height(win),\n        right: left + width(win)\n    });\n}\n\nfunction scrolledOver(element) {\n\n    element = toNode(element);\n\n    var elHeight = element.offsetHeight,\n        top = positionTop(element),\n        vp = height(win),\n        vh = vp + Math.min(0, top - vp),\n        diff = Math.max(0, vp - (height(doc) - (top + elHeight)));\n\n    return clamp(((vh + win.pageYOffset - top) / ((vh + (elHeight - (diff < vp ? diff : 0)) ) / 100)) / 100);\n}\n\nfunction positionTop(element) {\n    var top = 0;\n\n    do {\n\n        top += element.offsetTop;\n\n    } while (element = element.offsetParent);\n\n    return top;\n}\n\nfunction getIndex(i, elements, current) {\n    if ( current === void 0 ) current = 0;\n\n\n    elements = toNodes(elements);\n\n    var length = elements.length;\n\n    i = (isNumeric(i)\n            ? toNumber(i)\n            : i === 'next'\n                ? current + 1\n                : i === 'previous'\n                    ? current - 1\n                    : index(elements, i)\n    ) % length;\n\n    return i < 0 ? i + length : i;\n}\n\nvar voidElements = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuitem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n};\nfunction isVoidElement(element) {\n    return voidElements[toNode(element).tagName.toLowerCase()];\n}\n\nvar Dimensions = {\n\n    ratio: function ratio(dimensions, prop, value) {\n\n        var aProp = prop === 'width' ? 'height' : 'width';\n\n        return ( obj = {}, obj[aProp] = Math.round(value * dimensions[aProp] / dimensions[prop]), obj[prop] = value, obj );\n        var obj;\n    },\n\n    contain: function contain(dimensions, maxDimensions) {\n        var this$1 = this;\n\n        dimensions = assign({}, dimensions);\n\n        each(dimensions, function (_, prop) { return dimensions = dimensions[prop] > maxDimensions[prop]\n            ? this$1.ratio(dimensions, prop, maxDimensions[prop])\n            : dimensions; }\n        );\n\n        return dimensions;\n    },\n\n    cover: function cover(dimensions, maxDimensions) {\n        var this$1 = this;\n\n        dimensions = this.contain(dimensions, maxDimensions);\n\n        each(dimensions, function (_, prop) { return dimensions = dimensions[prop] < maxDimensions[prop]\n            ? this$1.ratio(dimensions, prop, maxDimensions[prop])\n            : dimensions; }\n        );\n\n        return dimensions;\n    }\n\n};\n\nfunction preventClick() {\n\n    var timer = setTimeout(function () { return trigger(doc, 'click'); }, 0);\n\n    once(doc, 'click', function (e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        clearTimeout(timer);\n    }, true);\n\n}\n\nfunction isVisible(element) {\n    return toNodes(element).some(function (element) { return element.offsetHeight; });\n}\n\nvar selInput = 'input,select,textarea,button';\nfunction isInput(element) {\n    return toNodes(element).some(function (element) { return matches(element, selInput); });\n}\n\nfunction empty(element) {\n    element = toNode(element);\n    element.innerHTML = '';\n    return element;\n}\n\nfunction html(parent, html) {\n    parent = toNode(parent);\n    return isUndefined(html)\n        ? parent.innerHTML\n        : append(parent.hasChildNodes() ? empty(parent) : parent, html);\n}\n\nfunction prepend(parent, element) {\n\n    parent = toNode(parent);\n\n    if (!parent.hasChildNodes()) {\n        return append(parent, element);\n    } else {\n        return insertNodes(element, function (element) { return parent.insertBefore(element, parent.firstChild); });\n    }\n}\n\nfunction append(parent, element) {\n    parent = toNode(parent);\n    return insertNodes(element, function (element) { return parent.appendChild(element); });\n}\n\nfunction before(ref, element) {\n    ref = toNode(ref);\n    return insertNodes(element, function (element) { return ref.parentNode.insertBefore(element, ref); });\n}\n\nfunction after(ref, element) {\n    ref = toNode(ref);\n    return insertNodes(element, function (element) { return ref.nextSibling\n        ? before(ref.nextSibling, element)\n        : append(ref.parentNode,element); }\n    );\n}\n\nfunction insertNodes(element, fn) {\n    element = isString(element) ? fragment(element) : element;\n    return 'length' in element ? toNodes(element).map(fn) : fn(element);\n}\n\nfunction remove(element) {\n    toNodes(element).map(function (element) { return element.parentNode && element.parentNode.removeChild(element); });\n}\n\nfunction wrapAll(element, structure) {\n\n    structure = toNode(before(element, structure));\n\n    while (structure.firstChild) {\n        structure = structure.firstChild;\n    }\n\n    append(structure, element);\n\n    return structure;\n}\n\nfunction wrapInner(element, structure) {\n    return toNodes(toNodes(element).map(function (element) { return element.hasChildNodes ? wrapAll(toNodes(element.childNodes), structure) : append(element, structure); }\n    ));\n}\n\nfunction unwrap(element) {\n    toNodes(element)\n        .map(function (element) { return element.parentNode; })\n        .filter(function (value, index, self) { return self.indexOf(value) === index; })\n        .forEach(function (parent) {\n            before(parent, parent.childNodes);\n            remove(parent);\n        });\n}\n\nvar fragmentRE = /^\\s*<(\\w+|!)[^>]*>/;\nvar singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\n\nfunction fragment(html) {\n\n    var matches;\n\n    if (matches = singleTagRE.exec(html)) {\n        return doc.createElement(matches[1]);\n    }\n\n    var container = doc.createElement('div');\n    if (fragmentRE.test(html)) {\n        container.insertAdjacentHTML('beforeend', html.trim());\n    } else {\n        container.textContent = html;\n    }\n\n    return container.childNodes.length > 1 ? toNodes(container.childNodes) : container.firstChild;\n\n}\n\nfunction index(element, ref) {\n    return ref\n        ? toNodes(element).indexOf(toNode(ref))\n        : toNodes((element = toNode(element)) && element.parentNode.children).indexOf(element);\n}\n\nvar cssNumber = {\n    'animation-iteration-count': true,\n    'column-count': true,\n    'fill-opacity': true,\n    'flex-grow': true,\n    'flex-shrink': true,\n    'font-weight': true,\n    'line-height': true,\n    'opacity': true,\n    'order': true,\n    'orphans': true,\n    'widows': true,\n    'z-index': true,\n    'zoom': true\n};\n\nfunction css(element, property, value) {\n\n    return toNodes(element).map(function (element) {\n\n        if (isString(property)) {\n\n            property = propName(property);\n\n            if (isUndefined(value)) {\n                return getStyle(element, property);\n            } else if (!value && value !== 0) {\n                element.style.removeProperty(property);\n            } else {\n                element.style[property] = isNumeric(value) && !cssNumber[property] ? (value + \"px\") : value;\n            }\n\n        } else if (isArray(property)) {\n\n            var styles = getStyles(element);\n\n            return property.reduce(function (props, property) {\n                props[property] = propName(styles[property]);\n                return props;\n            }, {});\n\n        } else if (isObject(property)) {\n            each(property, function (value, property) { return css(element, property, value); });\n        }\n\n        return element;\n\n    })[0];\n\n}\n\nfunction getStyles(element, pseudoElt) {\n    element = toNode(element);\n    return element.ownerDocument.defaultView.getComputedStyle(element, pseudoElt);\n}\n\nfunction getStyle(element, property, pseudoElt) {\n    return getStyles(element, pseudoElt)[property];\n}\n\nvar vars$1 = {};\n\nfunction getCssVar(name) {\n\n    if (!(name in vars$1)) {\n\n        /* usage in css:  .var-name:before { content:\"xyz\" } */\n\n        var element = append(docEl, doc.createElement('div'));\n\n        addClass(element, (\"var-\" + name));\n\n        try {\n\n            vars$1[name] = getStyle(element, 'content', ':before').replace(/^[\"'](.*)[\"']$/, '$1');\n            vars$1[name] = JSON.parse(vars$1[name]);\n\n        } catch (e) {}\n\n        docEl.removeChild(element);\n\n    }\n\n    return vars$1[name];\n\n}\n\nvar cssProps = {};\n\nfunction propName(name) {\n\n    var ret = cssProps[name];\n    if (!ret) {\n        ret = cssProps[name] = vendorPropName(name) || name;\n    }\n    return ret;\n}\n\nvar cssPrefixes = ['webkit', 'moz', 'ms'];\nvar style = doc.createElement('div').style;\n\nfunction vendorPropName(name) {\n\n    name = hyphenate(name);\n\n    if (name in style) {\n        return name;\n    }\n\n    var i = cssPrefixes.length, prefixedName;\n\n    while (i--) {\n        prefixedName = \"-\" + (cssPrefixes[i]) + name;\n        if (prefixedName in style) {\n            return prefixedName;\n        }\n    }\n}\n\nvar supportsClassList;\nvar supportsMultiple;\nvar supportsForce;\n\nfunction addClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    apply(element, args, 'add');\n}\n\nfunction removeClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    apply(element, args, 'remove');\n}\n\nfunction removeClasses(element, cls) {\n    filterAttr(element, 'class', new RegExp((\"(^|\\\\s)\" + cls + \"(?!\\\\S)\"), 'g'), '');\n}\n\nfunction replaceClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    args[0] && removeClass(element, args[0]);\n    args[1] && addClass(element, args[1]);\n}\n\nfunction hasClass(element, cls) {\n    return supportsClassList && toNodes(element).some(function (element) { return element.classList.contains(cls); });\n}\n\nfunction toggleClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\n    if (!supportsClassList || !args.length) {\n        return;\n    }\n\n    args = getArgs(args);\n\n    var force = !isString(args[args.length - 1]) ? args.pop()  : undefined;\n\n    toNodes(element).forEach(function (ref) {\n        var classList = ref.classList;\n\n        for (var i = 0; i < args.length; i++) {\n            supportsForce\n                ? classList.toggle(args[i], force)\n                : (classList[(!isUndefined(force) ? force : !classList.contains(args[i])) ? 'add' : 'remove'](args[i]));\n        }\n    });\n\n}\n\nfunction apply(element, args, fn) {\n    args = getArgs(args).filter(function (arg) { return arg; });\n\n    supportsClassList && args.length && toNodes(element).forEach(function (ref) {\n        var classList = ref.classList;\n\n        supportsMultiple\n            ? classList[fn].apply(classList, args)\n            : args.forEach(function (cls) { return classList[fn](cls); });\n    });\n}\n\nfunction getArgs(args) {\n    return args.reduce(function (args, arg) {\n        args.push.apply(args, isString(arg) && includes(arg, ' ') ? arg.trim().split(' ') : [arg]);\n        return args;\n    }, []);\n}\n\n(function () {\n\n    var list = doc.createElement('_').classList;\n    if (list) {\n        list.add('a', 'b');\n        list.toggle('c', false);\n        supportsMultiple = list.contains('b');\n        supportsForce = !list.contains('c');\n        supportsClassList = true;\n    }\n    list = null;\n\n})();\n\nvar Observer = win.MutationObserver || win.WebKitMutationObserver;\nvar requestAnimationFrame = win.requestAnimationFrame || (function (fn) { return setTimeout(fn, 1000 / 60); });\n\nvar hasTouchEvents = 'ontouchstart' in win;\nvar hasPointerEvents = win.PointerEvent;\nvar hasTouch = 'ontouchstart' in win\n    || win.DocumentTouch && doc instanceof DocumentTouch\n    || navigator.msPointerEnabled && navigator.msMaxTouchPoints // IE 10\n    || navigator.pointerEnabled && navigator.maxTouchPoints; // IE >=11\n\nvar pointerDown = !hasTouch ? 'mousedown' : (\"mousedown \" + (hasTouchEvents ? 'touchstart' : 'pointerdown'));\nvar pointerMove = !hasTouch ? 'mousemove' : (\"mousemove \" + (hasTouchEvents ? 'touchmove' : 'pointermove'));\nvar pointerUp = !hasTouch ? 'mouseup' : (\"mouseup \" + (hasTouchEvents ? 'touchend' : 'pointerup'));\nvar pointerEnter = hasTouch && hasPointerEvents ? 'pointerenter' : 'mouseenter';\nvar pointerLeave = hasTouch && hasPointerEvents ? 'pointerleave' : 'mouseleave';\n\nvar transitionend = prefix('transition', 'transition-end');\nvar animationstart = prefix('animation', 'animation-start');\nvar animationend = prefix('animation', 'animation-end');\n\nfunction getImage(src) {\n\n    return new Promise(function (resolve, reject) {\n        var img = new Image();\n\n        img.onerror = reject;\n        img.onload = function () { return resolve(img); };\n\n        img.src = src;\n    });\n\n}\n\nfunction prefix(name, event) {\n\n    var ucase = classify(name),\n        lowered = classify(event).toLowerCase(),\n        classified = classify(event),\n        element = doc.body || docEl,\n        names = ( obj = {}, obj[name] = lowered, obj[(\"Webkit\" + ucase)] = (\"webkit\" + classified), obj[(\"Moz\" + ucase)] = lowered, obj[(\"o\" + ucase)] = (\"o\" + classified + \" o\" + lowered), obj );\n    var obj;\n\n    for (name in names) {\n        if (element.style[name] !== undefined) {\n            return names[name];\n        }\n    }\n}\n\nfunction on() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n\n    var ref = getArgs$1(args);\n    var target = ref[0];\n    var type = ref[1];\n    var selector = ref[2];\n    var listener = ref[3];\n    var useCapture = ref[4];\n\n    target = toEventTarget(target);\n\n    if (selector) {\n        listener = delegate(target, selector, listener);\n    }\n\n    if (listener.length > 1) {\n        listener = detail(listener);\n    }\n\n    type.split(' ').forEach(function (type) { return target.addEventListener(type, listener, useCapture); });\n    return function () { return off(target, type, listener, useCapture); };\n}\n\nfunction off(target, type, listener, useCapture) {\n    if ( useCapture === void 0 ) useCapture = false;\n\n    type.split(' ').forEach(function (type) { return toEventTarget(target).removeEventListener(type, listener, useCapture); });\n}\n\nfunction once() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n\n    var ref = getArgs$1(args);\n    var element = ref[0];\n    var type = ref[1];\n    var selector = ref[2];\n    var listener = ref[3];\n    var useCapture = ref[4];\n    var condition = ref[5];\n    var off = on(element, type, selector, function (e) {\n            var result = !condition || condition(e);\n            if (result) {\n                off();\n                listener(e, result);\n            }\n        }, useCapture);\n\n    return off;\n}\n\nfunction trigger(target, event, detail) {\n    return toEventTargets(target).reduce(function (notCanceled, target) { return notCanceled && target.dispatchEvent(createEvent(event, true, true, detail)); }\n    , true);\n}\n\nfunction createEvent(e, bubbles, cancelable, detail) {\n    if ( bubbles === void 0 ) bubbles = true;\n    if ( cancelable === void 0 ) cancelable = false;\n\n    if (isString(e)) {\n        var event = doc.createEvent('CustomEvent');\n        event.initCustomEvent(e, bubbles, cancelable, detail);\n        e = event;\n    }\n\n    return e;\n}\n\nfunction getArgs$1(args) {\n\n    if (isString(args[0])) {\n        args[0] = $$1(args[0]);\n    }\n\n    if (isFunction(args[2])) {\n        args.splice(2, 0, false);\n    }\n    return args;\n}\n\nfunction delegate(element, selector, listener) {\n    var this$1 = this;\n\n    return function (e) {\n\n        var target = e.target,\n            current = selector[0] === '>'\n                ? $$(selector, element).filter(function (element) { return within(target, element); })[0]\n                : closest(target, selector);\n\n        if (current) {\n            e.delegate = element;\n            e.current = current;\n\n            listener.call(this$1, e);\n        }\n    }\n}\n\nfunction detail(listener) {\n    return function (e) { return isArray(e.detail) ? listener.apply(listener, [e].concat(e.detail)) : listener(e); };\n}\n\nfunction isEventTarget(target) {\n    return 'EventTarget' in win\n        ? target instanceof EventTarget\n        : 'addEventListener' in target;\n}\n\nfunction toEventTarget(target) {\n    return isEventTarget(target) ? target : toNode(target);\n}\n\nfunction toEventTargets(target) {\n    return isEventTarget(target)\n        ? [target]\n        : isArray(target)\n            ? target.map(toEventTarget).filter(Boolean)\n            : toNodes(target);\n}\n\n/*\n    Based on:\n    Copyright (c) 2016 Wilson Page wilsonpage@me.com\n    https://github.com/wilsonpage/fastdom\n*/\n\nvar fastdom = {\n\n    reads: [],\n    writes: [],\n\n    measure: function measure(task) {\n        this.reads.push(task);\n        scheduleFlush();\n        return task;\n    },\n\n    mutate: function mutate(task) {\n        this.writes.push(task);\n        scheduleFlush();\n        return task;\n    },\n\n    clear: function clear(task) {\n        return remove$1(this.reads, task) || remove$1(this.writes, task);\n    },\n\n    flush: function flush() {\n\n        runTasks(this.reads);\n        runTasks(this.writes.splice(0, this.writes.length));\n\n        this.scheduled = false;\n\n        if (this.reads.length || this.writes.length) {\n            scheduleFlush();\n        }\n\n    }\n\n};\n\nfunction scheduleFlush() {\n    if (!fastdom.scheduled) {\n        fastdom.scheduled = true;\n        requestAnimationFrame(fastdom.flush.bind(fastdom));\n    }\n}\n\nfunction runTasks(tasks) {\n    var task;\n    while (task = tasks.shift()) {\n        task();\n    }\n}\n\nfunction remove$1(array, item) {\n    var index = array.indexOf(item);\n    return !!~index && !!array.splice(index, 1);\n}\n\nfunction MouseTracker() {}\n\nMouseTracker.prototype = {\n\n    positions: [],\n    position: null,\n\n    init: function init() {\n        var this$1 = this;\n\n\n        this.positions = [];\n        this.position = null;\n\n        var ticking = false;\n        this.unbind = on(doc, 'mousemove', function (e) {\n\n            if (ticking) {\n                return;\n            }\n\n            setTimeout(function () {\n\n                var time = Date.now(), length = this$1.positions.length;\n                if (length && (time - this$1.positions[length - 1].time > 100)) {\n                    this$1.positions.splice(0, length);\n                }\n\n                this$1.positions.push({time: time, x: e.pageX, y: e.pageY});\n\n                if (this$1.positions.length > 5) {\n                    this$1.positions.shift();\n                }\n\n                ticking = false;\n            }, 5);\n\n            ticking = true;\n        });\n\n    },\n\n    cancel: function cancel() {\n        if (this.unbind) {\n            this.unbind();\n        }\n    },\n\n    movesTo: function movesTo(target) {\n\n        if (this.positions.length < 2) {\n            return false;\n        }\n\n        var p = offset(target),\n            position = this.positions[this.positions.length - 1],\n            prevPos = this.positions[0];\n\n        if (p.left <= position.x && position.x <= p.right && p.top <= position.y && position.y <= p.bottom) {\n            return false;\n        }\n\n        var points = [\n            [{x: p.left, y: p.top}, {x: p.right, y: p.bottom}],\n            [{x: p.right, y: p.top}, {x: p.left, y: p.bottom}]\n        ];\n\n        if (p.right <= position.x) {\n\n        } else if (p.left >= position.x) {\n            points[0].reverse();\n            points[1].reverse();\n        } else if (p.bottom <= position.y) {\n            points[0].reverse();\n        } else if (p.top >= position.y) {\n            points[1].reverse();\n        }\n\n        return !!points.reduce(function (result, point) {\n            return result + (slope(prevPos, point[0]) < slope(position, point[0]) && slope(prevPos, point[1]) > slope(position, point[1]));\n        }, 0);\n    }\n\n};\n\nfunction slope(a, b) {\n    return (b.y - a.y) / (b.x - a.x);\n}\n\nvar strats = {};\n\n// concat strategy\nstrats.args =\nstrats.created =\nstrats.events =\nstrats.init =\nstrats.ready =\nstrats.connected =\nstrats.disconnected =\nstrats.destroy = function (parentVal, childVal) {\n\n    parentVal = parentVal && !isArray(parentVal) ? [parentVal] : parentVal;\n\n    return childVal\n        ? parentVal\n            ? parentVal.concat(childVal)\n            : isArray(childVal)\n                ? childVal\n                : [childVal]\n        : parentVal;\n};\n\n// update strategy\nstrats.update = function (parentVal, childVal) {\n    return strats.args(parentVal, isFunction(childVal) ? {read: childVal} : childVal);\n};\n\n// property strategy\nstrats.props = function (parentVal, childVal) {\n\n    if (isArray(childVal)) {\n        childVal = childVal.reduce(function (value, key) {\n            value[key] = String;\n            return value;\n        }, {});\n    }\n\n    return strats.methods(parentVal, childVal);\n};\n\n// extend strategy\nstrats.computed =\nstrats.defaults =\nstrats.methods = function (parentVal, childVal) {\n    return childVal\n        ? parentVal\n            ? assign({}, parentVal, childVal)\n            : childVal\n        : parentVal;\n};\n\n// default strategy\nvar defaultStrat = function (parentVal, childVal) {\n    return isUndefined(childVal) ? parentVal : childVal;\n};\n\nfunction mergeOptions(parent, child) {\n\n    var options = {}, key;\n\n    if (child.mixins) {\n        for (var i = 0, l = child.mixins.length; i < l; i++) {\n            parent = mergeOptions(parent, child.mixins[i]);\n        }\n    }\n\n    for (key in parent) {\n        mergeKey(key);\n    }\n\n    for (key in child) {\n        if (!hasOwn(parent, key)) {\n            mergeKey(key);\n        }\n    }\n\n    function mergeKey(key) {\n        options[key] = (strats[key] || defaultStrat)(parent[key], child[key]);\n    }\n\n    return options;\n}\n\nvar id = 0;\n\nvar Player = function Player(el) {\n    this.id = ++id;\n    this.el = toNode(el);\n};\n\nPlayer.prototype.isVideo = function isVideo () {\n    return this.isYoutube() || this.isVimeo() || this.isHTML5();\n};\n\nPlayer.prototype.isHTML5 = function isHTML5 () {\n    return this.el.tagName === 'VIDEO';\n};\n\nPlayer.prototype.isIFrame = function isIFrame () {\n    return this.el.tagName === 'IFRAME';\n};\n\nPlayer.prototype.isYoutube = function isYoutube () {\n    return this.isIFrame() && !!this.el.src.match(/\\/\\/.*?youtube\\.[a-z]+\\/(watch\\?v=[^&\\s]+|embed)|youtu\\.be\\/.*/);\n};\n\nPlayer.prototype.isVimeo = function isVimeo () {\n    return this.isIFrame() && !!this.el.src.match(/vimeo\\.com\\/video\\/.*/);\n};\n\nPlayer.prototype.enableApi = function enableApi () {\n        var this$1 = this;\n\n\n    if (this.ready) {\n        return this.ready;\n    }\n\n    var youtube = this.isYoutube(), vimeo = this.isVimeo(), poller;\n\n    if (youtube || vimeo) {\n\n        return this.ready = new Promise(function (resolve) {\n\n            once(this$1.el, 'load', function () {\n                if (youtube) {\n                    var listener = function () { return post(this$1.el, {event: 'listening', id: this$1.id}); };\n                    poller = setInterval(listener, 100);\n                    listener();\n                }\n            });\n\n            listen(function (data) { return youtube && data.id === this$1.id && data.event === 'onReady' || vimeo && Number(data.player_id) === this$1.id; })\n                .then(function () {\n                    resolve();\n                    poller && clearInterval(poller);\n                });\n\n            attr(this$1.el, 'src', (\"\" + (this$1.el.src) + (includes(this$1.el.src, '?') ? '&' : '?') + (youtube ? 'enablejsapi=1' : (\"api=1&player_id=\" + id))));\n\n        });\n\n    }\n\n    return Promise.resolve();\n\n};\n\nPlayer.prototype.play = function play () {\n        var this$1 = this;\n\n\n    if (!this.isVideo()) {\n        return;\n    }\n\n    if (this.isIFrame()) {\n        this.enableApi().then(function () { return post(this$1.el, {func: 'playVideo', method: 'play'}); });\n    } else if (this.isHTML5()) {\n        this.el.play();\n    }\n};\n\nPlayer.prototype.pause = function pause () {\n        var this$1 = this;\n\n\n    if (!this.isVideo()) {\n        return;\n    }\n\n    if (this.isIFrame()) {\n        this.enableApi().then(function () { return post(this$1.el, {func: 'pauseVideo', method: 'pause'}); });\n    } else if (this.isHTML5()) {\n        this.el.pause();\n    }\n};\n\nPlayer.prototype.mute = function mute () {\n        var this$1 = this;\n\n\n    if (!this.isVideo()) {\n        return;\n    }\n\n    if (this.isIFrame()) {\n        this.enableApi().then(function () { return post(this$1.el, {func: 'mute', method: 'setVolume', value: 0}); });\n    } else if (this.isHTML5()) {\n        this.el.muted = true;\n        attr(this.el, 'muted', '');\n    }\n\n};\n\nfunction post(el, cmd) {\n    try {\n        el.contentWindow.postMessage(JSON.stringify(assign({event: 'command'}, cmd)), '*');\n    } catch (e) {}\n}\n\nfunction listen(cb) {\n\n    return new Promise(function (resolve) {\n\n        once(win, 'message', function (_, data) { return resolve(data); }, false, function (ref) {\n            var data = ref.data;\n\n\n            if (!data || !isString(data)) {\n                return;\n            }\n\n            try {\n                data = JSON.parse(data);\n            } catch (e) {\n                return;\n            }\n\n            return data && cb(data);\n\n        });\n\n    });\n\n}\n\nvar dirs = {\n        width: ['x', 'left', 'right'],\n        height: ['y', 'top', 'bottom']\n    };\n\nfunction positionAt(element, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary) {\n\n    elAttach = getPos(elAttach);\n    targetAttach = getPos(targetAttach);\n\n    var flipped = {element: elAttach, target: targetAttach};\n\n    if (!element || !target) {\n        return flipped;\n    }\n\n    var dim = getDimensions(element),\n        targetDim = getDimensions(target),\n        position = targetDim;\n\n    moveTo(position, elAttach, dim, -1);\n    moveTo(position, targetAttach, targetDim, 1);\n\n    elOffset = getOffsets(elOffset, dim.width, dim.height);\n    targetOffset = getOffsets(targetOffset, targetDim.width, targetDim.height);\n\n    elOffset['x'] += targetOffset['x'];\n    elOffset['y'] += targetOffset['y'];\n\n    position.left += elOffset['x'];\n    position.top += elOffset['y'];\n\n    boundary = getDimensions(boundary || getWindow(element));\n\n    if (flip) {\n        each(dirs, function (ref, prop) {\n            var dir = ref[0];\n            var align = ref[1];\n            var alignFlip = ref[2];\n\n\n            if (!(flip === true || includes(flip, dir))) {\n                return;\n            }\n\n            var elemOffset = elAttach[dir] === align\n                    ? -dim[prop]\n                    : elAttach[dir] === alignFlip\n                        ? dim[prop]\n                        : 0,\n                targetOffset = targetAttach[dir] === align\n                    ? targetDim[prop]\n                    : targetAttach[dir] === alignFlip\n                        ? -targetDim[prop]\n                        : 0;\n\n            if (position[align] < boundary[align] || position[align] + dim[prop] > boundary[alignFlip]) {\n\n                var centerOffset = dim[prop] / 2,\n                    centerTargetOffset = targetAttach[dir] === 'center' ? -targetDim[prop] / 2 : 0;\n\n                elAttach[dir] === 'center' && (\n                    apply(centerOffset, centerTargetOffset)\n                    || apply(-centerOffset, -centerTargetOffset)\n                ) || apply(elemOffset, targetOffset);\n\n            }\n\n            function apply(elemOffset, targetOffset) {\n\n                var newVal = position[align] + elemOffset + targetOffset - elOffset[dir] * 2;\n\n                if (newVal >= boundary[align] && newVal + dim[prop] <= boundary[alignFlip]) {\n                    position[align] = newVal;\n\n                    ['element', 'target'].forEach(function (el) {\n                        flipped[el][dir] = !elemOffset\n                            ? flipped[el][dir]\n                            : flipped[el][dir] === dirs[prop][1]\n                                ? dirs[prop][2]\n                                : dirs[prop][1];\n                    });\n\n                    return true;\n                }\n\n            }\n\n        });\n    }\n\n    offset(element, position);\n\n    return flipped;\n}\n\nfunction offset(element, coordinates) {\n\n    element = toNode(element);\n\n    if (coordinates) {\n\n        var currentOffset = offset(element),\n            pos = css(element, 'position');\n\n        ['left', 'top'].forEach(function (prop) {\n            if (prop in coordinates) {\n                var value = css(element, prop);\n                element.style[prop] = ((coordinates[prop] - currentOffset[prop]) \n                    + toFloat(pos === 'absolute' && value === 'auto' ? position(element)[prop] : value)) + \"px\";\n            }\n        });\n\n        return;\n    }\n\n    return getDimensions(element);\n}\n\nfunction getDimensions(element) {\n\n    element = toNode(element);\n\n    var ref = getWindow(element);\n    var top = ref.pageYOffset;\n    var left = ref.pageXOffset;\n\n    if (isWindow(element)) {\n\n        var height = element.innerHeight,\n            width = element.innerWidth;\n\n        return {\n            top: top,\n            left: left,\n            height: height,\n            width: width,\n            bottom: top + height,\n            right: left + width,\n        }\n    }\n\n    var display = false;\n    if (!isVisible(element)) {\n        display = element.style.display;\n        element.style.display = 'block';\n    }\n\n    var rect = element.getBoundingClientRect();\n\n    if (display !== false) {\n        element.style.display = display;\n    }\n\n    return {\n        height: rect.height,\n        width: rect.width,\n        top: rect.top + top,\n        left: rect.left + left,\n        bottom: rect.bottom + top,\n        right: rect.right + left,\n    }\n}\n\nfunction position(element) {\n    element = toNode(element);\n\n    var parent = offsetParent(element),\n        parentOffset = parent === docEl$1(element) ? {top: 0, left: 0} : offset(parent);\n\n    return ['top', 'left'].reduce(function (props, prop) {\n        var propName = ucfirst(prop);\n        props[prop] -= parentOffset[prop]\n            + (toFloat(css(element, (\"margin\" + propName))) || 0)\n            + (toFloat(css(parent, (\"border\" + propName + \"Width\"))) || 0);\n        return props;\n    }, offset(element));\n}\n\nfunction offsetParent(element) {\n\n    var parent = toNode(element).offsetParent;\n\n    while (parent && css(parent, 'position') === 'static') {\n        parent = parent.offsetParent;\n    }\n\n    return parent || docEl$1(element);\n}\n\nvar height = dimension('height');\nvar width = dimension('width');\n\nfunction dimension(prop) {\n    var propName = ucfirst(prop);\n    return function (element, value) {\n\n        element = toNode(element);\n\n        if (isUndefined(value)) {\n\n            if (isWindow(element)) {\n                return element[(\"inner\" + propName)];\n            }\n\n            if (isDocument(element)) {\n                var doc = element.documentElement;\n                return Math.max(doc.offsetHeight, doc.scrollHeight);\n            }\n\n            value = css(element, prop);\n            value = value === 'auto' ? element[(\"offset\" + propName)] : toFloat(value) || 0;\n\n            return getContentSize(prop, element, value);\n\n        } else {\n\n            css(element, prop, !value && value !== 0\n                ? ''\n                : getContentSize(prop, element, value) + 'px'\n            );\n\n        }\n\n    }\n}\n\nfunction getContentSize(prop, element, value) {\n    return css(element, 'boxSizing') === 'border-box' ? dirs[prop].slice(1).map(ucfirst).reduce(function (value, prop) { return value\n            - toFloat(css(element, (\"padding\" + prop)))\n            - toFloat(css(element, (\"border\" + prop + \"Width\"))); }\n    , value) : value;\n}\n\nfunction getWindow(element) {\n    return isWindow(element) ? element : document$1(element).defaultView;\n}\n\nfunction moveTo(position, attach, dim, factor) {\n    each(dirs, function (ref, prop) {\n        var dir = ref[0];\n        var align = ref[1];\n        var alignFlip = ref[2];\n\n        if (attach[dir] === alignFlip) {\n            position[align] += dim[prop] * factor;\n        } else if (attach[dir] === 'center') {\n            position[align] += dim[prop] * factor / 2;\n        }\n    });\n}\n\nfunction getPos(pos) {\n\n    var x = /left|center|right/, y = /top|center|bottom/;\n\n    pos = (pos || '').split(' ');\n\n    if (pos.length === 1) {\n        pos = x.test(pos[0])\n            ? pos.concat(['center'])\n            : y.test(pos[0])\n                ? ['center'].concat(pos)\n                : ['center', 'center'];\n    }\n\n    return {\n        x: x.test(pos[0]) ? pos[0] : 'center',\n        y: y.test(pos[1]) ? pos[1] : 'center'\n    };\n}\n\nfunction getOffsets(offsets, width, height) {\n\n    var ref = (offsets || '').split(' ');\n    var x = ref[0];\n    var y = ref[1];\n\n    return {\n        x: x ? toFloat(x) * (endsWith(x, '%') ? width / 100 : 1) : 0,\n        y: y ? toFloat(y) * (endsWith(y, '%') ? height / 100 : 1) : 0\n    };\n}\n\nfunction flipPosition(pos) {\n    switch (pos) {\n        case 'left':\n            return 'right';\n        case 'right':\n            return 'left';\n        case 'top':\n            return 'bottom';\n        case 'bottom':\n            return 'top';\n        default:\n            return pos;\n    }\n}\n\nfunction document$1(element) {\n    return toNode(element).ownerDocument;\n}\n\nfunction docEl$1(element) {\n    return document$1(element).documentElement;\n}\n\n/*\n    Based on:\n    Copyright (c) 2010-2016 Thomas Fuchs\n    http://zeptojs.com/\n*/\n\nvar touch = {};\nvar clickTimeout;\nvar swipeTimeout;\nvar tapTimeout;\nvar clicked;\n\nfunction swipeDirection(ref) {\n    var x1 = ref.x1;\n    var x2 = ref.x2;\n    var y1 = ref.y1;\n    var y2 = ref.y2;\n\n    return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down');\n}\n\nfunction cancelAll() {\n    clickTimeout && clearTimeout(clickTimeout);\n    swipeTimeout && clearTimeout(swipeTimeout);\n    tapTimeout && clearTimeout(tapTimeout);\n    clickTimeout = swipeTimeout = tapTimeout = null;\n    touch = {};\n}\n\nready(function () {\n\n    on(doc, 'click', function () { return clicked = true; }, true);\n\n    on(doc, pointerDown, function (e) {\n\n        var target = e.target;\n        var ref = getPos$1(e);\n        var x = ref.x;\n        var y = ref.y;\n        var now = Date.now();\n\n        touch.el = 'tagName' in target ? target : target.parentNode;\n\n        clickTimeout && clearTimeout(clickTimeout);\n\n        touch.x1 = x;\n        touch.y1 = y;\n\n        if (touch.last && now - touch.last <= 250) {\n            touch = {};\n        }\n\n        touch.last = now;\n\n        clicked = e.button > 0;\n\n    });\n\n    on(doc, pointerMove, function (e) {\n\n        var ref = getPos$1(e);\n        var x = ref.x;\n        var y = ref.y;\n\n        touch.x2 = x;\n        touch.y2 = y;\n    });\n\n    on(doc, pointerUp, function (ref) {\n        var target = ref.target;\n\n\n        // swipe\n        if (touch.x2 && Math.abs(touch.x1 - touch.x2) > 30 || touch.y2 && Math.abs(touch.y1 - touch.y2) > 30) {\n\n            swipeTimeout = setTimeout(function () {\n                if (touch.el) {\n                    trigger(touch.el, 'swipe');\n                    trigger(touch.el, (\"swipe\" + (swipeDirection(touch))));\n                }\n                touch = {};\n            });\n\n        // normal tap\n        } else if ('last' in touch) {\n\n            tapTimeout = setTimeout(function () { return touch.el && trigger(touch.el, 'tap'); });\n\n            // trigger single click after 350ms of inactivity\n            if (touch.el && within(target, touch.el)) {\n                clickTimeout = setTimeout(function () {\n                    clickTimeout = null;\n                    if (touch.el && !clicked) {\n                        trigger(touch.el, 'click');\n                    }\n                    touch = {};\n                }, 350);\n            }\n\n        } else {\n            touch = {};\n        }\n    });\n\n    on(doc, 'touchcancel', cancelAll);\n    on(win, 'scroll', cancelAll);\n});\n\nvar touching = false;\non(doc, 'touchstart', function () { return touching = true; }, true);\non(doc, 'click', function () {touching = false;});\non(doc, 'touchcancel', function () { return touching = false; }, true);\n\nfunction isTouch(e) {\n    return touching || e.pointerType === 'touch';\n}\n\nfunction getPos$1(e) {\n    var touches = e.touches;\n    var changedTouches = e.changedTouches;\n    \n    var ref = touches && touches[0] || changedTouches && changedTouches[0] || e;\n    var x = ref.pageX;\n    var y = ref.pageY;\n    return {x: x, y: y};\n}\n\n\n\nvar util = Object.freeze({\n\tbind: bind,\n\thasOwn: hasOwn,\n\tPromise: Promise,\n\tclassify: classify,\n\thyphenate: hyphenate,\n\tcamelize: camelize,\n\tucfirst: ucfirst,\n\tstartsWith: startsWith,\n\tendsWith: endsWith,\n\tincludes: includes,\n\tisArray: isArray,\n\tisFunction: isFunction,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tisWindow: isWindow,\n\tisDocument: isDocument,\n\tisBoolean: isBoolean,\n\tisString: isString,\n\tisNumber: isNumber,\n\tisNumeric: isNumeric,\n\tisUndefined: isUndefined,\n\ttoBoolean: toBoolean,\n\ttoNumber: toNumber,\n\ttoFloat: toFloat,\n\ttoList: toList,\n\ttoMedia: toMedia,\n\tcoerce: coerce,\n\ttoMs: toMs,\n\tswap: swap,\n\tassign: assign,\n\teach: each,\n\tclamp: clamp,\n\tnoop: noop,\n\tintersectRect: intersectRect,\n\tpointInRect: pointInRect,\n\tajax: ajax,\n\t$: $$1,\n\t$$: $$,\n\tquery: query,\n\tqueryAll: queryAll,\n\tfilter: filter,\n\twithin: within,\n\tmatches: matches,\n\tclosest: closest,\n\tparents: parents,\n\tisJQuery: isJQuery,\n\ttoNode: toNode,\n\ttoNodes: toNodes,\n\tattr: attr,\n\thasAttr: hasAttr,\n\tremoveAttr: removeAttr,\n\tfilterAttr: filterAttr,\n\tdata: data,\n\twin: win,\n\tdoc: doc,\n\tdocEl: docEl,\n\tisRtl: isRtl,\n\tisReady: isReady,\n\tready: ready,\n\ttransition: transition,\n\tTransition: Transition,\n\tanimate: animate,\n\tAnimation: Animation,\n\tisInView: isInView,\n\tscrolledOver: scrolledOver,\n\tgetIndex: getIndex,\n\tisVoidElement: isVoidElement,\n\tDimensions: Dimensions,\n\tpreventClick: preventClick,\n\tisVisible: isVisible,\n\tselInput: selInput,\n\tisInput: isInput,\n\tempty: empty,\n\thtml: html,\n\tprepend: prepend,\n\tappend: append,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\twrapAll: wrapAll,\n\twrapInner: wrapInner,\n\tunwrap: unwrap,\n\tfragment: fragment,\n\tindex: index,\n\tcss: css,\n\tgetStyles: getStyles,\n\tgetStyle: getStyle,\n\tgetCssVar: getCssVar,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\tremoveClasses: removeClasses,\n\treplaceClass: replaceClass,\n\thasClass: hasClass,\n\ttoggleClass: toggleClass,\n\tObserver: Observer,\n\trequestAnimationFrame: requestAnimationFrame,\n\thasTouch: hasTouch,\n\tpointerDown: pointerDown,\n\tpointerMove: pointerMove,\n\tpointerUp: pointerUp,\n\tpointerEnter: pointerEnter,\n\tpointerLeave: pointerLeave,\n\ttransitionend: transitionend,\n\tanimationstart: animationstart,\n\tanimationend: animationend,\n\tgetImage: getImage,\n\ton: on,\n\toff: off,\n\tonce: once,\n\ttrigger: trigger,\n\tcreateEvent: createEvent,\n\ttoEventTargets: toEventTargets,\n\tfastdom: fastdom,\n\tMouseTracker: MouseTracker,\n\tmergeOptions: mergeOptions,\n\tPlayer: Player,\n\tpositionAt: positionAt,\n\toffset: offset,\n\tposition: position,\n\theight: height,\n\twidth: width,\n\tflipPosition: flipPosition,\n\tisTouch: isTouch,\n\tgetPos: getPos$1\n});\n\nvar boot = function (UIkit) {\n\n    var connect = UIkit.connect;\n    var disconnect = UIkit.disconnect;\n\n    if (Observer) {\n\n        if (doc.body) {\n\n            init();\n\n        } else {\n\n            (new Observer(function () {\n\n                if (doc.body) {\n                    this.disconnect();\n                    init();\n                }\n\n            })).observe(docEl, {childList: true, subtree: true});\n\n        }\n\n    } else {\n\n        ready(function () {\n            apply(doc.body, connect);\n            on(docEl, 'DOMNodeInserted', function (e) { return apply(e.target, connect); });\n            on(docEl, 'DOMNodeRemoved', function (e) { return apply(e.target, disconnect); });\n        });\n\n    }\n\n    function init() {\n\n        apply(doc.body, connect);\n\n        fastdom.flush();\n\n        (new Observer(function (mutations) { return mutations.forEach(function (ref) {\n                var addedNodes = ref.addedNodes;\n                var removedNodes = ref.removedNodes;\n                var target = ref.target;\n\n\n                for (var i = 0; i < addedNodes.length; i++) {\n                    apply(addedNodes[i], connect);\n                }\n\n                for (i = 0; i < removedNodes.length; i++) {\n                    apply(removedNodes[i], disconnect);\n                }\n\n                UIkit.update(createEvent('update', true, false, {mutation: true}), target, true);\n\n            }); }\n        )).observe(docEl, {\n            childList: true,\n            subtree: true,\n            characterData: true,\n            attributes: true,\n            attributeFilter: ['href']\n        });\n\n        UIkit._initialized = true;\n    }\n\n    function apply(node, fn) {\n\n        if (node.nodeType !== 1 || hasAttr(node, 'uk-no-boot')) {\n            return;\n        }\n\n        fn(node);\n        node = node.firstElementChild;\n        while (node) {\n            var next = node.nextElementSibling;\n            apply(node, fn);\n            node = next;\n        }\n    }\n\n};\n\nvar globalAPI = function (UIkit) {\n\n    var DATA = UIkit.data;\n\n    UIkit.use = function (plugin) {\n\n        if (plugin.installed) {\n            return;\n        }\n\n        plugin.call(null, this);\n        plugin.installed = true;\n\n        return this;\n    };\n\n    UIkit.mixin = function (mixin, component) {\n        component = (isString(component) ? UIkit.components[component] : component) || this;\n        mixin = mergeOptions({}, mixin);\n        mixin.mixins = component.options.mixins;\n        delete component.options.mixins;\n        component.options = mergeOptions(mixin, component.options);\n    };\n\n    UIkit.extend = function (options) {\n\n        options = options || {};\n\n        var Super = this, name = options.name || Super.options.name;\n        var Sub = createClass(name || 'UIkitComponent');\n\n        Sub.prototype = Object.create(Super.prototype);\n        Sub.prototype.constructor = Sub;\n        Sub.options = mergeOptions(Super.options, options);\n\n        Sub['super'] = Super;\n        Sub.extend = Super.extend;\n\n        return Sub;\n    };\n\n    UIkit.update = function (e, element, parents) {\n        if ( parents === void 0 ) parents = false;\n\n\n        e = createEvent(e || 'update');\n\n        if (!element) {\n\n            update(UIkit.instances, e);\n            return;\n\n        }\n\n        element = toNode(element);\n\n        if (parents) {\n\n            do {\n\n                update(element[DATA], e);\n                element = element.parentNode;\n\n            } while (element)\n\n        } else {\n\n            apply(element, function (element) { return update(element[DATA], e); });\n\n        }\n\n    };\n\n    var container;\n    Object.defineProperty(UIkit, 'container', {\n\n        get: function get() {\n            return container || doc.body;\n        },\n\n        set: function set(element) {\n            container = element;\n        }\n\n    });\n\n    function createClass(name) {\n        return new Function((\"return function \" + (classify(name)) + \" (options) { this._init(options); }\"))();\n    }\n\n    function apply(node, fn) {\n\n        if (node.nodeType !== 1) {\n            return;\n        }\n\n        fn(node);\n        node = node.firstElementChild;\n        while (node) {\n            apply(node, fn);\n            node = node.nextElementSibling;\n        }\n    }\n\n    function update(data, e) {\n\n        if (!data) {\n            return;\n        }\n\n        for (var name in data) {\n            if (data[name]._isReady) {\n                data[name]._callUpdate(e);\n            }\n        }\n\n    }\n\n};\n\nvar hooksAPI = function (UIkit) {\n\n    UIkit.prototype._callHook = function (hook) {\n        var this$1 = this;\n\n\n        var handlers = this.$options[hook];\n\n        if (handlers) {\n            handlers.forEach(function (handler) { return handler.call(this$1); });\n        }\n    };\n\n    UIkit.prototype._callReady = function () {\n\n        if (this._isReady) {\n            return;\n        }\n\n        this._isReady = true;\n        this._callHook('ready');\n        this._callUpdate();\n    };\n\n    UIkit.prototype._callConnected = function () {\n        var this$1 = this;\n\n\n        if (this._connected) {\n            return;\n        }\n\n        if (!includes(UIkit.elements, this.$options.el)) {\n            UIkit.elements.push(this.$options.el);\n        }\n\n        UIkit.instances[this._uid] = this;\n\n        this._initEvents();\n\n        this._callHook('connected');\n        this._connected = true;\n\n        this._initObserver();\n\n        if (!this._isReady) {\n            ready(function () { return this$1._callReady(); });\n        }\n\n        this._callUpdate();\n    };\n\n    UIkit.prototype._callDisconnected = function () {\n\n        if (!this._connected) {\n            return;\n        }\n\n        if (this._observer) {\n            this._observer.disconnect();\n            this._observer = null;\n        }\n\n        var index = UIkit.elements.indexOf(this.$options.el);\n\n        if (~index) {\n            UIkit.elements.splice(index, 1);\n        }\n\n        delete UIkit.instances[this._uid];\n\n        this._unbindEvents();\n        this._callHook('disconnected');\n\n        this._connected = false;\n\n    };\n\n    UIkit.prototype._callUpdate = function (e) {\n        var this$1 = this;\n\n\n        e = createEvent(e || 'update');\n\n        var type = e.type;\n        var detail = e.detail;\n\n        if (type === 'update' && detail && detail.mutation) {\n            this._computeds = {};\n        }\n\n        var updates = this.$options.update;\n\n        if (!updates) {\n            return;\n        }\n\n        updates.forEach(function (update, i) {\n\n            if (type !== 'update' && !includes(update.events, type)) {\n                return;\n            }\n\n            if (update.read && !includes(fastdom.reads, this$1._frames.reads[i])) {\n                this$1._frames.reads[i] = fastdom.measure(function () {\n                    update.read.call(this$1, e);\n                    delete this$1._frames.reads[i];\n                });\n            }\n\n            if (update.write && !includes(fastdom.writes, this$1._frames.writes[i])) {\n                this$1._frames.writes[i] = fastdom.mutate(function () {\n                    update.write.call(this$1, e);\n                    delete this$1._frames.writes[i];\n                });\n            }\n\n        });\n\n    };\n\n};\n\nvar stateAPI = function (UIkit) {\n\n    var uid = 0;\n\n    UIkit.prototype.props = {};\n\n    UIkit.prototype._init = function (options) {\n\n        options = options || {};\n        options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n        this.$el = null;\n        this.$name = UIkit.prefix + hyphenate(this.$options.name);\n        this.$props = {};\n\n        this._frames = {reads: {}, writes: {}};\n        this._events = [];\n\n        this._uid = uid++;\n        this._initData();\n        this._initMethods();\n        this._initComputeds();\n        this._callHook('created');\n\n        if (options.el) {\n            this.$mount(options.el);\n        }\n    };\n\n    UIkit.prototype._initData = function () {\n        var this$1 = this;\n\n\n        var ref = this.$options;\n        var defaults = ref.defaults;\n        var data$$1 = ref.data; if ( data$$1 === void 0 ) data$$1 = {};\n        var args = ref.args; if ( args === void 0 ) args = [];\n        var props = ref.props; if ( props === void 0 ) props = {};\n        var el = ref.el;\n\n        if (args.length && isArray(data$$1)) {\n            data$$1 = data$$1.slice(0, args.length).reduce(function (data$$1, value, index) {\n                if (isPlainObject(value)) {\n                    assign(data$$1, value);\n                } else {\n                    data$$1[args[index]] = value;\n                }\n                return data$$1;\n            }, {});\n        }\n\n        for (var key in defaults) {\n            this$1.$props[key] = this$1[key] = hasOwn(data$$1, key) && !isUndefined(data$$1[key])\n                ? coerce(props[key], data$$1[key], el)\n                : isArray(defaults[key])\n                    ? defaults[key].concat()\n                    : defaults[key];\n        }\n    };\n\n    UIkit.prototype._initMethods = function () {\n        var this$1 = this;\n\n\n        var methods = this.$options.methods;\n\n        if (methods) {\n            for (var key in methods) {\n                this$1[key] = bind(methods[key], this$1);\n            }\n        }\n    };\n\n    UIkit.prototype._initComputeds = function () {\n        var this$1 = this;\n\n\n        var computed = this.$options.computed;\n\n        this._computeds = {};\n\n        if (computed) {\n            for (var key in computed) {\n                registerComputed(this$1, key, computed[key]);\n            }\n        }\n    };\n\n    UIkit.prototype._initProps = function (props) {\n        var this$1 = this;\n\n\n        this._computeds = {};\n        assign(this.$props, props || getProps(this.$options, this.$name));\n\n        var exclude = [this.$options.computed, this.$options.methods];\n        for (var key in this$1.$props) {\n            if (notIn(exclude, key)) {\n                this$1[key] = this$1.$props[key];\n            }\n        }\n    };\n\n    UIkit.prototype._initEvents = function () {\n        var this$1 = this;\n\n\n        var events = this.$options.events;\n\n        if (events) {\n\n            events.forEach(function (event) {\n\n                if (!hasOwn(event, 'handler')) {\n                    for (var key in event) {\n                        registerEvent(this$1, event[key], key);\n                    }\n                } else {\n                    registerEvent(this$1, event);\n                }\n\n            });\n        }\n    };\n\n    UIkit.prototype._unbindEvents = function () {\n        this._events.forEach(function (unbind) { return unbind(); });\n        this._events = [];\n    };\n\n    UIkit.prototype._initObserver = function () {\n        var this$1 = this;\n\n\n        var ref = this.$options;\n        var attrs = ref.attrs;\n        var props = ref.props;\n        var el = ref.el;\n        if (this._observer || !props || !attrs || !Observer) {\n            return;\n        }\n\n        attrs = isArray(attrs) ? attrs : Object.keys(props).map(function (key) { return hyphenate(key); });\n\n        this._observer = new Observer(function () {\n\n            var data$$1 = getProps(this$1.$options, this$1.$name);\n            if (attrs.some(function (key) { return !isUndefined(data$$1[key]) && data$$1[key] !== this$1.$props[key]; })) {\n                this$1.$reset(data$$1);\n            }\n\n        });\n\n        this._observer.observe(el, {attributes: true, attributeFilter: attrs.concat([this.$name, (\"data-\" + (this.$name))])});\n    };\n\n    function getProps(opts, name) {\n\n        var data$$1 = {};\n        var args = opts.args; if ( args === void 0 ) args = [];\n        var props = opts.props; if ( props === void 0 ) props = {};\n        var el = opts.el;\n        var key, prop;\n\n        if (!props) {\n            return data$$1;\n        }\n\n        for (key in props) {\n            prop = hyphenate(key);\n            if (hasAttr(el, prop)) {\n\n                var value = coerce(props[key], attr(el, prop), el);\n\n                if (prop === 'target' && (!value || startsWith(value, '_'))) {\n                    continue;\n                }\n\n                data$$1[key] = value;\n            }\n        }\n\n        var options = parseOptions(data(el, name), args);\n\n        for (key in options) {\n            prop = camelize(key);\n            if (props[prop] !== undefined) {\n                data$$1[prop] = coerce(props[prop], options[key], el);\n            }\n        }\n\n        return data$$1;\n    }\n\n    function parseOptions(options, args) {\n        if ( args === void 0 ) args = [];\n\n\n        try {\n\n            return !options\n                ? {}\n                : startsWith(options, '{')\n                    ? JSON.parse(options)\n                    : args.length && !includes(options, ':')\n                        ? (( obj = {}, obj[args[0]] = options, obj ))\n                        : options.split(';').reduce(function (options, option) {\n                            var ref = option.split(/:(.+)/);\n                            var key = ref[0];\n                            var value = ref[1];\n                            if (key && value) {\n                                options[key.trim()] = value.trim();\n                            }\n                            return options;\n                        }, {});\n            var obj;\n\n        } catch (e) {\n            return {};\n        }\n\n    }\n\n    function registerComputed(component, key, cb) {\n        Object.defineProperty(component, key, {\n\n            enumerable: true,\n\n            get: function get() {\n\n                var _computeds = component._computeds;\n                var $props = component.$props;\n                var $el = component.$el;\n\n                if (!hasOwn(_computeds, key)) {\n                    _computeds[key] = cb.call(component, $props, $el);\n                }\n\n                return _computeds[key];\n            },\n\n            set: function set(value) {\n                component._computeds[key] = value;\n            }\n\n        });\n    }\n\n    function registerEvent(component, event, key) {\n\n        if (!isPlainObject(event)) {\n            event = ({name: key, handler: event});\n        }\n\n        var name = event.name;\n        var el = event.el;\n        var delegate = event.delegate;\n        var self = event.self;\n        var filter = event.filter;\n        var handler = event.handler;\n        el = isFunction(el)\n            ? el.call(component)\n            : el || component.$el;\n\n        if (isArray(el)) {\n            el.forEach(function (el) { return registerEvent(component, assign({}, event, {el: el}), key); });\n            return;\n        }\n\n        if (!el || filter && !filter.call(component)) {\n            return;\n        }\n\n        handler = detail(isString(handler) ? component[handler] : bind(handler, component));\n\n        if (self) {\n            handler = selfFilter(handler);\n        }\n\n        component._events.push(\n            on(\n                el,\n                name,\n                !delegate\n                    ? null\n                    : isString(delegate)\n                        ? delegate\n                        : delegate.call(component),\n                handler\n            )\n        );\n\n    }\n\n    function selfFilter(handler) {\n        return function selfHandler(e) {\n            if (e.target === e.currentTarget || e.target === e.current) {\n                return handler.call(null, e);\n            }\n        }\n    }\n\n    function notIn(options, key) {\n        return options.every(function (arr) { return !arr || !hasOwn(arr, key); });\n    }\n\n    function detail(listener) {\n        return function (e) { return isArray(e.detail) ? listener.apply(listener, [e].concat(e.detail)) : listener(e); };\n    }\n\n};\n\nvar instanceAPI = function (UIkit) {\n\n    var DATA = UIkit.data;\n\n    UIkit.prototype.$mount = function (el) {\n\n        var name = this.$options.name;\n\n        if (!el[DATA]) {\n            el[DATA] = {};\n        }\n\n        if (el[DATA][name]) {\n            return;\n        }\n\n        el[DATA][name] = this;\n\n        this.$el = this.$options.el = this.$options.el || el;\n\n        this._initProps();\n\n        this._callHook('init');\n\n        if (within(el, docEl)) {\n            this._callConnected();\n        }\n    };\n\n    UIkit.prototype.$emit = function (e) {\n        this._callUpdate(e);\n    };\n\n    UIkit.prototype.$update = function (e, parents) {\n        UIkit.update(e, this.$options.el, parents);\n    };\n\n    UIkit.prototype.$reset = function (data) {\n        this._callDisconnected();\n        this._initProps(data);\n        this._callConnected();\n    };\n\n    UIkit.prototype.$destroy = function (removeEl) {\n        if ( removeEl === void 0 ) removeEl = false;\n\n\n        var ref = this.$options;\n        var el = ref.el;\n        var name = ref.name;\n\n        if (el) {\n            this._callDisconnected();\n        }\n\n        this._callHook('destroy');\n\n        if (!el || !el[DATA]) {\n            return;\n        }\n\n        delete el[DATA][name];\n\n        if (!Object.keys(el[DATA]).length) {\n            delete el[DATA];\n        }\n\n        if (removeEl) {\n            remove(this.$el);\n        }\n    };\n\n};\n\nvar componentAPI = function (UIkit) {\n\n    var DATA = UIkit.data;\n\n    UIkit.components = {};\n\n    UIkit.component = function (id, options) {\n\n        var name = camelize(id);\n\n        if (isPlainObject(options)) {\n            options.name = name;\n            options = UIkit.extend(options);\n        } else if (isUndefined(options)) {\n            return UIkit.components[name]\n        } else {\n            options.options.name = name;\n        }\n\n        UIkit.components[name] = options;\n\n        UIkit[name] = function (element, data) {\n            var i = arguments.length, argsArray = Array(i);\n            while ( i-- ) argsArray[i] = arguments[i];\n\n\n            if (isPlainObject(element)) {\n                return new UIkit.components[name]({data: element});\n            }\n\n            if (UIkit.components[name].options.functional) {\n                return new UIkit.components[name]({data: [].concat( argsArray )});\n            }\n\n            return element && element.nodeType ? init(element) : $$(element).map(init)[0];\n\n            function init(element) {\n                return UIkit.getComponent(element, name) || new UIkit.components[name]({el: element, data: data || {}});\n            }\n\n        };\n\n        if (UIkit._initialized && !options.options.functional) {\n            fastdom.measure(function () { return UIkit[name]((\"[uk-\" + id + \"],[data-uk-\" + id + \"]\")); });\n        }\n\n        return UIkit.components[name];\n    };\n\n    UIkit.getComponents = function (element) { return element && (element = isJQuery(element) ? element[0] : element) && element[DATA] || {}; };\n    UIkit.getComponent = function (element, name) { return UIkit.getComponents(element)[name]; };\n\n    UIkit.connect = function (node) {\n\n        var name;\n\n        if (node[DATA]) {\n            for (name in node[DATA]) {\n                node[DATA][name]._callConnected();\n            }\n        }\n\n        for (var i = 0; i < node.attributes.length; i++) {\n\n            name = node.attributes[i].name;\n\n            if (startsWith(name, 'uk-') || startsWith(name, 'data-uk-')) {\n\n                name = camelize(name.replace('data-uk-', '').replace('uk-', ''));\n\n                if (UIkit[name]) {\n                    UIkit[name](node);\n                }\n            }\n        }\n\n    };\n\n    UIkit.disconnect = function (node) {\n        for (var name in node[DATA]) {\n            node[DATA][name]._callDisconnected();\n        }\n    };\n\n};\n\nvar UIkit$2 = function (options) {\n    this._init(options);\n};\n\nUIkit$2.util = util;\nUIkit$2.data = '__uikit__';\nUIkit$2.prefix = 'uk-';\nUIkit$2.options = {};\nUIkit$2.instances = {};\nUIkit$2.elements = [];\n\nglobalAPI(UIkit$2);\nhooksAPI(UIkit$2);\nstateAPI(UIkit$2);\ninstanceAPI(UIkit$2);\ncomponentAPI(UIkit$2);\n\nvar Class = {\n\n    init: function init() {\n        addClass(this.$el, this.$name);\n    }\n\n};\n\nvar Container = {\n\n    props: {\n        container: Boolean\n    },\n\n    defaults: {\n        container: true\n    },\n\n    computed: {\n\n        container: function container(ref) {\n            var container = ref.container;\n\n            return container === true && UIkit$2.container || container && $(container) || UIkit$2.container;\n        }\n\n    }\n\n};\n\nvar Togglable = {\n\n    props: {\n        cls: Boolean,\n        animation: 'list',\n        duration: Number,\n        origin: String,\n        transition: String,\n        queued: Boolean\n    },\n\n    defaults: {\n        cls: false,\n        animation: [false],\n        duration: 200,\n        origin: false,\n        transition: 'linear',\n        queued: false,\n\n        initProps: {\n            overflow: '',\n            height: '',\n            paddingTop: '',\n            paddingBottom: '',\n            marginTop: '',\n            marginBottom: ''\n        },\n\n        hideProps: {\n            overflow: 'hidden',\n            height: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            marginTop: 0,\n            marginBottom: 0\n        }\n\n    },\n\n    computed: {\n\n        hasAnimation: function hasAnimation(ref) {\n            var animation = ref.animation;\n\n            return !!animation[0];\n        },\n\n        hasTransition: function hasTransition(ref) {\n            var animation = ref.animation;\n\n            return this.hasAnimation && animation[0] === true;\n        }\n\n    },\n\n    methods: {\n\n        toggleElement: function toggleElement(targets, show, animate) {\n            var this$1 = this;\n\n            return new Promise(function (resolve) {\n\n                targets = toNodes(targets);\n\n                var all = function (targets) { return Promise.all(targets.map(function (el) { return this$1._toggleElement(el, show, animate); })); },\n                    toggled = targets.filter(function (el) { return this$1.isToggled(el); }),\n                    untoggled = targets.filter(function (el) { return !includes(toggled, el); }),\n                    p;\n\n                if (!this$1.queued || !isUndefined(animate) || !isUndefined(show) || !this$1.hasAnimation || targets.length < 2) {\n\n                    p = all(untoggled.concat(toggled));\n\n                } else {\n\n                    var body = doc.body,\n                        scroll = body.scrollTop,\n                        el = toggled[0],\n                        inProgress = Animation.inProgress(el) && hasClass(el, 'uk-animation-leave')\n                            || Transition.inProgress(el) && el.style.height === '0px';\n\n                    p = all(toggled);\n\n                    if (!inProgress) {\n                        p = p.then(function () {\n                            var p = all(untoggled);\n                            body.scrollTop = scroll;\n                            return p;\n                        });\n                    }\n\n                }\n\n                p.then(resolve, noop);\n\n            });\n        },\n\n        toggleNow: function toggleNow(targets, show) {\n            var this$1 = this;\n\n            return new Promise(function (resolve) { return Promise.all(toNodes(targets).map(function (el) { return this$1._toggleElement(el, show, false); })).then(resolve, noop); });\n        },\n\n        isToggled: function isToggled(el) {\n            var nodes = toNodes(el || this.$el);\n            return this.cls\n                ? hasClass(nodes, this.cls.split(' ')[0])\n                : !hasAttr(nodes, 'hidden');\n        },\n\n        updateAria: function updateAria(el) {\n            if (this.cls === false) {\n                attr(el, 'aria-hidden', !this.isToggled(el));\n            }\n        },\n\n        _toggleElement: function _toggleElement(el, show, animate) {\n            var this$1 = this;\n\n\n            show = isBoolean(show)\n                ? show\n                : Animation.inProgress(el)\n                    ? hasClass(el, 'uk-animation-leave')\n                    : Transition.inProgress(el)\n                        ? el.style.height === '0px'\n                        : !this.isToggled(el);\n\n            if (!trigger(el, (\"before\" + (show ? 'show' : 'hide')), [this])) {\n                return Promise.reject();\n            }\n\n            var promise = (animate === false || !this.hasAnimation\n                    ? this._toggleImmediate\n                    : this.hasTransition\n                        ? this._toggleHeight\n                        : this._toggleAnimation\n            )(el, show);\n\n            trigger(el, show ? 'show' : 'hide', [this]);\n\n            return promise.then(function () {\n                trigger(el, show ? 'shown' : 'hidden', [this$1]);\n                UIkit$2.update(null, el);\n            });\n        },\n\n        _toggle: function _toggle(el, toggled) {\n\n            if (this.cls) {\n                toggleClass(el, this.cls, includes(this.cls, ' ') ? undefined : toggled);\n            } else {\n                attr(el, 'hidden', !toggled ? '' : null);\n            }\n\n            $$('[autofocus]', el).some(function (el) { return isVisible(el) && (el.focus() || true); });\n\n            this.updateAria(el);\n            UIkit$2.update(null, el);\n        },\n\n        _toggleImmediate: function _toggleImmediate(el, show) {\n            this._toggle(el, show);\n            return Promise.resolve();\n        },\n\n        _toggleHeight: function _toggleHeight(el, show) {\n            var this$1 = this;\n\n\n            var inProgress = Transition.inProgress(el),\n                inner = el.hasChildNodes ? toFloat(css(el.firstElementChild, 'marginTop')) + toFloat(css(el.lastElementChild, 'marginBottom')) : 0,\n                currentHeight = isVisible(el) ? height(el) + (inProgress ? 0 : inner) : 0,\n                endHeight;\n\n            Transition.cancel(el);\n\n            if (!this.isToggled(el)) {\n                this._toggle(el, true);\n            }\n\n            height(el, '');\n\n            // Update child components first\n            fastdom.flush();\n\n            endHeight = height(el) + (inProgress ? 0 : inner);\n            height(el, currentHeight);\n\n            return (show\n                ? Transition.start(el, assign({}, this.initProps, {overflow: 'hidden', height: endHeight}), Math.round(this.duration * (1 - currentHeight / endHeight)), this.transition)\n                : Transition.start(el, this.hideProps, Math.round(this.duration * (currentHeight / endHeight)), this.transition).then(function () { return this$1._toggle(el, false); })\n            ).then(function () { return css(el, this$1.initProps); });\n\n        },\n\n        _toggleAnimation: function _toggleAnimation(el, show) {\n            var this$1 = this;\n\n\n            Animation.cancel(el);\n\n            if (show) {\n                this._toggle(el, true);\n                return Animation.in(el, this.animation[0], this.duration, this.origin);\n            }\n\n            return Animation.out(el, this.animation[1] || this.animation[0], this.duration, this.origin).then(function () { return this$1._toggle(el, false); });\n        }\n\n    }\n\n};\n\nvar active;\n\nvar Modal = {\n\n    mixins: [Class, Container, Togglable],\n\n    props: {\n        clsPanel: String,\n        selClose: String,\n        escClose: Boolean,\n        bgClose: Boolean,\n        stack: Boolean\n    },\n\n    defaults: {\n        cls: 'uk-open',\n        escClose: true,\n        bgClose: true,\n        overlay: true,\n        stack: false\n    },\n\n    computed: {\n\n        panel: function panel(ref, $el) {\n            var clsPanel = ref.clsPanel;\n\n            return $$1((\".\" + clsPanel), $el);\n        },\n\n        transitionElement: function transitionElement() {\n            return this.panel;\n        },\n\n        transitionDuration: function transitionDuration() {\n            return toMs(css(this.transitionElement, 'transitionDuration'));\n        }\n\n    },\n\n    events: [\n\n        {\n\n            name: 'click',\n\n            delegate: function delegate() {\n                return this.selClose;\n            },\n\n            handler: function handler(e) {\n                e.preventDefault();\n                this.hide();\n            }\n\n        },\n\n        {\n\n            name: 'toggle',\n\n            handler: function handler(e) {\n\n                if (e.defaultPrevented) {\n                    return;\n                }\n\n                e.preventDefault();\n                this.toggle();\n            }\n\n        },\n\n        {\n\n            name: 'show',\n\n            self: true,\n\n            handler: function handler() {\n\n                if (!hasClass(docEl, this.clsPage)) {\n                    this.scrollbarWidth = width(win) - docEl.offsetWidth;\n                    css(doc.body, 'overflowY', this.scrollbarWidth && this.overlay ? 'scroll' : '');\n                }\n\n                addClass(docEl, this.clsPage);\n\n            }\n\n        },\n\n        {\n\n            name: 'hidden',\n\n            self: true,\n\n            handler: function handler() {\n                var this$1 = this;\n\n\n                var found, prev = this.prev;\n\n                while (prev) {\n\n                    if (prev.clsPage === this$1.clsPage) {\n                        found = true;\n                        break;\n                    }\n\n                    prev = prev.prev;\n\n                }\n\n                if (!found) {\n                    removeClass(docEl, this.clsPage);\n\n                }\n\n                !this.prev && css(doc.body, 'overflowY', '');\n            }\n\n        }\n\n    ],\n\n    methods: {\n\n        toggle: function toggle() {\n            return this.isToggled() ? this.hide() : this.show();\n        },\n\n        show: function show() {\n\n            if (this.isToggled()) {\n                return;\n            }\n\n            if (this.container && this.$el.parentNode !== this.container) {\n                append(this.container, this.$el);\n                this._callConnected();\n            }\n\n            var prev = active && active !== this && active;\n\n            active = this;\n\n            if (prev) {\n                if (this.stack) {\n                    this.prev = prev;\n                } else {\n                    prev.hide().then(this.show);\n                    return;\n                }\n            }\n\n            registerEvents();\n\n            return this.toggleNow(this.$el, true);\n        },\n\n        hide: function hide() {\n\n            if (!this.isToggled()) {\n                return;\n            }\n\n            active = active && active !== this && active || this.prev;\n\n            if (!active) {\n                deregisterEvents();\n            }\n\n            return this.toggleNow(this.$el, false);\n        },\n\n        getActive: function getActive() {\n            return active;\n        },\n\n        _toggleImmediate: function _toggleImmediate(el, show) {\n            var this$1 = this;\n\n            return new Promise(function (resolve) { return requestAnimationFrame(function () {\n                    this$1._toggle(el, show);\n\n                    if (this$1.transitionDuration) {\n                        once(this$1.transitionElement, transitionend, resolve, false, function (e) { return e.target === this$1.transitionElement; });\n                    } else {\n                        resolve();\n                    }\n                }); }\n            );\n        }\n\n    }\n\n};\n\nvar events;\n\nfunction registerEvents() {\n\n    if (events) {\n        return;\n    }\n\n    events = [\n        on(docEl, 'click', function (ref) {\n            var target = ref.target;\n            var defaultPrevented = ref.defaultPrevented;\n\n            if (active && active.bgClose && !defaultPrevented && !within(target, active.panel)) {\n                active.hide();\n            }\n        }),\n        on(doc, 'keydown', function (e) {\n            if (e.keyCode === 27 && active && active.escClose) {\n                e.preventDefault();\n                active.hide();\n            }\n        })\n    ];\n}\n\nfunction deregisterEvents() {\n    events && events.forEach(function (unbind) { return unbind(); });\n    events = null;\n}\n\nvar Position = {\n\n    props: {\n        pos: String,\n        offset: null,\n        flip: Boolean,\n        clsPos: String\n    },\n\n    defaults: {\n        pos: (\"bottom-\" + (!isRtl ? 'left' : 'right')),\n        flip: true,\n        offset: false,\n        clsPos: ''\n    },\n\n    computed: {\n\n        pos: function pos(ref) {\n            var pos = ref.pos;\n\n            return (pos + (!includes(pos, '-') ? '-center' : '')).split('-');\n        },\n\n        dir: function dir() {\n            return this.pos[0];\n        },\n\n        align: function align() {\n            return this.pos[1];\n        }\n\n    },\n\n    methods: {\n\n        positionAt: function positionAt$1(element, target, boundary) {\n\n            removeClasses(element, ((this.clsPos) + \"-(top|bottom|left|right)(-[a-z]+)?\"));\n            css(element, {top: '', left: ''});\n\n            var offset = toNumber(this.offset) || 0,\n                axis = this.getAxis();\n            var ref = positionAt(\n                    element,\n                    target,\n                    axis === 'x' ? ((flipPosition(this.dir)) + \" \" + (this.align)) : ((this.align) + \" \" + (flipPosition(this.dir))),\n                    axis === 'x' ? ((this.dir) + \" \" + (this.align)) : ((this.align) + \" \" + (this.dir)),\n                    axis === 'x' ? (\"\" + (this.dir === 'left' ? -1 * offset : offset)) : (\" \" + (this.dir === 'top' ? -1 * offset : offset)),\n                    null,\n                    this.flip,\n                    boundary\n                ).target;\n            var x = ref.x;\n            var y = ref.y;\n\n            this.dir = axis === 'x' ? x : y;\n            this.align = axis === 'x' ? y : x;\n\n            toggleClass(element, ((this.clsPos) + \"-\" + (this.dir) + \"-\" + (this.align)), this.offset === false);\n\n        },\n\n        getAxis: function getAxis() {\n            return this.dir === 'top' || this.dir === 'bottom' ? 'y' : 'x';\n        }\n\n    }\n\n};\n\nvar mixin = function (UIkit) {\n\n    UIkit.mixin.class = Class;\n    UIkit.mixin.container = Container;\n    UIkit.mixin.modal = Modal;\n    UIkit.mixin.position = Position;\n    UIkit.mixin.togglable = Togglable;\n\n};\n\nvar Accordion = function (UIkit) {\n\n    UIkit.component('accordion', {\n\n        mixins: [Class, Togglable],\n\n        props: {\n            targets: String,\n            active: null,\n            collapsible: Boolean,\n            multiple: Boolean,\n            toggle: String,\n            content: String,\n            transition: String\n        },\n\n        defaults: {\n            targets: '> *',\n            active: false,\n            animation: [true],\n            collapsible: true,\n            multiple: false,\n            clsOpen: 'uk-open',\n            toggle: '> .uk-accordion-title',\n            content: '> .uk-accordion-content',\n            transition: 'ease'\n        },\n\n        computed: {\n\n            items: function items(ref, $el) {\n                var targets = ref.targets;\n\n                return $$(targets, $el);\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.targets) + \" \" + (this.$props.toggle));\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.toggle(index($$(((this.targets) + \" \" + (this.$props.toggle)), this.$el), e.current));\n                }\n\n            }\n\n        ],\n\n        ready: function ready() {\n            var active = this.active !== false && this.items[Number(this.active)] && !hasClass(active, this.clsOpen);\n            if (active) {\n                this.toggle(active, false);\n            }\n        },\n\n        update: function update() {\n            var this$1 = this;\n\n\n            this.items.forEach(function (el) { return this$1.toggleNow($$1(this$1.content, el), hasClass(el, this$1.clsOpen)); });\n\n            var active = !this.collapsible && !hasClass(this.items, this.clsOpen) && this.items[0];\n            if (active) {\n                this.toggle(active, false);\n            }\n        },\n\n        methods: {\n\n            toggle: function toggle(item, animate) {\n                var this$1 = this;\n\n\n                var index = getIndex(item, this.items),\n                    active = filter(this.items, (\".\" + (this.clsOpen)));\n\n                item = this.items[index];\n\n                item && [item]\n                    .concat(!this.multiple && !includes(active, item) && active || [])\n                    .forEach(function (el) {\n\n                        var isItem = el === item, state = isItem && !hasClass(el, this$1.clsOpen);\n\n                        if (!state && isItem && !this$1.collapsible && active.length < 2) {\n                            return;\n                        }\n\n                        toggleClass(el, this$1.clsOpen, state);\n\n                        var content = el._wrapper ? el._wrapper.firstElementChild : $$1(this$1.content, el);\n\n                        if (!el._wrapper) {\n                            el._wrapper = wrapAll(content, '<div>');\n                            attr(el._wrapper, 'hidden', state ? '' : null);\n                        }\n\n                        this$1._toggleImmediate(content, true);\n                        this$1.toggleElement(el._wrapper, state, animate).then(function () {\n                            if (hasClass(el, this$1.clsOpen) === state) {\n\n                                if (!state) {\n                                    this$1._toggleImmediate(content, false);\n                                }\n\n                                el._wrapper = null;\n                                unwrap(content);\n                            }\n                        });\n\n                    });\n            }\n\n        }\n\n    });\n\n};\n\nvar Alert = function (UIkit) {\n\n    UIkit.component('alert', {\n\n        attrs: true,\n\n        mixins: [Class, Togglable],\n\n        args: 'animation',\n\n        props: {\n            close: String\n        },\n\n        defaults: {\n            animation: [true],\n            selClose: '.uk-alert-close',\n            duration: 150,\n            hideProps: assign({opacity: 0}, Togglable.defaults.hideProps)\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return this.selClose;\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.close();\n                }\n\n            }\n\n        ],\n\n        methods: {\n\n            close: function close() {\n                var this$1 = this;\n\n                this.toggleElement(this.$el).then(function () { return this$1.$destroy(true); });\n            }\n\n        }\n\n    });\n\n};\n\nvar Cover = function (UIkit) {\n\n    UIkit.component('cover', {\n\n        mixins: [Class, UIkit.components.video.options],\n\n        props: {\n            width: Number,\n            height: Number\n        },\n\n        defaults: {\n            automute: true\n        },\n\n        update: {\n\n            write: function write() {\n\n                var el = this.$el;\n\n                if (!isVisible(el)) {\n                    return;\n                }\n\n                var ref = el.parentNode;\n                var height = ref.offsetHeight;\n                var width = ref.offsetWidth;\n\n                css(\n                    css(el, {width: '', height: ''}),\n                    Dimensions.cover(\n                        {\n                            width: this.width || el.clientWidth,\n                            height: this.height || el.clientHeight\n                        },\n                        {\n                            width: width + (width % 2 ? 1 : 0),\n                            height: height + (height % 2 ? 1 : 0)\n                        }\n                    )\n                );\n\n            },\n\n            events: ['load', 'resize']\n\n        },\n\n        events: {\n\n            loadedmetadata: function loadedmetadata() {\n                this.$emit();\n            }\n\n        }\n\n    });\n\n};\n\nvar Drop = function (UIkit) {\n\n    var active;\n\n    UIkit.component('drop', {\n\n        mixins: [Position, Togglable],\n\n        args: 'pos',\n\n        props: {\n            mode: 'list',\n            toggle: Boolean,\n            boundary: 'query',\n            boundaryAlign: Boolean,\n            delayShow: Number,\n            delayHide: Number,\n            clsDrop: String\n        },\n\n        defaults: {\n            mode: ['click', 'hover'],\n            toggle: true,\n            boundary: win,\n            boundaryAlign: false,\n            delayShow: 0,\n            delayHide: 800,\n            clsDrop: false,\n            hoverIdle: 200,\n            animation: ['uk-animation-fade'],\n            cls: 'uk-open'\n        },\n\n        init: function init() {\n            this.tracker = new MouseTracker();\n            this.clsDrop = this.clsDrop || (\"uk-\" + (this.$options.name));\n            this.clsPos = this.clsDrop;\n\n            addClass(this.$el, this.clsDrop);\n        },\n\n        ready: function ready() {\n\n            this.updateAria(this.$el);\n\n            if (this.toggle) {\n                this.toggle = UIkit.toggle(isString(this.toggle) ? query(this.toggle, this.$el) : this.$el.previousElementSibling, {target: this.$el, mode: this.mode});\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return (\".\" + (this.clsDrop) + \"-close\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.hide(false);\n                }\n\n            },\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return 'a[href^=\"#\"]';\n                },\n\n                handler: function handler(e) {\n\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n\n                    var id = e.target.hash;\n\n                    if (!id) {\n                        e.preventDefault();\n                    }\n\n                    if (!id || !within(id, this.$el)) {\n                        this.hide(false);\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'beforescroll',\n\n                handler: function handler() {\n                    this.hide(false);\n                }\n\n            },\n\n            {\n\n                name: 'toggle',\n\n                self: true,\n\n                handler: function handler(e, toggle) {\n\n                    e.preventDefault();\n\n                    if (this.isToggled()) {\n                        this.hide(false);\n                    } else {\n                        this.show(toggle, false);\n                    }\n                }\n\n            },\n\n            {\n\n                name: pointerEnter,\n\n                filter: function filter() {\n                    return includes(this.mode, 'hover');\n                },\n\n                handler: function handler(e) {\n\n                    if (isTouch(e)) {\n                        return;\n                    }\n\n                    if (active\n                        && active !== this\n                        && active.toggle\n                        && includes(active.toggle.mode, 'hover')\n                        && !within(e.target, active.toggle.$el)\n                        && !pointInRect({x: e.pageX, y: e.pageY}, offset(active.$el))\n                    ) {\n                        active.hide(false);\n                    }\n\n                    e.preventDefault();\n                    this.show(this.toggle);\n                }\n\n            },\n\n            {\n\n                name: 'toggleshow',\n\n                handler: function handler(e, toggle) {\n\n                    if (toggle && !includes(toggle.target, this.$el)) {\n                        return;\n                    }\n\n                    e.preventDefault();\n                    this.show(toggle || this.toggle);\n                }\n\n            },\n\n            {\n\n                name: (\"togglehide \" + pointerLeave),\n\n                handler: function handler(e, toggle) {\n\n                    if (isTouch(e) || toggle && !includes(toggle.target, this.$el)) {\n                        return;\n                    }\n\n                    e.preventDefault();\n\n                    if (this.toggle && includes(this.toggle.mode, 'hover')) {\n                        this.hide();\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'beforeshow',\n\n                self: true,\n\n                handler: function handler() {\n                    this.clearTimers();\n                }\n\n            },\n\n            {\n\n                name: 'show',\n\n                self: true,\n\n                handler: function handler() {\n                    this.tracker.init();\n                    addClass(this.toggle.$el, this.cls);\n                    attr(this.toggle.$el, 'aria-expanded', 'true');\n                    registerEvent();\n                }\n\n            },\n\n            {\n\n                name: 'beforehide',\n\n                self: true,\n\n                handler: function handler() {\n                    this.clearTimers();\n                }\n\n            },\n\n            {\n\n                name: 'hide',\n\n                handler: function handler(ref) {\n                    var target = ref.target;\n\n\n                    if (this.$el !== target) {\n                        active = active === null && within(target, this.$el) && this.isToggled() ? this : active;\n                        return;\n                    }\n\n                    active = this.isActive() ? null : active;\n                    removeClass(this.toggle.$el, this.cls);\n                    attr(this.toggle.$el, 'aria-expanded', 'false');\n                    this.toggle.$el.blur();\n                    $$('a, button', this.toggle.$el).forEach(function (el) { return el.blur(); });\n                    this.tracker.cancel();\n                }\n\n            }\n\n        ],\n\n        update: {\n\n            write: function write() {\n\n                if (this.isToggled() && !Animation.inProgress(this.$el)) {\n                    this.position();\n                }\n\n            },\n\n            events: ['resize']\n\n        },\n\n        methods: {\n\n            show: function show(toggle, delay) {\n                var this$1 = this;\n                if ( delay === void 0 ) delay = true;\n\n\n                var show = function () {\n                        if (!this$1.isToggled()) {\n                            this$1.position();\n                            this$1.toggleElement(this$1.$el, true);\n                        }\n                    },\n                    tryShow = function () {\n\n                        this$1.toggle = toggle || this$1.toggle;\n\n                        this$1.clearTimers();\n\n                        if (this$1.isActive()) {\n                            return;\n                        } else if (delay && active && active !== this$1 && active.isDelaying) {\n                            this$1.showTimer = setTimeout(this$1.show, 10);\n                            return;\n                        } else if (this$1.isParentOf(active)) {\n\n                            if (active.hideTimer) {\n                                active.hide(false);\n                            } else {\n                                return;\n                            }\n\n                        } else if (active && !this$1.isChildOf(active) && !this$1.isParentOf(active)) {\n\n                            var prev;\n                            while (active && active !== prev && !this$1.isChildOf(active)) {\n                                prev = active;\n                                active.hide(false);\n                            }\n\n                        }\n\n                        if (delay && this$1.delayShow) {\n                            this$1.showTimer = setTimeout(show, this$1.delayShow);\n                        } else {\n                            show();\n                        }\n\n                        active = this$1;\n                    };\n\n                if (toggle && this.toggle &&  toggle.$el !== this.toggle.$el) {\n\n                    once(this.$el, 'hide', tryShow);\n                    this.hide(false);\n\n                } else {\n                    tryShow();\n                }\n            },\n\n            hide: function hide(delay) {\n                var this$1 = this;\n                if ( delay === void 0 ) delay = true;\n\n\n                var hide = function () { return this$1.toggleNow(this$1.$el, false); };\n\n                this.clearTimers();\n\n                this.isDelaying = this.tracker.movesTo(this.$el);\n\n                if (delay && this.isDelaying) {\n                    this.hideTimer = setTimeout(this.hide, this.hoverIdle);\n                } else if (delay && this.delayHide) {\n                    this.hideTimer = setTimeout(hide, this.delayHide);\n                } else {\n                    hide();\n                }\n            },\n\n            clearTimers: function clearTimers() {\n                clearTimeout(this.showTimer);\n                clearTimeout(this.hideTimer);\n                this.showTimer = null;\n                this.hideTimer = null;\n                this.isDelaying = false;\n            },\n\n            isActive: function isActive() {\n                return active === this;\n            },\n\n            isChildOf: function isChildOf(drop) {\n                return drop && drop !== this && within(this.$el, drop.$el);\n            },\n\n            isParentOf: function isParentOf(drop) {\n                return drop && drop !== this && within(drop.$el, this.$el);\n            },\n\n            position: function position() {\n\n                removeClasses(this.$el, ((this.clsDrop) + \"-(stack|boundary)\"));\n                css(this.$el, {top: '', left: '', display: 'block'});\n                toggleClass(this.$el, ((this.clsDrop) + \"-boundary\"), this.boundaryAlign);\n\n                var boundary = offset(this.boundary),\n                    alignTo = this.boundaryAlign ? boundary : offset(this.toggle.$el);\n\n                if (this.align === 'justify') {\n                    var prop = this.getAxis() === 'y' ? 'width' : 'height';\n                    css(this.$el, prop, alignTo[prop]);\n                } else if (this.$el.offsetWidth > Math.max(boundary.right - alignTo.left, alignTo.right - boundary.left)) {\n                    addClass(this.$el, ((this.clsDrop) + \"-stack\"));\n                    trigger(this.$el, 'stack', [this]);\n                }\n\n                this.positionAt(this.$el, this.boundaryAlign ? this.boundary : this.toggle.$el, this.boundary);\n\n                css(this.$el, 'display', '');\n\n            }\n\n        }\n\n    });\n\n    UIkit.drop.getActive = function () { return active; };\n\n    var registered;\n\n    function registerEvent() {\n\n        if (registered) {\n            return;\n        }\n\n        registered = true;\n        on(docEl, 'click', function (ref) {\n            var target = ref.target;\n            var defaultPrevented = ref.defaultPrevented;\n\n            var prev;\n\n            if (defaultPrevented) {\n                return;\n            }\n\n            while (active && active !== prev && !within(target, active.$el) && !(active.toggle && within(target, active.toggle.$el))) {\n                prev = active;\n                active.hide(false);\n            }\n        });\n    }\n\n};\n\nvar Dropdown = function (UIkit) {\n\n    UIkit.component('dropdown', UIkit.components.drop.extend({name: 'dropdown'}));\n\n};\n\nvar FormCustom = function (UIkit) {\n\n    UIkit.component('form-custom', {\n\n        mixins: [Class],\n\n        args: 'target',\n\n        props: {\n            target: Boolean\n        },\n\n        defaults: {\n            target: false\n        },\n\n        computed: {\n\n            input: function input(_, $el) {\n                return $$1(selInput, $el);\n            },\n\n            state: function state() {\n                return this.input.nextElementSibling;\n            },\n\n            target: function target(ref, $el) {\n                var target = ref.target;\n\n                return target && (target === true\n                    && this.input.parentNode === $el\n                    && this.input.nextElementSibling\n                    || query(target, $el));\n            }\n\n        },\n\n        connected: function connected() {\n            trigger(this.input, 'change');\n        },\n\n        events: [\n\n            {\n\n                name: 'focusin focusout mouseenter mouseleave',\n\n                delegate: selInput,\n\n                handler: function handler(ref) {\n                    var type = ref.type;\n                    var current = ref.current;\n\n                    if (current === this.input) {\n                        toggleClass(\n                            this.state,\n                            (\"uk-\" + (includes(type, 'focus') ? 'focus' : 'hover')),\n                            includes(['focusin', 'mouseenter'], type)\n                        );\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'change',\n\n                handler: function handler() {\n\n                    var target = this.target, input = this.input, option;\n\n                    if (!target) {\n                        return;\n                    }\n\n                    target[isInput(target) ? 'value' : 'textContent'] = input.files && input.files[0]\n                        ? input.files[0].name\n                        : matches(input, 'select') && (option = $$('option', input).filter(function (el) { return el.selected; })[0])\n                            ? option.textContent\n                            : input.value;\n                }\n\n            }\n\n        ]\n\n    });\n\n};\n\nvar Gif = function (UIkit) {\n\n    UIkit.component('gif', {\n\n        update: {\n\n            read: function read() {\n\n                var inview = isInView(this.$el);\n\n                if (!this.isInView && inview) {\n                    this.$el.src = this.$el.src;\n                }\n\n                this.isInView = inview;\n            },\n\n            events: ['scroll', 'load', 'resize']\n        }\n\n    });\n\n};\n\nvar Grid = function (UIkit) {\n\n    UIkit.component('grid', UIkit.components.margin.extend({\n\n        mixins: [Class],\n\n        name: 'grid',\n\n        defaults: {\n            margin: 'uk-grid-margin',\n            clsStack: 'uk-grid-stack'\n        },\n\n        update: {\n\n            write: function write() {\n\n                toggleClass(this.$el, this.clsStack, this.stacks);\n\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    }));\n\n};\n\nvar HeightMatch = function (UIkit) {\n\n    UIkit.component('height-match', {\n\n        args: 'target',\n\n        props: {\n            target: String,\n            row: Boolean\n        },\n\n        defaults: {\n            target: '> *',\n            row: true\n        },\n\n        computed: {\n\n            elements: function elements(ref, $el) {\n                var target = ref.target;\n\n                return $$(target, $el);\n            }\n\n        },\n\n        update: {\n\n            read: function read() {\n                var this$1 = this;\n\n\n                var lastOffset = false;\n\n                css(this.elements, 'minHeight', '');\n\n                this.rows = !this.row\n                    ? [this.match(this.elements)]\n                    : this.elements.reduce(function (rows, el) {\n\n                        if (lastOffset !== el.offsetTop) {\n                            rows.push([el]);\n                        } else {\n                            rows[rows.length - 1].push(el);\n                        }\n\n                        lastOffset = el.offsetTop;\n\n                        return rows;\n\n                    }, []).map(function (elements) { return this$1.match(elements); });\n            },\n\n            write: function write() {\n\n                this.rows.forEach(function (ref) {\n                    var height = ref.height;\n                    var elements = ref.elements;\n\n                    return css(elements, 'minHeight', height);\n                });\n\n            },\n\n            events: ['load', 'resize']\n\n        },\n\n        methods: {\n\n            match: function match(elements) {\n\n                if (elements.length < 2) {\n                    return {};\n                }\n\n                var max = 0, heights = [];\n\n                elements\n                    .forEach(function (el) {\n\n                        var style, hidden;\n\n                        if (!isVisible(el)) {\n                            style = attr(el, 'style');\n                            hidden = attr(el, 'hidden');\n\n                            attr(el, {\n                                style: ((style || '') + \";display:block !important;\"),\n                                hidden: null\n                            });\n                        }\n\n                        max = Math.max(max, el.offsetHeight);\n                        heights.push(el.offsetHeight);\n\n                        if (!isUndefined(style)) {\n                            attr(el, {style: style, hidden: hidden});\n                        }\n\n                    });\n\n                elements = elements.filter(function (el, i) { return heights[i] < max; });\n\n                return {height: max, elements: elements};\n            }\n        }\n\n    });\n\n};\n\nvar HeightViewport = function (UIkit) {\n\n    UIkit.component('height-viewport', {\n\n        props: {\n            expand: Boolean,\n            offsetTop: Boolean,\n            offsetBottom: Boolean,\n            minHeight: Number\n        },\n\n        defaults: {\n            expand: false,\n            offsetTop: false,\n            offsetBottom: false,\n            minHeight: 0\n        },\n\n        update: {\n\n            write: function write() {\n\n                css(this.$el, 'boxSizing', 'border-box');\n\n                var viewport = height(win), minHeight, offsetTop = 0;\n\n                if (this.expand) {\n\n                    css(this.$el, {height: '', minHeight: ''});\n\n                    var diff = viewport - offsetHeight(docEl);\n\n                    if (diff > 0) {\n                        minHeight = offsetHeight(this.$el) + diff;\n                    }\n\n                } else {\n\n                    var top = offset(this.$el).top;\n\n                    if (top < viewport / 2 && this.offsetTop) {\n                        offsetTop += top;\n                    }\n\n                    if (this.offsetBottom === true) {\n\n                        offsetTop += offsetHeight(this.$el.nextElementSibling);\n\n                    } else if (isNumeric(this.offsetBottom)) {\n\n                        offsetTop += (viewport / 100) * this.offsetBottom;\n\n                    } else if (this.offsetBottom && endsWith(this.offsetBottom, 'px')) {\n\n                        offsetTop += toFloat(this.offsetBottom);\n\n                    } else if (isString(this.offsetBottom)) {\n\n                        offsetTop += offsetHeight(query(this.offsetBottom, this.$el));\n\n                    }\n\n                    // on mobile devices (iOS and Android) window.innerHeight !== 100vh\n                    minHeight = offsetTop ? (\"calc(100vh - \" + offsetTop + \"px)\") : '100vh';\n\n                }\n\n                if (!minHeight) {\n                    return;\n                }\n\n                css(this.$el, {height: '', minHeight: minHeight});\n\n                var elHeight = this.$el.offsetHeight;\n                if (this.minHeight && this.minHeight > elHeight) {\n                    css(this.$el, 'minHeight', this.minHeight);\n                }\n\n                // IE 10-11 fix (min-height on a flex container won't apply to its flex items)\n                if (viewport - offsetTop >= elHeight) {\n                    css(this.$el, 'height', minHeight);\n                }\n\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n    function offsetHeight(el) {\n        return el && el.offsetHeight || 0;\n    }\n\n};\n\nvar Hover = function (UIkit) {\n\n    ready(function () {\n\n        if (!hasTouch) {\n            return;\n        }\n\n        var cls = 'uk-hover';\n\n        on(doc, 'tap', function (ref) {\n                var target = ref.target;\n\n                return $$((\".\" + cls)).forEach(function (_, el) { return !within(target, el) && removeClass(el, cls); }\n            );\n        }\n        );\n\n        Object.defineProperty(UIkit, 'hoverSelector', {\n\n            set: function set(selector) {\n                on(doc, 'tap', selector, function (ref) {\n                    var current = ref.current;\n\n                    return addClass(current, cls);\n                });\n            }\n\n        });\n\n        UIkit.hoverSelector = '.uk-animation-toggle, .uk-transition-toggle, [uk-hover]';\n\n    });\n\n};\n\nvar closeIcon = \"<svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"13\\\" y2=\\\"13\\\"></line><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"13\\\"></line></svg>\";\n\nvar closeLarge = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"19\\\" y2=\\\"19\\\"></line><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"19\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"19\\\"></line></svg>\";\n\nvar marker = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"11\\\"></rect><rect x=\\\"4\\\" y=\\\"9\\\" width=\\\"11\\\" height=\\\"1\\\"></rect></svg>\";\n\nvar navbarToggleIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect y=\\\"9\\\" width=\\\"20\\\" height=\\\"2\\\"></rect><rect y=\\\"3\\\" width=\\\"20\\\" height=\\\"2\\\"></rect><rect y=\\\"15\\\" width=\\\"20\\\" height=\\\"2\\\"></rect></svg>\";\n\nvar overlayIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"19\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"40\\\"></rect><rect x=\\\"0\\\" y=\\\"19\\\" width=\\\"40\\\" height=\\\"1\\\"></rect></svg>\";\n\nvar paginationNext = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 1 6 6 1 11\\\"></polyline></svg>\";\n\nvar paginationPrevious = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"6 1 1 6 6 11\\\"></polyline></svg>\";\n\nvar searchIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"></circle><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"></path></svg>\";\n\nvar searchLarge = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" cx=\\\"17.5\\\" cy=\\\"17.5\\\" r=\\\"16.5\\\"></circle><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" x1=\\\"38\\\" y1=\\\"39\\\" x2=\\\"29\\\" y2=\\\"30\\\"></line></svg>\";\n\nvar searchNavbar = \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"9.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"23\\\" y1=\\\"23\\\" x2=\\\"17\\\" y2=\\\"17\\\"/></svg>\";\n\nvar slidenavNext = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"1.225,23 12.775,12 1.225,1 \\\"></polyline></svg>\";\n\nvar slidenavNextLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"4.002,38.547 22.527,20.024 4,1.5 \\\"></polyline></svg>\";\n\nvar slidenavPrevious = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"12.775,1 1.225,12 12.775,23 \\\"></polyline></svg>\";\n\nvar slidenavPreviousLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"20.527,1.5 2,20.024 20.525,38.547 \\\"></polyline></svg>\";\n\nvar spinner = \"<svg width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 30 30\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"15\\\" cy=\\\"15\\\" r=\\\"14\\\"></circle></svg>\";\n\nvar totop = \"<svg width=\\\"18\\\" height=\\\"10\\\" viewBox=\\\"0 0 18 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 9 9 1 17 9 \\\"></polyline></svg>\";\n\nvar Icon = function (UIkit) {\n\n    var parsed = {},\n        icons = {\n            spinner: spinner,\n            totop: totop,\n            marker: marker,\n            'close-icon': closeIcon,\n            'close-large': closeLarge,\n            'navbar-toggle-icon': navbarToggleIcon,\n            'overlay-icon': overlayIcon,\n            'pagination-next': paginationNext,\n            'pagination-previous': paginationPrevious,\n            'search-icon': searchIcon,\n            'search-large': searchLarge,\n            'search-navbar': searchNavbar,\n            'slidenav-next': slidenavNext,\n            'slidenav-next-large': slidenavNextLarge,\n            'slidenav-previous': slidenavPrevious,\n            'slidenav-previous-large': slidenavPreviousLarge\n        };\n\n    UIkit.component('icon', UIkit.components.svg.extend({\n\n        attrs: ['icon', 'ratio'],\n\n        mixins: [Class],\n\n        name: 'icon',\n\n        args: 'icon',\n\n        props: ['icon'],\n\n        defaults: {exclude: ['id', 'style', 'class', 'src', 'icon']},\n\n        init: function init() {\n            addClass(this.$el, 'uk-icon');\n\n            if (isRtl) {\n                this.icon = swap(swap(this.icon, 'left', 'right'), 'previous', 'next');\n            }\n        },\n\n        disconnected: function disconnected() {\n            delete this.delay;\n        },\n\n        methods: {\n\n            getSvg: function getSvg() {\n\n                var icon = getIcon(this.icon);\n\n                if (!icon) {\n                    return Promise.reject('Icon not found.');\n                }\n\n                return Promise.resolve(icon);\n            }\n\n        }\n\n    }));\n\n    [\n        'marker',\n        'navbar-toggle-icon',\n        'overlay-icon',\n        'pagination-previous',\n        'pagination-next',\n        'totop'\n    ].forEach(function (name) { return registerComponent(name); });\n\n    [\n        'slidenav-previous',\n        'slidenav-next'\n    ].forEach(function (name) { return registerComponent(name, {\n\n        init: function init() {\n            addClass(this.$el, 'uk-slidenav');\n\n            if (hasClass(this.$el, 'uk-slidenav-large')) {\n                this.icon += '-large';\n            }\n        }\n\n    }); });\n\n    registerComponent('search-icon', {\n\n        init: function init() {\n            if (hasClass(this.$el, 'uk-search-icon') && parents(this.$el, '.uk-search-large').length) {\n                this.icon = 'search-large';\n            } else if (parents(this.$el, '.uk-search-navbar').length) {\n                this.icon = 'search-navbar';\n            }\n        }\n\n    });\n\n    registerComponent('close', {\n\n        init: function init() {\n            this.icon = \"close-\" + (hasClass(this.$el, 'uk-close-large') ? 'large' : 'icon');\n        }\n\n    });\n\n    registerComponent('spinner', {\n\n        connected: function connected() {\n            var this$1 = this;\n\n            this.svg.then(function (svg) { return this$1.ratio !== 1 && css($$1('circle', svg), 'stroke-width', 1 / this$1.ratio); }, noop);\n        }\n\n    });\n\n    UIkit.icon.add = function (added) {\n        Object.keys(added).forEach(function (name) {\n            icons[name] = added[name];\n            delete parsed[name];\n        });\n\n        if (UIkit._initialized) {\n            each(UIkit.instances, function (component) {\n                if (component.$options.name === 'icon') {\n                    component.$reset();\n                }\n            });\n        }\n    };\n\n    function registerComponent(name, mixin$$1) {\n\n        UIkit.component(name, UIkit.components.icon.extend({\n\n            name: name,\n\n            mixins: mixin$$1 ? [mixin$$1] : [],\n\n            defaults: {\n                icon: name\n            }\n\n        }));\n    }\n\n    function getIcon(icon) {\n\n        if (!icons[icon]) {\n            return null;\n        }\n\n        if (!parsed[icon]) {\n            parsed[icon] = $$1(icons[icon].trim());\n        }\n\n        return parsed[icon];\n    }\n\n};\n\nvar Leader = function (UIkit) {\n\n    UIkit.component('leader', {\n\n        mixins: [Class],\n\n        props: {\n            fill: String,\n            media: 'media'\n        },\n\n        defaults: {\n            fill: '',\n            media: false,\n            clsWrapper: 'uk-leader-fill',\n            clsHide: 'uk-leader-hide',\n            attrFill: 'data-fill'\n        },\n\n        computed: {\n\n            fill: function fill(ref) {\n                var fill = ref.fill;\n\n                return fill || getCssVar('leader-fill');\n            }\n\n        },\n\n        connected: function connected() {\n            this.wrapper = wrapInner(this.$el, (\"<span class=\\\"\" + (this.clsWrapper) + \"\\\">\"))[0];\n        },\n\n        disconnected: function disconnected() {\n            unwrap(this.wrapper.childNodes);\n            delete this._width;\n        },\n\n        update: [\n\n            {\n\n                read: function read() {\n                    var prev = this._width;\n                    this._width = Math.floor(this.$el.offsetWidth / 2);\n                    this._changed = prev !== this._width;\n                    this._hide = this.media && !win.matchMedia(this.media).matches;\n                },\n\n                write: function write() {\n\n                    toggleClass(this.wrapper, this.clsHide, this._hide);\n\n                    if (this._changed) {\n                        attr(this.wrapper, this.attrFill, new Array(this._width).join(this.fill));\n                    }\n\n                },\n\n                events: ['load', 'resize']\n\n            }\n        ]\n    });\n\n};\n\nvar Margin = function (UIkit) {\n\n    UIkit.component('margin', {\n\n        props: {\n            margin: String,\n            firstColumn: Boolean\n        },\n\n        defaults: {\n            margin: 'uk-margin-small-top',\n            firstColumn: 'uk-first-column'\n        },\n\n        update: {\n\n            read: function read() {\n                var this$1 = this;\n\n\n                var items = this.$el.children;\n\n                if (!items.length || !isVisible(this.$el)) {\n                    this.rows = false;\n                    return;\n                }\n\n                this.stacks = true;\n\n                var rows = [[]];\n\n                for (var i = 0; i < items.length; i++) {\n\n                    var el = items[i],\n                        dim = el.getBoundingClientRect();\n\n                    if (!dim.height) {\n                        continue;\n                    }\n\n                    for (var j = rows.length - 1; j >= 0; j--) {\n\n                        var row = rows[j];\n\n                        if (!row[0]) {\n                            row.push(el);\n                            break;\n                        }\n\n                        var leftDim = row[0].getBoundingClientRect();\n\n                        if (dim.top >= Math.floor(leftDim.bottom)) {\n                            rows.push([el]);\n                            break;\n                        }\n\n                        if (Math.floor(dim.bottom) > leftDim.top) {\n\n                            this$1.stacks = false;\n\n                            if (dim.left < leftDim.left && !isRtl) {\n                                row.unshift(el);\n                                break;\n                            }\n\n                            row.push(el);\n                            break;\n                        }\n\n                        if (j === 0) {\n                            rows.unshift([el]);\n                            break;\n                        }\n\n                    }\n\n                }\n\n                this.rows = rows;\n\n            },\n\n            write: function write() {\n                var this$1 = this;\n\n\n                this.rows && this.rows.forEach(function (row, i) { return row.forEach(function (el, j) {\n                        toggleClass(el, this$1.margin, i !== 0);\n                        toggleClass(el, this$1.firstColumn, j === 0);\n                    }); }\n                );\n\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n};\n\nvar Modal$1 = function (UIkit) {\n\n    UIkit.component('modal', {\n\n        mixins: [Modal],\n\n        defaults: {\n            clsPage: 'uk-modal-page',\n            clsPanel: 'uk-modal-dialog',\n            selClose: '.uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full'\n        },\n\n        events: [\n\n            {\n                name: 'show',\n\n                self: true,\n\n                handler: function handler() {\n\n                    if (hasClass(this.panel, 'uk-margin-auto-vertical')) {\n                        addClass(this.$el, 'uk-flex');\n                    } else {\n                        css(this.$el, 'display', 'block');\n                    }\n\n                    height(this.$el); // force reflow\n                }\n            },\n\n            {\n                name: 'hidden',\n\n                self: true,\n\n                handler: function handler() {\n\n                    css(this.$el, 'display', '');\n                    removeClass(this.$el, 'uk-flex');\n\n                }\n            }\n\n        ]\n\n    });\n\n    UIkit.component('overflow-auto', {\n\n        mixins: [Class],\n\n        computed: {\n\n            modal: function modal(_, $el) {\n                return closest($el, '.uk-modal');\n            },\n\n            panel: function panel(_, $el) {\n                return closest($el, '.uk-modal-dialog');\n            }\n\n        },\n\n        connected: function connected() {\n            css(this.$el, 'minHeight', 150);\n        },\n\n        update: {\n\n            write: function write() {\n\n                if (!this.panel || !this.modal) {\n                    return;\n                }\n\n                var current = css(this.$el, 'maxHeight');\n\n                css(css(this.$el, 'maxHeight', 150), 'maxHeight', Math.max(150, 150 + height(this.modal) - this.panel.offsetHeight));\n                if (current !== css(this.$el, 'maxHeight')) {\n                    trigger(this.$el, 'resize');\n                }\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n    UIkit.modal.dialog = function (content, options) {\n\n        var dialog = UIkit.modal((\" <div class=\\\"uk-modal\\\"> <div class=\\\"uk-modal-dialog\\\">\" + content + \"</div> </div> \"), options);\n\n        on(dialog.$el, 'hidden', function (ref) {\n            var target = ref.target;\n            var current = ref.current;\n\n            if (target === current) {\n                dialog.$destroy(true);\n            }\n        });\n        dialog.show();\n\n        return dialog;\n    };\n\n    UIkit.modal.alert = function (message, options) {\n\n        options = assign({bgClose: false, escClose: false, labels: UIkit.modal.labels}, options);\n\n        return new Promise(\n            function (resolve) { return on(UIkit.modal.dialog((\" <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-primary uk-modal-close\\\" autofocus>\" + (options.labels.ok) + \"</button> </div> \"), options).$el, 'hide', resolve); }\n        );\n    };\n\n    UIkit.modal.confirm = function (message, options) {\n\n        options = assign({bgClose: false, escClose: false, labels: UIkit.modal.labels}, options);\n\n        return new Promise(\n            function (resolve, reject) { return on(UIkit.modal.dialog((\" <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\">\" + (options.labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary uk-modal-close\\\" autofocus>\" + (options.labels.ok) + \"</button> </div> \"), options).$el, 'click', '.uk-modal-footer button', function (ref) {\n                var target = ref.target;\n\n                return index(target) === 0 ? reject() : resolve();\n                }); }\n        );\n    };\n\n    UIkit.modal.prompt = function (message, value, options) {\n\n        options = assign({bgClose: false, escClose: false, labels: UIkit.modal.labels}, options);\n\n        return new Promise(function (resolve) {\n\n            var resolved = false,\n                prompt = UIkit.modal.dialog((\" <form class=\\\"uk-form-stacked\\\"> <div class=\\\"uk-modal-body\\\"> <label>\" + (isString(message) ? message : html(message)) + \"</label> <input class=\\\"uk-input\\\" autofocus> </div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + (options.labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary\\\">\" + (options.labels.ok) + \"</button> </div> </form> \"), options),\n                input = $$1('input', prompt.$el);\n\n            input.value = value;\n\n            on(prompt.$el, 'submit', 'form', function (e) {\n                e.preventDefault();\n                resolve(input.value);\n                resolved = true;\n                prompt.hide();\n            });\n            on(prompt.$el, 'hide', function () {\n                if (!resolved) {\n                    resolve(null);\n                }\n            });\n\n        });\n    };\n\n    UIkit.modal.labels = {\n        ok: 'Ok',\n        cancel: 'Cancel'\n    };\n\n};\n\nvar Nav = function (UIkit) {\n\n    UIkit.component('nav', UIkit.components.accordion.extend({\n\n        name: 'nav',\n\n        defaults: {\n            targets: '> .uk-parent',\n            toggle: '> a',\n            content: '> ul'\n        }\n\n    }));\n\n};\n\nvar Navbar = function (UIkit) {\n\n    UIkit.component('navbar', {\n\n        mixins: [Class],\n\n        props: {\n            dropdown: String,\n            mode: 'list',\n            align: String,\n            offset: Number,\n            boundary: Boolean,\n            boundaryAlign: Boolean,\n            clsDrop: String,\n            delayShow: Number,\n            delayHide: Number,\n            dropbar: Boolean,\n            dropbarMode: String,\n            dropbarAnchor: 'query',\n            duration: Number\n        },\n\n        defaults: {\n            dropdown: '.uk-navbar-nav > li',\n            align: !isRtl ? 'left' : 'right',\n            clsDrop: 'uk-navbar-dropdown',\n            mode: undefined,\n            offset: undefined,\n            delayShow: undefined,\n            delayHide: undefined,\n            boundaryAlign: undefined,\n            flip: 'x',\n            boundary: true,\n            dropbar: false,\n            dropbarMode: 'slide',\n            dropbarAnchor: false,\n            duration: 200,\n        },\n\n        computed: {\n\n            boundary: function boundary(ref, $el) {\n                var boundary = ref.boundary;\n                var boundaryAlign = ref.boundaryAlign;\n\n                return (boundary === true || boundaryAlign) ? $el : boundary\n            },\n\n            pos: function pos(ref) {\n                var align = ref.align;\n\n                return (\"bottom-\" + align);\n            }\n\n        },\n\n        ready: function ready() {\n\n            if (this.dropbar) {\n                UIkit.navbarDropbar(\n                    query(this.dropbar, this.$el) || after(this.dropbarAnchor || this.$el, '<div></div>'),\n                    {clsDrop: this.clsDrop, mode: this.dropbarMode, duration: this.duration, navbar: this}\n                );\n            }\n\n        },\n\n        update: function update() {\n\n            UIkit.drop(\n                $$(((this.dropdown) + \" .\" + (this.clsDrop)), this.$el).filter(function (el) { return !UIkit.getComponent(el, 'dropdown'); }),\n                assign({}, this.$props, {boundary: this.boundary, pos: this.pos})\n            );\n\n        },\n\n        events: [\n\n            {\n                name: 'mouseover',\n\n                delegate: function delegate() {\n                    return this.dropdown;\n                },\n\n                handler: function handler(ref) {\n                    var current = ref.current;\n\n                    var active = this.getActive();\n                    if (active && active.toggle && !within(active.toggle.$el, current) && !active.tracker.movesTo(active.$el)) {\n                        active.hide(false);\n                    }\n                }\n\n            }\n\n        ],\n\n        methods: {\n\n            getActive: function getActive() {\n                var active = UIkit.drop.getActive();\n                return active && includes(active.mode, 'hover') && within(active.toggle.$el, this.$el) && active;\n            }\n\n        }\n\n    });\n\n    UIkit.component('navbar-dropbar', {\n\n        mixins: [Class],\n\n        defaults: {\n            clsDrop: '',\n            mode: 'slide',\n            navbar: null,\n            duration: 200\n        },\n\n        init: function init() {\n\n            if (this.mode === 'slide') {\n                addClass(this.$el, 'uk-navbar-dropbar-slide');\n            }\n\n        },\n\n        events: [\n\n            {\n                name: 'beforeshow',\n\n                el: function el() {\n                    return this.navbar.$el;\n                },\n\n                handler: function handler(e, drop) {\n                    var $el = drop.$el;\n                    var dir = drop.dir;\n                    if (dir === 'bottom' && !within($el, this.$el)) {\n                        append(this.$el, $el);\n                        drop.show();\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            {\n                name: 'mouseleave',\n\n                handler: function handler() {\n                    var active = this.navbar.getActive();\n\n                    if (active && !matches(this.$el, ':hover')) {\n                        active.hide();\n                    }\n                }\n            },\n\n            {\n                name: 'show',\n\n                handler: function handler(_, ref) {\n                    var $el = ref.$el;\n\n                    this.clsDrop && addClass($el, ((this.clsDrop) + \"-dropbar\"));\n                    this.transitionTo($el.offsetHeight + toFloat(css($el, 'margin-top')) + toFloat(css($el, 'margin-bottom')));\n                }\n            },\n\n            {\n                name: 'beforehide',\n\n                handler: function handler(e, ref) {\n                    var $el = ref.$el;\n\n\n                    var active = this.navbar.getActive();\n\n                    if (matches(this.$el, ':hover') && active && active.$el === $el) {\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            {\n                name: 'hide',\n\n                handler: function handler(_, ref) {\n                    var $el = ref.$el;\n\n\n                    var active = this.navbar.getActive();\n\n                    if (!active || active && active.$el === $el) {\n                        this.transitionTo(0);\n                    }\n                }\n            }\n\n        ],\n\n        methods: {\n\n            transitionTo: function transitionTo(newHeight) {\n                height(this.$el, isVisible(this.$el) ? height(this.$el) : 0);\n                Transition.cancel(this.$el);\n                return Transition.start(this.$el, {height: newHeight}, this.duration).catch(noop);\n            }\n\n        }\n\n    });\n\n};\n\nvar scroll;\n\nvar Offcanvas = function (UIkit) {\n\n    UIkit.component('offcanvas', {\n\n        mixins: [Modal],\n\n        args: 'mode',\n\n        props: {\n            content: String,\n            mode: String,\n            flip: Boolean,\n            overlay: Boolean\n        },\n\n        defaults: {\n            content: '.uk-offcanvas-content',\n            mode: 'slide',\n            flip: false,\n            overlay: false,\n            clsPage: 'uk-offcanvas-page',\n            clsContainer: 'uk-offcanvas-container',\n            clsPanel: 'uk-offcanvas-bar',\n            clsFlip: 'uk-offcanvas-flip',\n            clsContent: 'uk-offcanvas-content',\n            clsContentAnimation: 'uk-offcanvas-content-animation',\n            clsSidebarAnimation: 'uk-offcanvas-bar-animation',\n            clsMode: 'uk-offcanvas',\n            clsOverlay: 'uk-offcanvas-overlay',\n            selClose: '.uk-offcanvas-close'\n        },\n\n        computed: {\n\n            content: function content(ref) {\n                var content = ref.content;\n\n                return $$1(content);\n            },\n\n            clsFlip: function clsFlip(ref) {\n                var flip = ref.flip;\n                var clsFlip = ref.clsFlip;\n\n                return flip ? clsFlip : '';\n            },\n\n            clsOverlay: function clsOverlay(ref) {\n                var overlay = ref.overlay;\n                var clsOverlay = ref.clsOverlay;\n\n                return overlay ? clsOverlay : '';\n            },\n\n            clsMode: function clsMode(ref) {\n                var mode = ref.mode;\n                var clsMode = ref.clsMode;\n\n                return (clsMode + \"-\" + mode);\n            },\n\n            clsSidebarAnimation: function clsSidebarAnimation(ref) {\n                var mode = ref.mode;\n                var clsSidebarAnimation = ref.clsSidebarAnimation;\n\n                return mode === 'none' || mode === 'reveal' ? '' : clsSidebarAnimation;\n            },\n\n            clsContentAnimation: function clsContentAnimation(ref) {\n                var mode = ref.mode;\n                var clsContentAnimation = ref.clsContentAnimation;\n\n                return mode !== 'push' && mode !== 'reveal' ? '' : clsContentAnimation\n            },\n\n            transitionElement: function transitionElement(ref) {\n                var mode = ref.mode;\n\n                return mode === 'reveal' ? this.panel.parentNode : this.panel;\n            }\n\n        },\n\n        update: {\n\n            write: function write() {\n\n                if (this.getActive() === this) {\n\n                    if (this.overlay || this.clsContentAnimation) {\n                        width(this.content, width(win) - this.scrollbarWidth);\n                    }\n\n                    if (this.overlay) {\n                        height(this.content, height(win));\n                        if (scroll) {\n                            this.content.scrollTop = scroll.y;\n                        }\n                    }\n\n                }\n\n            },\n\n            events: ['resize']\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return 'a[href^=\"#\"]';\n                },\n\n                handler: function handler(ref) {\n                    var current = ref.current;\n\n                    if (current.hash && $$1(current.hash, this.content)) {\n                        scroll = null;\n                        this.hide();\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'beforescroll',\n\n                filter: function filter() {\n                    return this.overlay;\n                },\n\n                handler: function handler(e, scroll, target) {\n                    if (scroll && target && this.isToggled() && $$1(target, this.content)) {\n                        once(this.$el, 'hidden', function () { return scroll.scrollTo(target); });\n                        e.preventDefault();\n                    }\n                }\n\n            },\n\n            {\n                name: 'show',\n\n                self: true,\n\n                handler: function handler() {\n\n                    scroll = scroll || {x: win.pageXOffset, y: win.pageYOffset};\n\n                    if (this.mode === 'reveal' && !hasClass(this.panel, this.clsMode)) {\n                        wrapAll(this.panel, '<div>');\n                        addClass(this.panel.parentNode, this.clsMode);\n                    }\n\n                    css(docEl, 'overflowY', (!this.clsContentAnimation || this.flip) && this.scrollbarWidth && this.overlay ? 'scroll' : '');\n                    addClass(doc.body, ((this.clsContainer) + \" \" + (this.clsFlip) + \" \" + (this.clsOverlay)));\n                    height(doc.body); // force reflow\n                    addClass(this.content, this.clsContentAnimation);\n                    addClass(this.panel, ((this.clsSidebarAnimation) + \" \" + (this.mode !== 'reveal' ? this.clsMode : '')));\n                    addClass(this.$el, this.clsOverlay);\n                    css(this.$el, 'display', 'block');\n                    height(this.$el); // force reflow\n\n                }\n            },\n\n            {\n                name: 'hide',\n\n                self: true,\n\n                handler: function handler() {\n                    removeClass(this.content, this.clsContentAnimation);\n\n                    var active = this.getActive();\n                    if (this.mode === 'none' || active && active !== this && active !== this.prev) {\n                        trigger(this.panel, transitionend);\n                    }\n                }\n            },\n\n            {\n                name: 'hidden',\n\n                self: true,\n\n                handler: function handler() {\n\n                    if (this.mode === 'reveal') {\n                        unwrap(this.panel);\n                    }\n\n                    if (!this.overlay) {\n                        scroll = {x: win.pageXOffset, y: win.pageYOffset};\n                    } else if (!scroll) {\n                        var ref = this.content;\n                        var x = ref.scrollLeft;\n                        var y = ref.scrollTop;\n                        scroll = {x: x, y: y};\n                    }\n\n                    removeClass(this.panel, ((this.clsSidebarAnimation) + \" \" + (this.clsMode)));\n                    removeClass(this.$el, this.clsOverlay);\n                    css(this.$el, 'display', '');\n                    removeClass(doc.body, ((this.clsContainer) + \" \" + (this.clsFlip) + \" \" + (this.clsOverlay)));\n                    doc.body.scrollTop = scroll.y;\n\n                    css(docEl, 'overflow-y', '');\n\n                    width(this.content, '');\n                    height(this.content, '');\n\n                    win.scrollTo(scroll.x, scroll.y);\n\n                    scroll = null;\n\n                }\n            },\n\n            {\n                name: 'swipeLeft swipeRight',\n\n                handler: function handler(e) {\n\n                    if (this.isToggled() && isTouch(e) && (e.type === 'swipeLeft' && !this.flip || e.type === 'swipeRight' && this.flip)) {\n                        this.hide();\n                    }\n\n                }\n            }\n\n        ]\n\n    });\n\n};\n\nvar Responsive = function (UIkit) {\n\n    UIkit.component('responsive', {\n\n        props: ['width', 'height'],\n\n        init: function init() {\n            addClass(this.$el, 'uk-responsive-width');\n        },\n\n        update: {\n\n            read: function read() {\n\n                this.dim = isVisible(this.$el) && this.width && this.height\n                    ? {width: width(this.$el.parentNode), height: this.height}\n                    : false;\n\n            },\n\n            write: function write() {\n\n                if (this.dim) {\n                    height(this.$el, Dimensions.contain({height: this.height, width: this.width}, this.dim).height);\n                }\n\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n};\n\nvar Scroll = function (UIkit) {\n\n    UIkit.component('scroll', {\n\n        props: {\n            duration: Number,\n            offset: Number\n        },\n\n        defaults: {\n            duration: 1000,\n            offset: 0\n        },\n\n        methods: {\n\n            scrollTo: function scrollTo(el) {\n                var this$1 = this;\n\n\n                el = el && $$1(isString(el) ? el.replace(/\\//g, '\\\\/') : el) || doc.body;\n\n                var target = offset(el).top - this.offset,\n                    docHeight = height(doc),\n                    winHeight = height(win);\n\n                if (target + winHeight > docHeight) {\n                    target = docHeight - winHeight;\n                }\n\n                if (!trigger(this.$el, 'beforescroll', [this, el])) {\n                    return;\n                }\n\n                var start = Date.now(),\n                    startY = win.pageYOffset,\n                    step = function () {\n                        var currentY = startY + (target - startY) * ease(clamp((Date.now() - start) / this$1.duration));\n\n                        win.scrollTo(win.pageXOffset, currentY);\n\n                        // scroll more if we have not reached our destination\n                        if (currentY !== target) {\n                            requestAnimationFrame(step);\n                        } else {\n                            trigger(this$1.$el, 'scrolled', [this$1, el]);\n                        }\n                    };\n\n                step();\n\n            }\n\n        },\n\n        events: {\n\n            click: function click(e) {\n\n                if (e.defaultPrevented) {\n                    return;\n                }\n\n                e.preventDefault();\n                this.scrollTo(this.$el.hash);\n            }\n\n        }\n\n    });\n\n    function ease(k) {\n        return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n};\n\nvar Scrollspy = function (UIkit) {\n\n    UIkit.component('scrollspy', {\n\n        args: 'cls',\n\n        props: {\n            cls: 'list',\n            target: String,\n            hidden: Boolean,\n            offsetTop: Number,\n            offsetLeft: Number,\n            repeat: Boolean,\n            delay: Number\n        },\n\n        defaults: {\n            cls: ['uk-scrollspy-inview'],\n            target: false,\n            hidden: true,\n            offsetTop: 0,\n            offsetLeft: 0,\n            repeat: false,\n            delay: 0,\n            inViewClass: 'uk-scrollspy-inview'\n        },\n\n        computed: {\n\n            elements: function elements(ref, $el) {\n                var target = ref.target;\n\n                return target && $$(target, $el) || [$el];\n            }\n\n        },\n\n        update: [\n\n            {\n\n                write: function write() {\n                    if (this.hidden) {\n                        css(filter(this.elements, (\":not(.\" + (this.inViewClass) + \")\")), 'visibility', 'hidden');\n                    }\n                }\n\n            },\n\n            {\n\n                read: function read() {\n                    var this$1 = this;\n\n                    this.elements.forEach(function (el) {\n\n                        if (!el._scrollspy) {\n                            var cls = attr(el, 'uk-scrollspy-class');\n                            el._scrollspy = {toggles: cls && cls.split(',') || this$1.cls};\n                        }\n\n                        el._scrollspy.show = isInView(el, this$1.offsetTop, this$1.offsetLeft);\n\n                    });\n                },\n\n                write: function write() {\n                    var this$1 = this;\n\n\n                    var index = this.elements.length === 1 ? 1 : 0;\n\n                    this.elements.forEach(function (el, i) {\n\n                        var data = el._scrollspy, cls = data.toggles[i] || data.toggles[0];\n\n                        if (data.show) {\n\n                            if (!data.inview && !data.timer) {\n\n                                var show = function () {\n                                    css(el, 'visibility', '');\n                                    addClass(el, this$1.inViewClass);\n                                    toggleClass(el, cls);\n\n                                    trigger(el, 'inview');\n\n                                    this$1.$update();\n\n                                    data.inview = true;\n                                    delete data.timer;\n                                };\n\n                                if (this$1.delay && index) {\n                                    data.timer = setTimeout(show, this$1.delay * index);\n                                } else {\n                                    show();\n                                }\n\n                                index++;\n\n                            }\n\n                        } else {\n\n                            if (data.inview && this$1.repeat) {\n\n                                if (data.timer) {\n                                    clearTimeout(data.timer);\n                                    delete data.timer;\n                                }\n\n                                css(el, 'visibility', this$1.hidden ? 'hidden' : '');\n                                removeClass(el, this$1.inViewClass);\n                                toggleClass(el, cls);\n\n                                trigger(el, 'outview');\n\n                                this$1.$update();\n\n                                data.inview = false;\n\n                            }\n\n                        }\n\n                    });\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n\n            }\n\n        ]\n\n    });\n\n};\n\nvar ScrollspyNav = function (UIkit) {\n\n    UIkit.component('scrollspy-nav', {\n\n        props: {\n            cls: String,\n            closest: String,\n            scroll: Boolean,\n            overflow: Boolean,\n            offset: Number\n        },\n\n        defaults: {\n            cls: 'uk-active',\n            closest: false,\n            scroll: false,\n            overflow: true,\n            offset: 0\n        },\n\n        computed: {\n\n            links: function links(_, $el) {\n                return $$('a[href^=\"#\"]', $el).filter(function (el) { return el.hash; });\n            },\n\n            elements: function elements() {\n                return this.closest ? closest(this.links, this.closest) : this.links;\n            },\n\n            targets: function targets() {\n                return $$(this.links.map(function (el) { return el.hash; }).join(','));\n            }\n\n        },\n\n        update: [\n\n            {\n\n                read: function read() {\n                    if (this.scroll) {\n                        UIkit.scroll(this.links, {offset: this.offset || 0});\n                    }\n                }\n\n            },\n\n            {\n\n                read: function read() {\n                    var this$1 = this;\n\n\n                    var scroll = win.pageYOffset + this.offset + 1,\n                        max = height(doc) - height(win) + this.offset;\n\n                    this.active = false;\n\n                    this.targets.every(function (el, i) {\n\n                        var top = offset(el).top, last = i + 1 === this$1.targets.length;\n                        if (!this$1.overflow && (i === 0 && top > scroll || last && top + el.offsetTop < scroll)) {\n                            return false;\n                        }\n\n                        if (!last && offset(this$1.targets[i + 1]).top <= scroll) {\n                            return true;\n                        }\n\n                        if (scroll >= max) {\n                            for (var j = this$1.targets.length - 1; j > i; j--) {\n                                if (isInView(this$1.targets[j])) {\n                                    el = this$1.targets[j];\n                                    break;\n                                }\n                            }\n                        }\n\n                        return !(this$1.active = $$1(filter(this$1.links, (\"[href=\\\"#\" + (el.id) + \"\\\"]\"))));\n\n                    });\n\n                },\n\n                write: function write() {\n\n                    this.links.forEach(function (el) { return el.blur(); });\n                    removeClass(this.elements, this.cls);\n\n                    if (this.active) {\n                        trigger(this.$el, 'active', [\n                            this.active,\n                            addClass(this.closest ? closest(this.active, this.closest) : this.active, this.cls)\n                        ]);\n                    }\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n\n            }\n\n        ]\n\n    });\n\n};\n\nvar Sticky = function (UIkit) {\n\n    UIkit.component('sticky', {\n\n        mixins: [Class],\n\n        attrs: true,\n\n        props: {\n            top: null,\n            bottom: Boolean,\n            offset: Number,\n            animation: String,\n            clsActive: String,\n            clsInactive: String,\n            clsFixed: String,\n            clsBelow: String,\n            selTarget: String,\n            widthElement: 'query',\n            showOnUp: Boolean,\n            media: 'media',\n            target: Number\n        },\n\n        defaults: {\n            top: 0,\n            bottom: false,\n            offset: 0,\n            animation: '',\n            clsActive: 'uk-active',\n            clsInactive: '',\n            clsFixed: 'uk-sticky-fixed',\n            clsBelow: 'uk-sticky-below',\n            selTarget: '',\n            widthElement: false,\n            showOnUp: false,\n            media: false,\n            target: false\n        },\n\n        computed: {\n\n            selTarget: function selTarget(ref, $el) {\n                var selTarget = ref.selTarget;\n\n                return selTarget && $$1(selTarget, $el) || $el;\n            }\n\n        },\n\n        connected: function connected() {\n\n            this.placeholder = $$1('<div class=\"uk-sticky-placeholder\"></div>');\n            this.widthElement = this.$props.widthElement || this.placeholder;\n\n            if (!this.isActive) {\n                this.hide();\n            }\n        },\n\n        disconnected: function disconnected() {\n\n            if (this.isActive) {\n                this.isActive = false;\n                this.hide();\n                removeClass(this.$el, this.clsInactive);\n            }\n\n            remove(this.placeholder);\n            this.placeholder = null;\n            this.widthElement = null;\n        },\n\n        ready: function ready() {\n            var this$1 = this;\n\n\n            if (!(this.target && location.hash && win.pageYOffset > 0)) {\n                return;\n            }\n\n            var target = $$1(location.hash);\n\n            if (target) {\n                requestAnimationFrame(function () {\n\n                    var top = offset(target).top,\n                        elTop = offset(this$1.$el).top,\n                        elHeight = this$1.$el.offsetHeight;\n\n                    if (elTop + elHeight >= top && elTop <= top + target.offsetHeight) {\n                        win.scrollTo(0, top - elHeight - this$1.target - this$1.offset);\n                    }\n\n                });\n            }\n\n        },\n\n        events: [\n\n            {\n                name: 'active',\n\n                self: true,\n\n                handler: function handler() {\n                    replaceClass(this.selTarget, this.clsInactive, this.clsActive);\n                }\n\n            },\n\n            {\n                name: 'inactive',\n\n                self: true,\n\n                handler: function handler() {\n                    replaceClass(this.selTarget, this.clsActive, this.clsInactive);\n                }\n\n            }\n\n        ],\n\n        update: [\n\n            {\n\n                write: function write() {\n                    var this$1 = this;\n\n\n                    var placeholder = this.placeholder,\n                        outerHeight = (this.isActive ? placeholder : this.$el).offsetHeight, el;\n\n                    css(placeholder, assign(\n                        {height: css(this.$el, 'position') !== 'absolute' ? outerHeight : ''},\n                        css(this.$el, ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'])\n                    ));\n\n                    if (!within(placeholder, docEl)) {\n                        after(this.$el, placeholder);\n                        attr(placeholder, 'hidden', '');\n                    }\n\n                    attr(this.widthElement, 'hidden', null);\n                    this.width = this.widthElement.offsetWidth;\n                    attr(this.widthElement, 'hidden', this.isActive ? null : '');\n\n                    this.topOffset = offset(this.isActive ? placeholder : this.$el).top;\n                    this.bottomOffset = this.topOffset + outerHeight;\n\n                    ['top', 'bottom'].forEach(function (prop) {\n\n                        this$1[prop] = this$1.$props[prop];\n\n                        if (!this$1[prop]) {\n                            return;\n                        }\n\n                        if (isNumeric(this$1[prop])) {\n\n                            this$1[prop] = this$1[(prop + \"Offset\")] + toFloat(this$1[prop]);\n\n                        } else {\n\n                            if (isString(this$1[prop]) && this$1[prop].match(/^-?\\d+vh$/)) {\n                                this$1[prop] = height(win) * toFloat(this$1[prop]) / 100;\n                            } else {\n\n                                el = this$1[prop] === true ? this$1.$el.parentNode : query(this$1[prop], this$1.$el);\n\n                                if (el) {\n                                    this$1[prop] = offset(el).top + el.offsetHeight;\n                                }\n\n                            }\n\n                        }\n\n                    });\n\n                    this.top = Math.max(toFloat(this.top), this.topOffset) - this.offset;\n                    this.bottom = this.bottom && this.bottom - outerHeight;\n                    this.inactive = this.media && !win.matchMedia(this.media).matches;\n\n                    if (this.isActive) {\n                        this.update();\n                    }\n                },\n\n                events: ['load', 'resize']\n\n            },\n\n            {\n\n                read: function read() {\n                    this.offsetTop = offset(this.$el).top;\n                    this.scroll = win.pageYOffset;\n                    this.visible = isVisible(this.$el);\n                },\n\n                write: function write(ref) {\n                    var this$1 = this;\n                    if ( ref === void 0 ) ref = {};\n                    var dir = ref.dir;\n\n\n                    var scroll = this.scroll;\n\n                    if (scroll < 0 || !this.visible || this.disabled || this.showOnUp && !dir) {\n                        return;\n                    }\n\n                    if (this.inactive\n                        || scroll < this.top\n                        || this.showOnUp && (scroll <= this.top || dir === 'down' || dir === 'up' && !this.isActive && scroll <= this.bottomOffset)\n                    ) {\n\n                        if (!this.isActive) {\n                            return;\n                        }\n\n                        this.isActive = false;\n\n                        if (this.animation && scroll > this.topOffset) {\n                            Animation.cancel(this.$el);\n                            Animation.out(this.$el, this.animation).then(function () { return this$1.hide(); }, noop);\n                        } else {\n                            this.hide();\n                        }\n\n                    } else if (this.isActive) {\n\n                        this.update();\n\n                    } else if (this.animation) {\n\n                        Animation.cancel(this.$el);\n                        this.show();\n                        Animation.in(this.$el, this.animation).catch(noop);\n\n                    } else {\n                        this.show();\n                    }\n\n                },\n\n                events: ['scroll']\n\n            } ],\n\n        methods: {\n\n            show: function show() {\n\n                this.isActive = true;\n                this.update();\n                attr(this.placeholder, 'hidden', null);\n\n            },\n\n            hide: function hide() {\n\n                if (!this.isActive || hasClass(this.selTarget, this.clsActive)) {\n                    trigger(this.$el, 'inactive');\n                }\n\n                removeClass(this.$el, this.clsFixed, this.clsBelow);\n                css(this.$el, {position: '', top: '', width: ''});\n                attr(this.placeholder, 'hidden', '');\n\n            },\n\n            update: function update() {\n\n                var top = Math.max(0, this.offset), active = this.scroll > this.top;\n\n                if (this.bottom && this.scroll > this.bottom - this.offset) {\n                    top = this.bottom - this.scroll;\n                }\n\n                css(this.$el, {\n                    position: 'fixed',\n                    top: (top + \"px\"),\n                    width: this.width\n                });\n\n                if (hasClass(this.selTarget, this.clsActive)) {\n\n                    if (!active) {\n                        trigger(this.$el, 'inactive');\n                    }\n\n                } else {\n\n                    if (active) {\n                        trigger(this.$el, 'active');\n                    }\n                }\n\n                toggleClass(this.$el, this.clsBelow, this.scroll > this.bottomOffset);\n                addClass(this.$el, this.clsFixed);\n\n            }\n\n        }\n\n    });\n\n};\n\nvar svgs = {};\n\nvar Svg = function (UIkit) {\n\n    UIkit.component('svg', {\n\n        attrs: true,\n\n        props: {\n            id: String,\n            icon: String,\n            src: String,\n            style: String,\n            width: Number,\n            height: Number,\n            ratio: Number,\n            'class': String\n        },\n\n        defaults: {\n            ratio: 1,\n            id: false,\n            exclude: ['src'],\n            'class': ''\n        },\n\n        init: function init() {\n            this.class += ' uk-svg';\n        },\n\n        connected: function connected() {\n            var this$1 = this;\n\n\n            if (!this.icon && includes(this.src, '#')) {\n\n                var parts = this.src.split('#');\n\n                if (parts.length > 1) {\n                    this.src = parts[0];\n                    this.icon = parts[1];\n                }\n            }\n\n            this.svg = this.getSvg().then(function (svg) {\n\n                var el;\n\n                if (isString(svg)) {\n\n                    if (this$1.icon && includes(svg, '<symbol')) {\n                        svg = parseSymbols(svg, this$1.icon) || svg;\n                    }\n\n                    el = $$1(svg.substr(svg.indexOf('<svg')));\n\n                } else {\n                    el = svg.cloneNode(true);\n                }\n\n                if (!el) {\n                    return Promise.reject('SVG not found.');\n                }\n\n                var dimensions = attr(el, 'viewBox');\n\n                if (dimensions) {\n                    dimensions = dimensions.split(' ');\n                    this$1.width = this$1.$props.width || dimensions[2];\n                    this$1.height = this$1.$props.height || dimensions[3];\n                }\n\n                this$1.width *= this$1.ratio;\n                this$1.height *= this$1.ratio;\n\n                for (var prop in this$1.$options.props) {\n                    if (this$1[prop] && !includes(this$1.exclude, prop)) {\n                        attr(el, prop, this$1[prop]);\n                    }\n                }\n\n                if (!this$1.id) {\n                    removeAttr(el, 'id');\n                }\n\n                if (this$1.width && !this$1.height) {\n                    removeAttr(el, 'height');\n                }\n\n                if (this$1.height && !this$1.width) {\n                    removeAttr(el, 'width');\n                }\n\n                var root = this$1.$el;\n                if (isVoidElement(root) || root.tagName === 'CANVAS') {\n\n                    attr(root, {hidden: true, id: null});\n\n                    var next = root.nextElementSibling;\n                    if (next && el.isEqualNode(next)) {\n                        el = next;\n                    } else {\n                        after(root, el);\n                    }\n\n                } else {\n\n                    var last = root.lastElementChild;\n                    if (last && el.isEqualNode(last)) {\n                        el = last;\n                    } else {\n                        append(root, el);\n                    }\n\n                }\n\n                this$1.svgEl = el;\n\n                return el;\n\n            }, noop);\n\n        },\n\n        disconnected: function disconnected() {\n            var this$1 = this;\n\n\n            if (isVoidElement(this.$el)) {\n                attr(this.$el, {hidden: null, id: this.id || null});\n            }\n\n            if (this.svg) {\n                this.svg.then(function (svg) { return (!this$1._connected || svg !== this$1.svgEl) && remove(svg); }, noop);\n            }\n\n            this.svg = this.svgEl = null;\n\n        },\n\n        methods: {\n\n            getSvg: function getSvg() {\n                var this$1 = this;\n\n\n                if (!this.src) {\n                    return Promise.reject();\n                }\n\n                if (svgs[this.src]) {\n                    return svgs[this.src];\n                }\n\n                svgs[this.src] = new Promise(function (resolve, reject) {\n\n                    if (startsWith(this$1.src, 'data:')) {\n                        resolve(decodeURIComponent(this$1.src.split(',')[1]));\n                    } else {\n\n                        ajax(this$1.src).then(\n                            function (xhr) { return resolve(xhr.response); },\n                            function () { return reject('SVG not found.'); }\n                        );\n\n                    }\n\n                });\n\n                return svgs[this.src];\n\n            }\n\n        }\n\n    });\n\n    var symbolRe = /<symbol(.*?id=(['\"])(.*?)\\2[^]*?<\\/)symbol>/g,\n        symbols = {};\n\n    function parseSymbols(svg, icon) {\n\n        if (!symbols[svg]) {\n\n            symbols[svg] = {};\n\n            var match;\n            while (match = symbolRe.exec(svg)) {\n                symbols[svg][match[3]] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + (match[1]) + \"svg>\";\n            }\n\n        }\n\n        return symbols[svg][icon];\n    }\n\n};\n\nvar Switcher = function (UIkit) {\n\n    UIkit.component('switcher', {\n\n        mixins: [Togglable],\n\n        args: 'connect',\n\n        props: {\n            connect: String,\n            toggle: String,\n            active: Number,\n            swiping: Boolean\n        },\n\n        defaults: {\n            connect: '~.uk-switcher',\n            toggle: '> *',\n            active: 0,\n            swiping: true,\n            cls: 'uk-active',\n            clsContainer: 'uk-switcher',\n            attrItem: 'uk-switcher-item',\n            queued: true\n        },\n\n        computed: {\n\n            connects: function connects(ref, $el) {\n                var connect = ref.connect;\n\n                return queryAll(connect, $el);\n            },\n\n            toggles: function toggles(ref, $el) {\n                var toggle = ref.toggle;\n\n                return $$(toggle, $el);\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return ((this.toggle) + \":not(.uk-disabled)\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.show(e.current);\n                }\n\n            },\n\n            {\n                name: 'click',\n\n                el: function el() {\n                    return this.connects;\n                },\n\n                delegate: function delegate() {\n                    return (\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.show(data(e.current, this.attrItem));\n                }\n            },\n\n            {\n                name: 'swipeRight swipeLeft',\n\n                filter: function filter() {\n                    return this.swiping;\n                },\n\n                el: function el() {\n                    return this.connects;\n                },\n\n                handler: function handler(e) {\n                    if (!isTouch(e)) {\n                        return;\n                    }\n\n                    e.preventDefault();\n                    if (!win.getSelection().toString()) {\n                        this.show(e.type === 'swipeLeft' ? 'next' : 'previous');\n                    }\n                }\n            }\n\n        ],\n\n        update: function update() {\n            var this$1 = this;\n\n\n            this.connects.forEach(function (list) { return this$1.updateAria(list.children); });\n            this.show(filter(this.toggles, (\".\" + (this.cls)))[0] || this.toggles[this.active] || this.toggles[0]);\n\n        },\n\n        methods: {\n\n            show: function show(item) {\n                var this$1 = this;\n\n\n                var length = this.toggles.length,\n                    prev = this.connects.length && index(filter(this.connects[0].children, (\".\" + (this.cls)))[0]),\n                    hasPrev = prev >= 0,\n                    next = getIndex(item, this.toggles, prev),\n                    dir = item === 'previous' ? -1 : 1,\n                    toggle;\n\n                for (var i = 0; i < length; i++, next = (next + dir + length) % length) {\n                    if (!matches(this$1.toggles[next], '.uk-disabled, [disabled]')) {\n                        toggle = this$1.toggles[next];\n                        break;\n                    }\n                }\n\n                if (!toggle || prev >= 0 && hasClass(toggle, this.cls) || prev === next) {\n                    return;\n                }\n\n                removeClass(this.toggles, this.cls);\n                attr(this.toggles, 'aria-expanded', false);\n                addClass(toggle, this.cls);\n                attr(toggle, 'aria-expanded', true);\n\n                this.connects.forEach(function (list) {\n                    if (!hasPrev) {\n                        this$1.toggleNow(list.children[next]);\n                    } else {\n                        this$1.toggleElement([list.children[prev], list.children[next]]);\n                    }\n                });\n\n            }\n\n        }\n\n    });\n\n};\n\nvar Tab = function (UIkit) {\n\n    UIkit.component('tab', UIkit.components.switcher.extend({\n\n        mixins: [Class],\n\n        name: 'tab',\n\n        props: {\n            media: 'media'\n        },\n\n        defaults: {\n            media: 960,\n            attrItem: 'uk-tab-item'\n        },\n\n        init: function init() {\n\n            var cls = hasClass(this.$el, 'uk-tab-left')\n                ? 'uk-tab-left'\n                : hasClass(this.$el, 'uk-tab-right')\n                    ? 'uk-tab-right'\n                    : false;\n\n            if (cls) {\n                UIkit.toggle(this.$el, {cls: cls, mode: 'media', media: this.media});\n            }\n        }\n\n    }));\n\n};\n\nvar Toggle = function (UIkit) {\n\n    UIkit.component('toggle', {\n\n        mixins: [UIkit.mixin.togglable],\n\n        args: 'target',\n\n        props: {\n            href: String,\n            target: null,\n            mode: 'list',\n            media: 'media'\n        },\n\n        defaults: {\n            href: false,\n            target: false,\n            mode: 'click',\n            queued: true,\n            media: false\n        },\n\n        computed: {\n\n            target: function target(ref, $el) {\n                var href = ref.href;\n                var target = ref.target;\n\n                target = queryAll(target || href, $el);\n                return target.length && target || [$el];\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: (pointerEnter + \" \" + pointerLeave),\n\n                filter: function filter() {\n                    return includes(this.mode, 'hover');\n                },\n\n                handler: function handler(e) {\n                    if (!isTouch(e)) {\n                        this.toggle((\"toggle\" + (e.type === pointerEnter ? 'show' : 'hide')));\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'click',\n\n                filter: function filter() {\n                    return includes(this.mode, 'click') || hasTouch;\n                },\n\n                handler: function handler(e) {\n\n                    if (!isTouch(e) && !includes(this.mode, 'click')) {\n                        return;\n                    }\n\n                    // TODO better isToggled handling\n                    var link;\n                    if (closest(e.target, 'a[href=\"#\"], button')\n                        || (link = closest(e.target, 'a[href]')) && (\n                            this.cls\n                            || !isVisible(this.target)\n                            || link.hash && matches(this.target, link.hash)\n                        )\n                    ) {\n                        e.preventDefault();\n                    }\n\n                    this.toggle();\n                }\n\n            }\n        ],\n\n        update: {\n\n            write: function write() {\n\n                if (!includes(this.mode, 'media') || !this.media) {\n                    return;\n                }\n\n                var toggled = this.isToggled(this.target);\n                if (win.matchMedia(this.media).matches ? !toggled : toggled) {\n                    this.toggle();\n                }\n\n            },\n\n            events: ['load', 'resize']\n\n        },\n\n        methods: {\n\n            toggle: function toggle(type) {\n                if (trigger(this.target, type || 'toggle', [this])) {\n                    this.toggleElement(this.target);\n                }\n            }\n\n        }\n\n    });\n\n};\n\nvar Video = function (UIkit) {\n\n    UIkit.component('video', {\n\n        props: {\n            automute: Boolean,\n            autoplay: Boolean,\n        },\n\n        defaults: {automute: false, autoplay: true},\n\n        ready: function ready() {\n\n            this.player = new Player(this.$el);\n\n            if (this.automute) {\n                this.player.mute();\n            }\n\n        },\n\n        update: {\n\n            write: function write() {\n\n                if (!this.player) {\n                    return;\n                }\n\n                if (!isVisible(this.$el) || css(this.$el, 'visibility') === 'hidden') {\n                    this.player.pause();\n                } else if (this.autoplay) {\n                    this.player.play();\n                }\n\n            },\n\n            events: ['load']\n\n        },\n\n    });\n\n};\n\nvar core = function (UIkit) {\n\n    var scroll = 0, started = 0;\n\n    on(win, 'load resize', UIkit.update);\n    on(win, 'scroll', function (e) {\n        e.dir = scroll < win.pageYOffset ? 'down' : 'up';\n        scroll = win.pageYOffset;\n        UIkit.update(e);\n        fastdom.flush();\n    });\n\n    animationstart && on(doc, animationstart, function (ref) {\n        var target = ref.target;\n\n        if ((css(target, 'animationName') || '').match(/^uk-.*(left|right)/)) {\n            started++;\n            doc.body.style.overflowX = 'hidden';\n            setTimeout(function () {\n                if (!--started) {\n                    doc.body.style.overflowX = '';\n                }\n            }, toMs(css(target, 'animationDuration')) + 100);\n        }\n    }, true);\n\n    // core components\n    UIkit.use(Toggle);\n    UIkit.use(Accordion);\n    UIkit.use(Alert);\n    UIkit.use(Video);\n    UIkit.use(Cover);\n    UIkit.use(Drop);\n    UIkit.use(Dropdown);\n    UIkit.use(FormCustom);\n    UIkit.use(HeightMatch);\n    UIkit.use(HeightViewport);\n    UIkit.use(Hover);\n    UIkit.use(Margin);\n    UIkit.use(Gif);\n    UIkit.use(Grid);\n    UIkit.use(Leader);\n    UIkit.use(Modal$1);\n    UIkit.use(Nav);\n    UIkit.use(Navbar);\n    UIkit.use(Offcanvas);\n    UIkit.use(Responsive);\n    UIkit.use(Scroll);\n    UIkit.use(Scrollspy);\n    UIkit.use(ScrollspyNav);\n    UIkit.use(Sticky);\n    UIkit.use(Svg);\n    UIkit.use(Icon);\n    UIkit.use(Switcher);\n    UIkit.use(Tab);\n\n};\n\nUIkit$2.version = '3.0.0-beta.34';\n\nmixin(UIkit$2);\ncore(UIkit$2);\n\nfunction plugin(UIkit) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var $ = ref.$;\n    var doc = ref.doc;\n    var empty = ref.empty;\n    var html = ref.html;\n\n    UIkit.component('countdown', {\n\n        mixins: [UIkit.mixin.class],\n\n        attrs: true,\n\n        props: {\n            date: String,\n            clsWrapper: String\n        },\n\n        defaults: {\n            date: '',\n            clsWrapper: '.uk-countdown-%unit%'\n        },\n\n        computed: {\n\n            date: function date(ref) {\n                var date = ref.date;\n\n                return Date.parse(date);\n            },\n\n            days: function days(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'days'), $el);\n            },\n\n            hours: function hours(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'hours'), $el);\n            },\n\n            minutes: function minutes(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'minutes'), $el);\n            },\n\n            seconds: function seconds(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'seconds'), $el);\n            },\n\n            units: function units() {\n                var this$1 = this;\n\n                return ['days', 'hours', 'minutes', 'seconds'].filter(function (unit) { return this$1[unit]; });\n            }\n\n        },\n\n        connected: function connected() {\n            this.start();\n        },\n\n        disconnected: function disconnected() {\n            var this$1 = this;\n\n            this.stop();\n            this.units.forEach(function (unit) { return empty(this$1[unit]); });\n        },\n\n        events: [\n\n            {\n\n                name: 'visibilitychange',\n\n                el: doc,\n\n                handler: function handler() {\n                    if (doc.hidden) {\n                        this.stop();\n                    } else  {\n                        this.start();\n                    }\n                }\n\n            }\n\n        ],\n\n        update: {\n\n            write: function write() {\n                var this$1 = this;\n\n\n                var timespan = getTimeSpan(this.date);\n\n                if (timespan.total <= 0) {\n\n                    this.stop();\n\n                    timespan.days\n                        = timespan.hours\n                        = timespan.minutes\n                        = timespan.seconds\n                        = 0;\n                }\n\n                this.units.forEach(function (unit) {\n\n                    var digits = String(Math.floor(timespan[unit]));\n\n                    digits = digits.length < 2 ? (\"0\" + digits) : digits;\n\n                    var el = this$1[unit];\n                    if (el.textContent !== digits) {\n                        digits = digits.split('');\n\n                        if (digits.length !== el.children.length) {\n                            html(el, digits.map(function () { return '<span></span>'; }).join(''));\n                        }\n\n                        digits.forEach(function (digit, i) { return el.children[i].textContent = digit; });\n                    }\n\n                });\n\n            }\n\n        },\n\n        methods: {\n\n            start: function start() {\n                var this$1 = this;\n\n\n                this.stop();\n\n                if (this.date && this.units.length) {\n                    this.$emit();\n                    this.timer = setInterval(function () { return this$1.$emit(); }, 1000);\n                }\n\n            },\n\n            stop: function stop() {\n\n                if (this.timer) {\n                    clearInterval(this.timer);\n                    this.timer = null;\n                }\n\n            }\n\n        }\n\n    });\n\n    function getTimeSpan(date) {\n\n        var total = date - Date.now();\n\n        return {\n            total: total,\n            seconds: total / 1000 % 60,\n            minutes: total / 1000 / 60 % 60,\n            hours: total / 1000 / 60 / 60 % 24,\n            days: total / 1000 / 60 / 60 / 24\n        };\n    }\n\n}\n\nif (false) {\n    window.UIkit.use(plugin);\n}\n\nfunction plugin$1(UIkit) {\n\n    if (plugin$1.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var $$ = ref.$$;\n    var addClass = ref.addClass;\n    var css = ref.css;\n    var scrolledOver = ref.scrolledOver;\n    var toFloat = ref.toFloat;\n    var toNodes = ref.toNodes;\n\n    UIkit.component('grid-parallax', UIkit.components.grid.extend({\n\n        props: {\n            target: String,\n            translate: Number\n        },\n\n        defaults: {\n            target: false,\n            translate: 150\n        },\n\n        computed: {\n\n            translate: function translate(ref) {\n                var translate = ref.translate;\n\n                return Math.abs(translate);\n            },\n\n            items: function items(ref, $el) {\n                var target = ref.target;\n\n                return target ? $$(target, $el) : toNodes($el.children);\n            }\n\n        },\n\n        init: function init() {\n            addClass(this.$el, 'uk-grid');\n        },\n\n        disconnected: function disconnected() {\n            this.reset();\n            css(this.$el, 'marginBottom', '');\n        },\n\n        update: [\n\n            {\n\n                read: function read() {\n                    this.columns = this.rows && this.rows[0] && this.rows[0].length || 0;\n                    this.rows = this.rows && this.rows.map(function (elements) { return sortBy(elements, 'offsetLeft'); });\n                },\n\n                write: function write() {\n                    css(this.$el, 'marginBottom', this.columns > 1\n                        ? this.translate + toFloat(css(css(this.$el, 'marginBottom', ''), 'marginBottom'))\n                        : '');\n                },\n\n                events: ['load', 'resize']\n            },\n\n            {\n\n                read: function read() {\n\n                    this.scrolled = scrolledOver(this.$el) * this.translate;\n\n                },\n\n                write: function write() {\n                    var this$1 = this;\n\n\n                    if (!this.rows || this.columns === 1 || !this.scrolled) {\n                        return this.reset();\n                    }\n\n                    this.rows.forEach(function (row) { return row.forEach(function (el, i) { return css(el, 'transform', (\"translateY(\" + (i % 2 ? this$1.scrolled : this$1.scrolled / 8) + \"px)\")); }\n                        ); }\n                    );\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n            }\n        ],\n\n        methods: {\n\n            reset: function reset() {\n                css(this.items, 'transform', '');\n            }\n\n        }\n\n    }));\n\n    UIkit.component('grid-parallax').options.update.unshift({\n\n        read: function read() {\n            this.reset();\n        },\n\n        events: ['load', 'resize']\n\n    });\n\n    function sortBy(collection, prop) {\n        return collection.sort(function (a, b) { return a[prop] > b[prop]\n                ? 1\n                : b[prop] > a[prop]\n                    ? -1\n                    : 0; }\n        )\n    }\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$1);\n}\n\nvar Animations = function (UIkit) {\n\n    var ref = UIkit.util;\n    var css = ref.css;\n\n    var Animations = {\n\n        slide: {\n\n            show: function show(dir) {\n                return [\n                    {transform: translate(dir * -100)},\n                    {transform: translate()}\n                ];\n            },\n\n            percent: function percent(current) {\n                return Animations.translated(current);\n            },\n\n            translate: function translate$1(percent, dir) {\n                return [\n                    {transform: translate(dir * -100 * percent)},\n                    {transform: translate(dir * 100 * (1 - percent))}\n                ];\n            }\n\n        },\n\n        translated: function translated(el) {\n            return Math.abs(css(el, 'transform').split(',')[4] / el.offsetWidth)\n        }\n\n    };\n\n    return Animations;\n\n};\n\nfunction translate(value) {\n    if ( value === void 0 ) value = 0;\n\n    return (\"translate(\" + value + (value ? '%' : '') + \", 0)\"); // currently not translate3d to support IE, translate3d within translate3d does not work while transitioning\n}\n\nfunction scale3d(value) {\n    return (\"scale3d(\" + value + \", \" + value + \", 1)\");\n}\n\nfunction plugin$3(UIkit) {\n\n    if (plugin$3.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var $$ = ref.$$;\n    var $ = ref.$;\n    var addClass = ref.addClass;\n    var assign = ref.assign;\n    var createEvent = ref.createEvent;\n    var css = ref.css;\n    var data = ref.data;\n    var doc = ref.doc;\n    var endsWith = ref.endsWith;\n    var fastdom = ref.fastdom;\n    var getIndex = ref.getIndex;\n    var getPos = ref.getPos;\n    var hasClass = ref.hasClass;\n    var index = ref.index;\n    var isTouch = ref.isTouch;\n    var noop = ref.noop;\n    var off = ref.off;\n    var on = ref.on;\n    var pointerDown = ref.pointerDown;\n    var pointerMove = ref.pointerMove;\n    var pointerUp = ref.pointerUp;\n    var preventClick = ref.preventClick;\n    var Promise = ref.Promise;\n    var removeClass = ref.removeClass;\n    var toggleClass = ref.toggleClass;\n    var toNodes = ref.toNodes;\n    var Transition = ref.Transition;\n    var trigger = ref.trigger;\n    var win = ref.win;\n\n    var abs = Math.abs;\n\n    UIkit.mixin.slideshow = {\n\n        attrs: true,\n\n        props: {\n            autoplay: Boolean,\n            autoplayInterval: Number,\n            pauseOnHover: Boolean,\n            animation: String,\n            easing: String,\n            velocity: Number\n        },\n\n        defaults: {\n            autoplay: false,\n            autoplayInterval: 7000,\n            pauseOnHover: true,\n            animation: 'slide',\n            easing: 'ease',\n            velocity: 1,\n            index: 0,\n            stack: [],\n            threshold: 10,\n            percent: 0,\n            clsActive: 'uk-active',\n            clsActivated: 'uk-transition-active',\n            initialAnimation: false,\n            Animations: Animations(UIkit)\n        },\n\n        computed: {\n\n            list: function list(ref, $el) {\n                var selList = ref.selList;\n\n                return $(selList, $el);\n            },\n\n            slides: function slides() {\n                return toNodes(this.list.children);\n            },\n\n            animation: function animation(ref) {\n                var animation = ref.animation;\n                var Animations$$1 = ref.Animations;\n\n                return assign(animation in Animations$$1 ? Animations$$1[animation] : Animations$$1.slide, {name: animation});\n            },\n\n            duration: function duration(ref, $el) {\n                var velocity = ref.velocity;\n\n                return speedUp($el.offsetWidth / velocity);\n            }\n\n        },\n\n        init: function init() {\n            var this$1 = this;\n\n            ['start', 'move', 'end'].forEach(function (key) {\n                var fn = this$1[key];\n                this$1[key] = function (e) {\n\n                    var pos = getPos(e).x;\n\n                    this$1.prevPos = pos !== this$1.pos ? this$1.pos : this$1.prevPos;\n                    this$1.pos = pos;\n\n                    fn(e);\n                };\n            });\n        },\n\n        connected: function connected() {\n            this.startAutoplay();\n        },\n\n        disconnected: function disconnected() {\n            this.stopAutoplay();\n        },\n\n        update: [\n\n            {\n\n                read: function read() {\n                    delete this._computeds.duration;\n                },\n\n                events: ['load', 'resize']\n\n            }\n\n        ],\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return (\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    e.current.blur();\n                    this.show(data(e.current, this.attrItem));\n                }\n\n            },\n\n            {\n\n                name: pointerDown,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(e) {\n                    if (isTouch(e) || !hasTextNodesOnly(e.target)) {\n                        this.start(e);\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'visibilitychange',\n\n                el: doc,\n\n                handler: function handler() {\n                    if (doc.hidden) {\n                        this.stopAutoplay();\n                    } else  {\n                        this.startAutoplay();\n                    }\n                }\n\n            },\n\n            {\n\n                name: pointerDown,\n                handler: 'stopAutoplay'\n\n            },\n\n            {\n\n                name: 'mouseenter',\n\n                filter: function filter() {\n                    return this.autoplay;\n                },\n\n                handler: function handler() {\n                    this.isHovering = true;\n                }\n\n            },\n\n            {\n\n                name: 'mouseleave',\n\n                filter: function filter() {\n                    return this.autoplay;\n                },\n\n                handler: function handler() {\n                    this.isHovering = false;\n                }\n\n            },\n\n            {\n\n                name: 'beforeitemshow',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(ref) {\n                    var target = ref.target;\n\n                    addClass(target, this.clsActive);\n                }\n\n            },\n\n            {\n\n                name: 'itemshown',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(ref) {\n                    var target = ref.target;\n\n                    addClass(target, this.clsActivated);\n                }\n\n            },\n\n            {\n\n                name: 'itemshow itemhide',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(ref) {\n                    var type = ref.type;\n                    var target = ref.target;\n\n                    toggleClass($$((\"[\" + (this.attrItem) + \"=\\\"\" + (index(target)) + \"\\\"],[data-\" + (this.attrItem) + \"=\\\"\" + (index(target)) + \"\\\"]\"), this.$el), this.clsActive, endsWith(type, 'show'));\n                }\n\n            },\n\n            {\n\n                name: 'itemhidden',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(ref) {\n                    var target = ref.target;\n\n                    removeClass(target, this.clsActive);\n                    removeClass(target, this.clsActivated);\n                }\n\n            },\n\n            {\n\n                name: 'itemshow itemhide itemshown itemhidden',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(ref) {\n                    var target = ref.target;\n\n                    UIkit.update(null, target);\n                }\n\n            },\n\n            {\n                name: 'dragstart',\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                }\n            }\n\n        ],\n\n        methods: {\n\n            start: function start(e) {\n\n                if (e.button && e.button !== 0 || this.slides.length < 2) {\n                    return;\n                }\n\n                if (this._animation && this._animation.animation !== this.animation) {\n                    return;\n                }\n\n                var percent = 0;\n                if (this.stack.length) {\n\n                    var ref = this._animation;\n                    var dir = ref.dir;\n                    var getPercent = ref.percent;\n                    var cancel = ref.cancel;\n                    var translate$$1 = ref.translate;\n\n                    percent = getPercent() * dir;\n\n                    this.percent = abs(percent) * -dir;\n\n                    this.stack.splice(0, this.stack.length);\n\n                    cancel();\n                    translate$$1(abs(percent));\n\n                    this.index = this.getIndex(this.index - dir);\n                    this.dragging = true;\n\n                }\n\n                this.unbindMove = on(doc, pointerMove, this.move, {capture: true, passive: false});\n                on(win, 'scroll', this.unbindMove);\n                on(doc, pointerUp, this.end, true);\n\n                this.drag = this.pos + this.$el.offsetWidth * percent;\n\n            },\n\n            move: function move(e) {\n                var this$1 = this;\n\n\n                var distance = this.pos - this.drag;\n\n                if (this.prevPos === this.pos || !this.dragging && abs(distance) < this.threshold) {\n                    return;\n                }\n\n                e.cancelable && e.preventDefault();\n\n                this.dragging = true;\n\n                var percent = distance / this.$el.offsetWidth;\n\n                if (this.percent === percent) {\n                    return;\n                }\n\n                var prevIndex = this.getIndex(this.index - trunc(this.percent)),\n                    index = this.getIndex(this.index - trunc(percent)),\n                    current = this.slides[index],\n                    dir = percent < 0 ? 1 : -1,\n                    nextIndex = getIndex(percent < 0 ? 'next' : 'previous', this.slides, index),\n                    next = this.slides[nextIndex];\n\n                this.slides.forEach(function (el, i) { return toggleClass(el, this$1.clsActive, i === index || i === nextIndex); });\n\n                this._animation && this._animation.reset();\n\n                if (index !== prevIndex) {\n                    trigger(this.slides[prevIndex], 'itemhide', [this]);\n                    trigger(current, 'itemshow', [this]);\n                }\n\n                this._animation = new Transitioner(this.animation, this.easing, current, next, dir, noop);\n                this._animation.translate(abs(percent % 1));\n\n                this.percent = percent;\n\n                UIkit.update(null, current);\n                UIkit.update(null, next);\n            },\n\n            end: function end() {\n\n                off(win, 'scroll', this.unbindMove);\n                this.unbindMove();\n                off(doc, pointerUp, this.end, true);\n\n                if (this.dragging) {\n\n                    var percent = this.percent;\n\n                    this.percent = abs(this.percent) % 1;\n                    this.index = this.getIndex(this.index - trunc(percent));\n\n                    if (this.percent < .1 || percent < 0 === this.pos > this.prevPos) {\n                        this.index = this.getIndex(percent > 0 ? 'previous' : 'next');\n                        this.percent = 1 - this.percent;\n                        percent *= -1;\n                    }\n\n                    this._animation && this._animation.reset();\n                    this.show(percent > 0 ? 'previous' : 'next', true);\n\n                    preventClick();\n\n                }\n\n                this.drag\n                    = this.dragging\n                    = this.percent\n                    = null;\n\n            },\n\n            show: function show(index, force) {\n                var this$1 = this;\n                if ( force === void 0 ) force = false;\n\n\n                if (!force && this.drag) {\n                    return;\n                }\n\n                this.stack[force ? 'unshift' : 'push'](index);\n\n                if (!force && this.stack.length > 1) {\n\n                    if (this.stack.length === 2) {\n                        this._animation.forward(250);\n                    }\n\n                    return;\n                }\n\n                var prevIndex = this.index,\n                    nextIndex = this.getIndex(index),\n                    prev = hasClass(this.slides, 'uk-active') && this.slides[prevIndex],\n                    next = this.slides[nextIndex];\n\n                if (prev === next) {\n                    this.stack[force ? 'shift' : 'pop']();\n                    return;\n                }\n\n                prev && trigger(prev, 'beforeitemhide', [this]);\n                trigger(next, 'beforeitemshow', [this]);\n\n                this.index = nextIndex;\n\n                var done = function () {\n\n                    prev && trigger(prev, 'itemhidden', [this$1]);\n                    trigger(next, 'itemshown', [this$1]);\n\n                    fastdom.mutate(function () {\n                        this$1.stack.shift();\n                        if (this$1.stack.length) {\n                            this$1.show(this$1.stack.shift(), true);\n                        } else {\n                            this$1._animation = null;\n                        }\n                    });\n                };\n\n                if (prev || this.initialAnimation) {\n\n                    this._show(\n                        !prev ? this.Animations[this.initialAnimation] : this.animation,\n                        force ? 'cubic-bezier(0.165, 0.840, 0.440, 1.000)' : this.easing,\n                        prev,\n                        next,\n                        getDirection(index, prevIndex),\n                        this.stack.length > 1,\n                        done\n                    );\n\n                }\n\n                prev && trigger(prev, 'itemhide', [this]);\n                trigger(next, 'itemshow', [this]);\n\n                if (!prev && !this.initialAnimation) {\n                    done();\n                }\n\n                prev && fastdom.flush(); // iOS 10+ will honor the video.play only if called from a gesture handler\n\n            },\n\n            _show: function _show(animation, easing, prev, next, dir, forward, done) {\n\n                this._animation = new Transitioner(\n                    animation,\n                    easing,\n                    prev,\n                    next,\n                    dir,\n                    done\n                );\n\n                this._animation.show(\n                    prev === next\n                        ? 300\n                        : forward\n                            ? 150\n                            : this.duration,\n                    this.percent,\n                    forward\n                );\n\n            },\n\n            getIndex: function getIndex$1(index) {\n                if ( index === void 0 ) index = this.index;\n\n                return getIndex(index, this.slides, this.index);\n            },\n\n            startAutoplay: function startAutoplay() {\n                var this$1 = this;\n\n\n                this.stopAutoplay();\n\n                if (this.autoplay) {\n                    this.interval = setInterval(function () {\n                        if (!(this$1.isHovering && this$1.pauseOnHover) && !this$1.stack.length) {\n                            this$1.show('next');\n                        }\n                    }, this.autoplayInterval);\n                }\n\n            },\n\n            stopAutoplay: function stopAutoplay() {\n                if (this.interval) {\n                    clearInterval(this.interval);\n                }\n            }\n\n        }\n\n    };\n\n    function Transitioner(animation, easing, current, next, dir, cb) {\n\n        var percent = animation.percent;\n        var translate$$1 = animation.translate;\n        var show = animation.show;\n        var props = show(dir);\n\n        return {\n\n            animation: animation,\n            dir: dir,\n            current: current,\n            next: next,\n\n            show: function show(duration, percent, linear) {\n                var this$1 = this;\n                if ( percent === void 0 ) percent = 0;\n\n\n                var ease = linear ? 'linear' : easing;\n                duration -= Math.round(duration * percent);\n\n                this.translate(percent);\n\n                triggerUpdate(next, 'itemin', {percent: percent, duration: duration, ease: ease, dir: dir});\n                current && triggerUpdate(current, 'itemout', {percent: 1 - percent, duration: duration, ease: ease, dir: dir});\n\n                return Promise.all([\n                    Transition.start(next, props[1], duration, ease),\n                    current && Transition.start(current, props[0], duration, ease)\n                ]).then(function () {\n                    this$1.reset();\n                    cb();\n                }, noop);\n            },\n\n            stop: function stop() {\n                return Transition.stop([next, current]);\n            },\n\n            cancel: function cancel() {\n                Transition.cancel([next, current]);\n            },\n\n            reset: function reset() {\n                for (var prop in props[0]) {\n                    css([next, current], prop, '');\n                }\n            },\n\n            forward: function forward(duration) {\n\n                var percent = this.percent();\n                Transition.cancel([next, current]);\n                this.show(duration, percent, true);\n\n            },\n\n            translate: function translate$1(percent) {\n\n                var props = translate$$1(percent, dir);\n                css(next, props[1]);\n                current && css(current, props[0]);\n                triggerUpdate(next, 'itemtranslatein', {percent: percent, dir: dir});\n                current && triggerUpdate(current, 'itemtranslateout', {percent: 1 - percent, dir: dir});\n            },\n\n            percent: function percent$1() {\n                return percent(current, next, dir);\n            }\n\n        }\n\n    }\n\n    function triggerUpdate(el, type, data) {\n        trigger(el, createEvent(type, false, false, data));\n    }\n\n    // polyfill for Math.trunc (IE)\n    function trunc(x) {\n        return ~~x;\n    }\n\n    function getDirection(index, prevIndex) {\n        return index === 'next'\n            ? 1\n            : index === 'previous'\n                ? -1\n                : index < prevIndex\n                    ? -1\n                    : 1;\n    }\n\n    function speedUp(x) {\n        return .5 * x + 300; // parabola through (400,500; 600,600; 1800,1200)\n    }\n\n    function hasTextNodesOnly(el) {\n        return !el.children.length && el.childNodes.length;\n    }\n\n}\n\nvar Animations$1 = function (UIkit) {\n\n    var mixin = UIkit.mixin;\n    var ref = UIkit.util;\n    var assign = ref.assign;\n    var css = ref.css;\n\n    return assign({}, mixin.slideshow.defaults.Animations, {\n\n        fade: {\n\n            show: function show() {\n                return [\n                    {opacity: 0},\n                    {opacity: 1}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent},\n                    {opacity: percent}\n                ];\n            }\n\n        },\n\n        scale: {\n\n            show: function show() {\n                return [\n                    {opacity: 0, transform: scale3d(1 - .2)},\n                    {opacity: 1, transform: scale3d(1)}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent, transform: scale3d(1 - .2 * percent)},\n                    {opacity: percent, transform: scale3d(1 - .2 + .2 * percent)}\n                ];\n            }\n\n        }\n\n    });\n\n};\n\nfunction plugin$2(UIkit) {\n\n    if (plugin$2.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$3);\n\n    var mixin = UIkit.mixin;\n    var util = UIkit.util;\n    var $ = util.$;\n    var $$ = util.$$;\n    var addClass = util.addClass;\n    var ajax = util.ajax;\n    var append = util.append;\n    var assign = util.assign;\n    var attr = util.attr;\n    var css = util.css;\n    var doc = util.doc;\n    var docEl = util.docEl;\n    var data = util.data;\n    var getImage = util.getImage;\n    var html = util.html;\n    var index = util.index;\n    var on = util.on;\n    var pointerDown = util.pointerDown;\n    var pointerMove = util.pointerMove;\n    var removeClass = util.removeClass;\n    var Transition = util.Transition;\n    var trigger = util.trigger;\n\n    UIkit.component('lightbox', {\n\n        attrs: true,\n\n        props: {\n            animation: String,\n            toggle: String,\n            autoplay: Boolean,\n            autoplayInterval: Number,\n            videoAutoplay: Boolean\n        },\n\n        defaults: {\n            animation: undefined,\n            toggle: 'a',\n            autoplay: 0,\n            videoAutoplay: false\n        },\n\n        computed: {\n\n            toggles: function toggles(ref, $el) {\n                var this$1 = this;\n                var toggle = ref.toggle;\n\n                var toggles = $$(toggle, $el);\n\n                this._changed = !this._toggles\n                    || toggles.length !== this._toggles.length\n                    || toggles.some(function (el, i) { return el !== this$1._toggles[i]; });\n\n                return this._toggles = toggles;\n            }\n\n        },\n\n        disconnected: function disconnected() {\n\n            if (this.panel) {\n                this.panel.$destroy(true);\n                this.panel = null;\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return ((this.toggle) + \":not(.uk-disabled)\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    e.current.blur();\n                    this.show(index(this.toggles, e.current));\n                }\n\n            }\n\n        ],\n\n        update: function update() {\n\n            if (this.panel && this.animation) {\n                this.panel.$props.animation = this.animation;\n                this.panel.$emit();\n            }\n\n            if (!this.toggles.length || !this._changed || !this.panel) {\n                return;\n            }\n\n            this.panel.$destroy(true);\n            this._init();\n\n        },\n\n        methods: {\n\n            _init: function _init() {\n                return this.panel = this.panel || UIkit.lightboxPanel(assign({}, this.$props, {\n                    items: this.toggles.reduce(function (items, el) {\n                        items.push(['href', 'caption', 'type', 'poster'].reduce(function (obj, attr) {\n                            obj[attr === 'href' ? 'source' : attr] = data(el, attr);\n                            return obj;\n                        }, {}));\n                        return items;\n                    }, [])\n                }));\n            },\n\n            show: function show(index) {\n\n                if (!this.panel) {\n                    this._init();\n                }\n\n                return this.panel.show(index);\n\n            },\n\n            hide: function hide() {\n\n                return this.panel && this.panel.hide();\n\n            }\n\n        }\n\n    });\n\n    UIkit.component('lightbox-panel', {\n\n        mixins: [mixin.container, mixin.togglable, mixin.slideshow],\n\n        functional: true,\n\n        defaults: {\n            preload: 1,\n            videoAutoplay: false,\n            delayControls: 3000,\n            items: [],\n            cls: 'uk-open',\n            clsPage: 'uk-lightbox-page',\n            selList: '.uk-lightbox-items',\n            attrItem: 'uk-lightbox-item',\n            initialAnimation: 'scale',\n            pauseOnHover: false,\n            velocity: 2,\n            Animations: Animations$1(UIkit),\n            template: \"<div class=\\\"uk-lightbox uk-overflow-hidden\\\"> <ul class=\\\"uk-lightbox-items\\\"></ul> <div class=\\\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\\\"> <button class=\\\"uk-lightbox-toolbar-icon uk-close-large\\\" type=\\\"button\\\" uk-close uk-toggle=\\\"!.uk-lightbox\\\"></button> </div> <a class=\\\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\\\" href=\\\"#\\\" uk-slidenav-previous uk-lightbox-item=\\\"previous\\\"></a> <a class=\\\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\\\" href=\\\"#\\\" uk-slidenav-next uk-lightbox-item=\\\"next\\\"></a> <div class=\\\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\\\"></div> </div>\"\n        },\n\n        created: function created() {\n            var this$1 = this;\n\n\n            this.$mount(append(this.container, this.template));\n\n            this.caption = $('.uk-lightbox-caption', this.$el);\n\n            this.items.forEach(function (el, i) { return append(this$1.list, \"<li></li>\"); });\n\n        },\n\n        events: [\n\n            {\n\n                name: (pointerMove + \" \" + pointerDown + \" keydown\"),\n\n                handler: 'showControls'\n\n            },\n\n            {\n\n                name: 'click',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.hide();\n                }\n\n            },\n\n            {\n\n                name: 'show',\n\n                self: true,\n\n                handler: function handler() {\n                    addClass(docEl, this.clsPage);\n                }\n            },\n\n            {\n\n                name: 'shown',\n\n                self: true,\n\n                handler: 'showControls'\n            },\n\n            {\n\n                name: 'hide',\n\n                self: true,\n\n                handler: 'hideControls'\n            },\n\n            {\n\n                name: 'hidden',\n\n                self: true,\n\n                handler: function handler() {\n                    removeClass(docEl, this.clsPage);\n                }\n            },\n\n            {\n\n                name: 'keyup',\n\n                el: function el() {\n                    return doc;\n                },\n\n                handler: function handler(e) {\n\n                    if (!this.isToggled(this.$el)) {\n                        return;\n                    }\n\n                    switch (e.keyCode) {\n                        case 27:\n                            this.hide();\n                            break;\n                        case 37:\n                            this.show('previous');\n                            break;\n                        case 39:\n                            this.show('next');\n                            break;\n                    }\n                }\n            },\n\n            {\n\n                name: 'toggle',\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.toggle();\n                }\n\n            },\n\n            {\n\n                name: 'beforeitemshow',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler() {\n                    if (!this.isToggled()) {\n                        this.toggleNow(this.$el, true);\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'itemshow',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return ((this.selList) + \" > *\");\n                },\n\n                handler: function handler(ref) {\n                    var this$1 = this;\n                    var target = ref.target;\n\n\n                    var i = index(target),\n                        caption = this.getItem(i).caption;\n                        css(this.caption, 'display', caption ? '' : 'none');\n                        html(this.caption, caption);\n\n                    for (var j = 0; j <= this.preload; j++) {\n                        this$1.loadItem(this$1.getIndex(i + j));\n                        this$1.loadItem(this$1.getIndex(i - j));\n                    }\n\n                }\n\n            },\n\n            {\n\n                name: 'itemload',\n\n                handler: function handler(_, item) {\n                    var this$1 = this;\n\n\n                    var source = item.source;\n                    var type = item.type;\n                    var matches;\n\n                    this.setItem(item, '<span uk-spinner></span>');\n\n                    if (!source) {\n                        return;\n                    }\n\n                    // Image\n                    if (type === 'image' || source.match(/\\.(jp(e)?g|png|gif|svg)$/i)) {\n\n                        getImage(source).then(\n                            function (img) { return this$1.setItem(item, (\"<img width=\\\"\" + (img.width) + \"\\\" height=\\\"\" + (img.height) + \"\\\" src=\\\"\" + source + \"\\\">\")); },\n                            function () { return this$1.setError(item); }\n                        );\n\n                    // Video\n                    } else if (type === 'video' || source.match(/\\.(mp4|webm|ogv)$/i)) {\n\n                        var video = $((\"<video controls playsinline\" + (item.poster ? (\" poster=\\\"\" + (item.poster) + \"\\\"\") : '') + \" uk-video=\\\"autoplay: \" + (this.videoAutoplay) + \"\\\"></video>\"));\n                        attr(video, 'src', source);\n\n                        on(video, 'error', function () { return this$1.setError(item); });\n                        on(video, 'loadedmetadata', function () {\n                            attr(video, {width: video.videoWidth, height: video.videoHeight});\n                            this$1.setItem(item, video);\n                        });\n\n                    // Iframe\n                    } else if (type === 'iframe') {\n\n                        this.setItem(item, (\"<iframe class=\\\"uk-lightbox-iframe\\\" src=\\\"\" + source + \"\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\"));\n\n                    // Youtube\n                    } else if (matches = source.match(/\\/\\/.*?youtube\\.[a-z]+\\/watch\\?v=([^&\\s]+)/) || source.match(/youtu\\.be\\/(.*)/)) {\n\n                        var id = matches[1],\n                            setIframe = function (width, height) {\n                                if ( width === void 0 ) width = 640;\n                                if ( height === void 0 ) height = 450;\n\n                                return this$1.setItem(item, getIframe((\"//www.youtube.com/embed/\" + id), width, height, this$1.videoAutoplay));\n                        };\n\n                        getImage((\"//img.youtube.com/vi/\" + id + \"/maxresdefault.jpg\")).then(\n                            function (ref) {\n                                var width = ref.width;\n                                var height = ref.height;\n\n                                //youtube default 404 thumb, fall back to lowres\n                                if (width === 120 && height === 90) {\n                                    getImage((\"//img.youtube.com/vi/\" + id + \"/0.jpg\")).then(\n                                        function (ref) {\n                                            var width = ref.width;\n                                            var height = ref.height;\n\n                                            return setIframe(width, height);\n                                    },\n                                        setIframe\n                                    );\n                                } else {\n                                    setIframe(width, height);\n                                }\n                            },\n                            setIframe\n                        );\n\n                    // Vimeo\n                    } else if (matches = source.match(/(\\/\\/.*?)vimeo\\.[a-z]+\\/([0-9]+).*?/)) {\n\n                        ajax((\"//vimeo.com/api/oembed.json?maxwidth=1920&url=\" + (encodeURI(source))), {responseType: 'json'})\n                            .then(function (ref) {\n                                    var ref_response = ref.response;\n                                    var height = ref_response.height;\n                                    var width = ref_response.width;\n\n                                    return this$1.setItem(item, getIframe((\"//player.vimeo.com/video/\" + (matches[2])), width, height, this$1.videoAutoplay));\n                        }\n                            );\n\n                    }\n\n                }\n\n            }\n\n        ],\n\n        methods: {\n\n            toggle: function toggle() {\n                return this.isToggled() ? this.hide() : this.show();\n            },\n\n            hide: function hide() {\n\n                if (this.isToggled()) {\n                    this.toggleNow(this.$el, false);\n                }\n\n                removeClass(this.slides, this.clsActive);\n                Transition.stop(this.slides);\n\n                delete this.index;\n                delete this.percent;\n                delete this._animation;\n\n            },\n\n            loadItem: function loadItem(index) {\n                if ( index === void 0 ) index = this.index;\n\n\n                var item = this.getItem(index);\n\n                if (item.content) {\n                    return;\n                }\n\n                trigger(this.$el, 'itemload', [item]);\n            },\n\n            getItem: function getItem(index) {\n                if ( index === void 0 ) index = this.index;\n\n                return this.items[index] || {};\n            },\n\n            setItem: function setItem(item, content) {\n                assign(item, {content: content});\n                var el = html(this.slides[this.items.indexOf(item)], content);\n                trigger(this.$el, 'itemloaded', [this, el]);\n                UIkit.update(null, el);\n            },\n\n            setError: function setError(item) {\n                this.setItem(item, '<span uk-icon=\"icon: bolt; ratio: 2\"></span>');\n            },\n\n            showControls: function showControls() {\n\n                clearTimeout(this.controlsTimer);\n                this.controlsTimer = setTimeout(this.hideControls, this.delayControls);\n\n                attr($$((\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\"), this.$el), 'hidden', this.items.length < 2 ? '' : null);\n\n                addClass(this.$el, 'uk-active uk-transition-active');\n\n            },\n\n            hideControls: function hideControls() {\n                removeClass(this.$el, 'uk-active uk-transition-active');\n            }\n\n        }\n\n    });\n\n    function getIframe(src, width, height, autoplay) {\n        return (\"<iframe src=\\\"\" + src + \"\\\" width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\" style=\\\"max-width: 100%; box-sizing: border-box;\\\" frameborder=\\\"0\\\" allowfullscreen uk-video=\\\"autoplay: \" + autoplay + \"\\\" uk-responsive></iframe>\");\n    }\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$2);\n}\n\nfunction plugin$4(UIkit) {\n\n    if (plugin$4.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var append = ref.append;\n    var closest = ref.closest;\n    var css = ref.css;\n    var each = ref.each;\n    var pointerEnter = ref.pointerEnter;\n    var pointerLeave = ref.pointerLeave;\n    var remove = ref.remove;\n    var toFloat = ref.toFloat;\n    var Transition = ref.Transition;\n    var trigger = ref.trigger;\n    var containers = {};\n\n    UIkit.component('notification', {\n\n        functional: true,\n\n        args: ['message', 'status'],\n\n        defaults: {\n            message: '',\n            status: '',\n            timeout: 5000,\n            group: null,\n            pos: 'top-center',\n            clsClose: 'uk-notification-close',\n            clsMsg: 'uk-notification-message'\n        },\n\n        created: function created() {\n\n            if (!containers[this.pos]) {\n                containers[this.pos] = append(UIkit.container, (\"<div class=\\\"uk-notification uk-notification-\" + (this.pos) + \"\\\"></div>\"));\n            }\n\n            var container = css(containers[this.pos], 'display', 'block');\n\n            this.$mount(append(container,\n                (\"<div class=\\\"\" + (this.clsMsg) + (this.status ? (\" \" + (this.clsMsg) + \"-\" + (this.status)) : '') + \"\\\"> <a href=\\\"#\\\" class=\\\"\" + (this.clsClose) + \"\\\" data-uk-close></a> <div>\" + (this.message) + \"</div> </div>\")\n            ));\n\n        },\n\n        ready: function ready() {\n            var this$1 = this;\n\n\n            var marginBottom = toFloat(css(this.$el, 'marginBottom'));\n            Transition.start(\n                css(this.$el, {opacity: 0, marginTop: -1 * this.$el.offsetHeight, marginBottom: 0}),\n                {opacity: 1, marginTop: 0, marginBottom: marginBottom}\n            ).then(function () {\n                if (this$1.timeout) {\n                    this$1.timer = setTimeout(this$1.close, this$1.timeout);\n                }\n            });\n\n        },\n\n        events: ( obj = {\n\n            click: function click(e) {\n                if (closest(e.target, 'a[href=\"#\"]')) {\n                    e.preventDefault();\n                }\n                this.close();\n            }\n\n        }, obj[pointerEnter] = function () {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n            }, obj[pointerLeave] = function () {\n                if (this.timeout) {\n                    this.timer = setTimeout(this.close, this.timeout);\n                }\n            }, obj ),\n\n        methods: {\n\n            close: function close(immediate) {\n                var this$1 = this;\n\n\n                var removeFn = function () {\n\n                    trigger(this$1.$el, 'close', [this$1]);\n                    remove(this$1.$el);\n\n                    if (!containers[this$1.pos].children.length) {\n                        css(containers[this$1.pos], 'display', 'none');\n                    }\n\n                };\n\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n\n                if (immediate) {\n                    removeFn();\n                } else {\n                    Transition.start(this.$el, {\n                        opacity: 0,\n                        marginTop: -1 * this.$el.offsetHeight,\n                        marginBottom: 0\n                    }).then(removeFn);\n                }\n            }\n\n        }\n\n    });\n    var obj;\n\n    UIkit.notification.closeAll = function (group, immediate) {\n        each(UIkit.instances, function (component) {\n            if (component.$options.name === 'notification' && (!group || group === component.group)) {\n                component.close(immediate);\n            }\n        });\n    };\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$4);\n}\n\nfunction plugin$5(UIkit) {\n\n    if (plugin$5.installed) {\n        return;\n    }\n\n    var mixin = UIkit.mixin;\n    var util = UIkit.util;\n    var clamp = util.clamp;\n    var css = util.css;\n    var Dimensions = util.Dimensions;\n    var each = util.each;\n    var getImage = util.getImage;\n    var includes = util.includes;\n    var isNumber = util.isNumber;\n    var isUndefined = util.isUndefined;\n    var scrolledOver = util.scrolledOver;\n    var toFloat = util.toFloat;\n    var query = util.query;\n    var win = util.win;\n\n    var props = ['x', 'y', 'bgx', 'bgy', 'rotate', 'scale', 'color', 'backgroundColor', 'borderColor', 'opacity', 'blur', 'hue', 'grayscale', 'invert', 'saturate', 'sepia', 'fopacity'];\n\n    mixin.parallax = {\n\n        props: props.reduce(function (props, prop) {\n            props[prop] = 'list';\n            return props;\n        }, {\n            media: 'media'\n        }),\n\n        defaults: props.reduce(function (defaults, prop) {\n            defaults[prop] = undefined;\n            return defaults;\n        }, {\n            media: false\n        }),\n\n        computed: {\n\n            props: function props$1(properties, $el) {\n                var this$1 = this;\n\n\n                return props.reduce(function (props, prop) {\n\n                    if (isUndefined(properties[prop])) {\n                        return props;\n                    }\n\n                    var isColor = prop.match(/color/i),\n                        isCssProp = isColor || prop === 'opacity',\n                        steps = properties[prop].slice(0),\n                        pos, bgPos, diff;\n\n                    if (isCssProp) {\n                        css($el, prop, '');\n                    }\n\n                    if (steps.length < 2) {\n                        steps.unshift((prop === 'scale'\n                            ? 1\n                            : isCssProp\n                                ? css($el, prop)\n                                : 0) || 0);\n                    }\n\n                    var unit = includes(steps.join(''), '%') ? '%' : 'px';\n\n                    if (isColor) {\n\n                        var color = $el.style.color;\n                        steps = steps.map(function (step) { return parseColor($el, step); });\n                        $el.style.color = color;\n\n                    } else {\n\n                        steps = steps.map(toFloat);\n\n                    }\n\n                    if (prop.match(/^bg/)) {\n\n                        css($el, (\"background-position-\" + (prop[2])), '');\n                        bgPos = css($el, 'backgroundPosition').split(' ')[prop[2] === 'x' ? 0 : 1]; // IE 11 can't read background-position-[x|y]\n\n                        if (this$1.covers) {\n\n                            var min = Math.min.apply(Math, steps),\n                                max = Math.max.apply(Math, steps),\n                                down = steps.indexOf(min) < steps.indexOf(max);\n\n                            diff = max - min;\n\n                            steps = steps.map(function (step) { return step - (down ? min : max); });\n                            pos = (down ? -diff : 0) + \"px\";\n\n                        } else {\n\n                            pos = bgPos;\n\n                        }\n                    }\n\n                    props[prop] = {steps: steps, unit: unit, pos: pos, bgPos: bgPos, diff: diff};\n\n                    return props;\n\n                }, {});\n\n            },\n\n            bgProps: function bgProps() {\n                var this$1 = this;\n\n                return ['bgx', 'bgy'].filter(function (bg) { return bg in this$1.props; });\n            },\n\n            covers: function covers(_, $el) {\n                return css($el.style.backgroundSize !== '' ? css($el, 'backgroundSize', '') : $el, 'backgroundSize') === 'cover';\n            }\n\n        },\n\n        disconnected: function disconnected() {\n            delete this._image;\n        },\n\n        update: [\n\n            {\n\n                read: function read() {\n                    var this$1 = this;\n\n\n                    delete this._computeds.props;\n\n                    this._active = !this.media || win.matchMedia(this.media).matches;\n\n                    if (this._image) {\n                        this._image.dimEl = {\n                            width: this.$el.offsetWidth,\n                            height: this.$el.offsetHeight\n                        };\n                    }\n\n                    if (!isUndefined(this._image) || !this.covers || !this.bgProps.length) {\n                        return;\n                    }\n\n                    var src = css(this.$el, 'backgroundImage').replace(/^none|url\\([\"']?(.+?)[\"']?\\)$/, '$1');\n\n                    if (!src) {\n                        return;\n                    }\n\n                    this._image = false;\n\n                    getImage(src).then(function (img) {\n                        this$1._image = {\n                            width: img.naturalWidth,\n                            height: img.naturalHeight\n                        };\n\n                        this$1.$emit();\n                    });\n\n                },\n\n                write: function write() {\n                    var this$1 = this;\n\n\n                    if (!this._image) {\n                        return;\n                    }\n\n                    if (!this._active) {\n                        css(this.$el, {backgroundSize: '', backgroundRepeat: ''});\n                        return;\n                    }\n\n                    var image = this._image,\n                        dimEl = image.dimEl,\n                        dim = Dimensions.cover(image, dimEl);\n\n                    this.bgProps.forEach(function (prop) {\n\n                        var ref = this$1.props[prop];\n                        var diff = ref.diff;\n                        var bgPos = ref.bgPos;\n                        var steps = ref.steps;\n                        var attr = prop === 'bgy' ? 'height' : 'width',\n                            span = dim[attr] - dimEl[attr];\n\n                        if (!bgPos.match(/%$|0px/)) {\n                            return;\n                        }\n\n                        if (span < diff) {\n                            dimEl[attr] = dim[attr] + diff - span;\n                        } else if (span > diff) {\n\n                            bgPos = parseFloat(bgPos);\n\n                            if (bgPos) {\n                                this$1.props[prop].steps = steps.map(function (step) { return step - (span - diff) / (100 / bgPos); });\n                            }\n                        }\n\n                        dim = Dimensions.cover(image, dimEl);\n                    });\n\n                    css(this.$el, {\n                        backgroundSize: ((dim.width) + \"px \" + (dim.height) + \"px\"),\n                        backgroundRepeat: 'no-repeat'\n                    });\n\n                },\n\n                events: ['load', 'resize']\n\n            }\n\n        ],\n\n        methods: {\n\n            reset: function reset() {\n                var this$1 = this;\n\n                each(this.getCss(0), function (_, prop) { return css(this$1.$el, prop, ''); });\n            },\n\n            getCss: function getCss(percent) {\n\n                var translated = false,\n                    props = this.props;\n\n                return Object.keys(props).reduce(function (css, prop) {\n\n                    var ref = props[prop];\n                    var steps = ref.steps;\n                    var unit = ref.unit;\n                    var pos = ref.pos;\n                    var value = getValue(steps, percent);\n\n                    switch (prop) {\n\n                        // transforms\n                        case 'x':\n                        case 'y':\n\n                            if (translated) {\n                                break;\n                            }\n\n                            var ref$1 = ['x', 'y'].map(function (dir) { return prop === dir\n                                ? value + unit\n                                : props[dir]\n                                    ? getValue(props[dir].steps, percent) + props[dir].unit\n                                    : 0; }\n                            );\n                    var x = ref$1[0];\n                    var y = ref$1[1];\n\n                            translated = css.transform += \" translate3d(\" + x + \", \" + y + \", 0)\";\n                            break;\n                        case 'rotate':\n                            css.transform += \" rotate(\" + value + \"deg)\";\n                            break;\n                        case 'scale':\n                            css.transform += \" scale(\" + value + \")\";\n                            break;\n\n                        // bg image\n                        case 'bgy':\n                        case 'bgx':\n                            css[(\"background-position-\" + (prop[2]))] = \"calc(\" + pos + \" + \" + (value + unit) + \")\";\n                            break;\n\n                        // color\n                        case 'color':\n                        case 'backgroundColor':\n                        case 'borderColor':\n\n                            var ref$2 = getStep(steps, percent);\n                    var start = ref$2[0];\n                    var end = ref$2[1];\n                    var p = ref$2[2];\n\n                            css[prop] = \"rgba(\" + (start.map(function (value, i) {\n                                    value = value + p * (end[i] - value);\n                                    return i === 3 ? toFloat(value) : parseInt(value, 10);\n                                }).join(',')) + \")\";\n                            break;\n\n                        // CSS Filter\n                        case 'blur':\n                            css.filter += \" blur(\" + value + \"px)\";\n                            break;\n                        case 'hue':\n                            css.filter += \" hue-rotate(\" + value + \"deg)\";\n                            break;\n                        case 'fopacity':\n                            css.filter += \" opacity(\" + value + \"%)\";\n                            break;\n                        case 'grayscale':\n                        case 'invert':\n                        case 'saturate':\n                        case 'sepia':\n                            css.filter += \" \" + prop + \"(\" + value + \"%)\";\n                            break;\n\n                        default:\n                            css[prop] = value;\n                    }\n\n                    return css;\n\n                }, {transform: '', filter: ''});\n\n            }\n\n        }\n\n    };\n\n    UIkit.component('parallax', {\n\n        mixins: [mixin.parallax],\n\n        props: {\n            target: String,\n            viewport: Number,\n            easing: Number,\n        },\n\n        defaults: {\n            target: false,\n            viewport: 1,\n            easing: 1,\n        },\n\n        computed: {\n\n            target: function target(ref, $el) {\n                var target = ref.target;\n\n                return target && query(target, $el) || $el;\n            }\n\n        },\n\n        disconnected: function disconnected() {\n            delete this._prev;\n        },\n\n        update: [\n\n            {\n\n                read: function read() {\n\n                    this._percent = ease(scrolledOver(this.target) / (this.viewport || 1), this.easing);\n\n                },\n\n                write: function write(ref) {\n                    var type = ref.type;\n\n\n                    if (type !== 'scroll') {\n                        delete this._prev;\n                    }\n\n                    if (!this._active) {\n                        this.reset();\n                        return;\n                    }\n\n                    if (this._prev !== this._percent) {\n                        css(this.$el, this.getCss(this._percent));\n                        this._prev = this._percent;\n                    }\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n            }\n\n        ]\n\n    });\n\n    function ease(percent, easing) {\n        return clamp(percent * (1 - (easing - easing * percent)))\n    }\n\n    function parseColor(el, color) {\n        return css(css(el, 'color', color), 'color').split(/[(),]/g).slice(1, -1).concat(1).slice(0, 4).map(function (n) { return toFloat(n); });\n    }\n\n    function getStep(steps, percent) {\n        var count = steps.length - 1,\n            index = Math.min(Math.floor(count * percent), count - 1),\n            step = steps.slice(index, index + 2);\n\n        step.push(percent === 1 ? 1 : percent % (1 / count) * count);\n\n        return step;\n    }\n\n    function getValue(steps, percent) {\n        var ref = getStep(steps, percent);\n        var start = ref[0];\n        var end = ref[1];\n        var p = ref[2];\n        return (isNumber(start)\n            ? start + Math.abs(start - end) * p * (start < end ? 1 : -1)\n            : +end\n        ).toFixed(2);\n    }\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$5);\n}\n\nvar Animations$2 = function (UIkit) {\n\n    var mixin = UIkit.mixin;\n    var ref = UIkit.util;\n    var assign = ref.assign;\n    var css = ref.css;\n\n    var Animations$$1 = assign({}, mixin.slideshow.defaults.Animations, {\n\n        fade: {\n\n            show: function show() {\n                return [\n                    {opacity: 0, zIndex: 0},\n                    {zIndex: -1}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent, zIndex: 0},\n                    {zIndex: -1}\n                ];\n            }\n\n        },\n\n        scale: {\n\n            show: function show() {\n                return [\n                    {opacity: 0, transform: scale3d(1 + .5), zIndex: 0},\n                    {zIndex: -1}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent, transform: scale3d(1 + .5 * percent), zIndex: 0},\n                    {zIndex: -1}\n                ];\n            }\n\n        },\n\n        pull: {\n\n            show: function show(dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(30), zIndex: -1},\n                        {transform: translate(), zIndex: 0} ]\n                    : [\n                        {transform: translate(-100), zIndex: 0},\n                        {transform: translate(), zIndex: -1}\n                    ];\n            },\n\n            percent: function percent(current, next, dir) {\n                return dir < 0\n                    ? 1 - Animations$$1.translated(next)\n                    : Animations$$1.translated(current);\n            },\n\n            translate: function translate$1(percent, dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(30 * percent), zIndex: -1},\n                        {transform: translate(-100 * (1 - percent)), zIndex: 0} ]\n                    : [\n                        {transform: translate(-percent * 100), zIndex: 0},\n                        {transform: translate(30 * (1 - percent)), zIndex: -1}\n                    ];\n            }\n\n        },\n\n        push: {\n\n            show: function show(dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(100), zIndex: 0},\n                        {transform: translate(), zIndex: -1} ]\n                    : [\n                        {transform: translate(-30), zIndex: -1},\n                        {transform: translate(), zIndex: 0}\n                    ];\n            },\n\n            percent: function percent(current, next, dir) {\n                return dir > 0\n                    ? 1 - Animations$$1.translated(next)\n                    : Animations$$1.translated(current);\n            },\n\n            translate: function translate$2(percent, dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(percent * 100), zIndex: 0},\n                        {transform: translate(-30 * (1 - percent)), zIndex: -1} ]\n                    : [\n                        {transform: translate(-30 * percent), zIndex: -1},\n                        {transform: translate(100 * (1 - percent)), zIndex: 0}\n                    ];\n            }\n\n        }\n\n    });\n\n    return Animations$$1;\n\n};\n\nfunction plugin$6(UIkit) {\n\n    if (plugin$6.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$5);\n    UIkit.use(plugin$3);\n\n    var mixin = UIkit.mixin;\n    var ref = UIkit.util;\n    var closest = ref.closest;\n    var css = ref.css;\n    var fastdom = ref.fastdom;\n    var endsWith = ref.endsWith;\n    var height = ref.height;\n    var noop = ref.noop;\n    var Transition = ref.Transition;\n\n    UIkit.component('slideshow', {\n\n        mixins: [mixin.class, mixin.slideshow],\n\n        props: {\n            ratio: String,\n            minHeight: Boolean,\n            maxHeight: Boolean,\n        },\n\n        defaults: {\n            ratio: '16:9',\n            minHeight: false,\n            maxHeight: false,\n            selList: '.uk-slideshow-items',\n            attrItem: 'uk-slideshow-item',\n            Animations: Animations$2(UIkit)\n        },\n\n        ready: function ready() {\n            var this$1 = this;\n\n            fastdom.mutate(function () { return this$1.show(this$1.index); });\n        },\n\n        update: {\n\n            read: function read() {\n\n                var ref = this.ratio.split(':').map(Number);\n                var width = ref[0];\n                var height = ref[1];\n                this.height = height * this.$el.offsetWidth / width;\n\n                if (this.minHeight) {\n                    this.height = Math.max(this.minHeight, this.height);\n                }\n\n                if (this.maxHeight) {\n                    this.height = Math.min(this.maxHeight, this.height);\n                }\n\n            },\n\n            write: function write() {\n                height(this.list, Math.floor(this.height));\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n    UIkit.component('slideshow-parallax', {\n\n        mixins: [mixin.parallax],\n\n        computed: {\n\n            item: function item() {\n                var slideshow = UIkit.getComponent(closest(this.$el, '.uk-slideshow'), 'slideshow');\n                return slideshow && closest(this.$el, ((slideshow.selList) + \" > *\"));\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'itemshown',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler() {\n                    css(this.$el, this.getCss(.5));\n                }\n\n            },\n\n            {\n                name: 'itemin itemout',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler(ref) {\n                    var type = ref.type;\n                    var ref_detail = ref.detail;\n                    var percent = ref_detail.percent;\n                    var duration = ref_detail.duration;\n                    var ease = ref_detail.ease;\n                    var dir = ref_detail.dir;\n\n\n                    Transition.cancel(this.$el);\n                    css(this.$el, this.getCss(getCurrent(type, dir, percent)));\n\n                    Transition.start(this.$el, this.getCss(isIn(type)\n                        ? .5\n                        : dir > 0\n                            ? 1\n                            : 0\n                    ), duration, ease).catch(noop);\n\n                }\n            },\n\n            {\n                name: 'transitioncanceled transitionend',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler() {\n                    Transition.cancel(this.$el);\n                }\n\n            },\n\n            {\n                name: 'itemtranslatein itemtranslateout',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler(ref) {\n                    var type = ref.type;\n                    var ref_detail = ref.detail;\n                    var percent = ref_detail.percent;\n                    var dir = ref_detail.dir;\n\n                    Transition.cancel(this.$el);\n                    css(this.$el, this.getCss(getCurrent(type, dir, percent)));\n                }\n            }\n\n        ]\n\n    });\n\n    function isIn(type) {\n        return endsWith(type, 'in');\n    }\n\n    function getCurrent(type, dir, percent) {\n\n        percent /= 2;\n\n        return !isIn(type)\n            ? dir < 0\n                ? percent\n                : 1 - percent\n            : dir < 0\n                ? 1 - percent\n                : percent;\n    }\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$6);\n}\n\nfunction plugin$7(UIkit) {\n\n    if (plugin$7.installed) {\n        return;\n    }\n\n    var mixin = UIkit.mixin;\n    var util = UIkit.util;\n    var addClass = util.addClass;\n    var after = util.after;\n    var assign = util.assign;\n    var append = util.append;\n    var attr = util.attr;\n    var before = util.before;\n    var closest = util.closest;\n    var css = util.css;\n    var doc = util.doc;\n    var docEl = util.docEl;\n    var height = util.height;\n    var fastdom = util.fastdom;\n    var getPos = util.getPos;\n    var includes = util.includes;\n    var index = util.index;\n    var isInput = util.isInput;\n    var noop = util.noop;\n    var offset = util.offset;\n    var off = util.off;\n    var on = util.on;\n    var pointerDown = util.pointerDown;\n    var pointerMove = util.pointerMove;\n    var pointerUp = util.pointerUp;\n    var position = util.position;\n    var preventClick = util.preventClick;\n    var Promise = util.Promise;\n    var remove = util.remove;\n    var removeClass = util.removeClass;\n    var toggleClass = util.toggleClass;\n    var toNodes = util.toNodes;\n    var Transition = util.Transition;\n    var trigger = util.trigger;\n    var win = util.win;\n    var within = util.within;\n\n    UIkit.component('sortable', {\n\n        mixins: [mixin.class],\n\n        props: {\n            group: String,\n            animation: Number,\n            threshold: Number,\n            clsItem: String,\n            clsPlaceholder: String,\n            clsDrag: String,\n            clsDragState: String,\n            clsBase: String,\n            clsNoDrag: String,\n            clsEmpty: String,\n            clsCustom: String,\n            handle: String\n        },\n\n        defaults: {\n            group: false,\n            animation: 150,\n            threshold: 5,\n            clsItem: 'uk-sortable-item',\n            clsPlaceholder: 'uk-sortable-placeholder',\n            clsDrag: 'uk-sortable-drag',\n            clsDragState: 'uk-drag',\n            clsBase: 'uk-sortable',\n            clsNoDrag: 'uk-sortable-nodrag',\n            clsEmpty: 'uk-sortable-empty',\n            clsCustom: '',\n            handle: false\n        },\n\n        init: function init() {\n            var this$1 = this;\n\n            ['init', 'start', 'move', 'end'].forEach(function (key) {\n                var fn = this$1[key];\n                this$1[key] = function (e) {\n                    this$1.scrollY = win.scrollY;\n                    var ref = getPos(e);\n                    var x = ref.x;\n                    var y = ref.y;\n                    this$1.pos = {x: x, y: y};\n\n                    fn(e);\n                };\n            });\n        },\n\n        events: ( obj = {}, obj[pointerDown] = 'init', obj ),\n\n        update: {\n\n            write: function write() {\n\n                if (this.clsEmpty) {\n                    toggleClass(this.$el, this.clsEmpty, !this.$el.children.length);\n                }\n\n                if (!this.drag) {\n                    return;\n                }\n\n                offset(this.drag, {top: this.pos.y + this.origin.top, left: this.pos.x + this.origin.left});\n\n                var top = offset(this.drag).top,\n                    bottom = top + this.drag.offsetHeight,\n                    scroll;\n\n                if (top > 0 && top < this.scrollY) {\n                    scroll = this.scrollY - 5;\n                } else if (bottom < height(doc) && bottom > height(win) + this.scrollY) {\n                    scroll = this.scrollY + 5;\n                }\n\n                scroll && setTimeout(function () { return win.scrollTo(win.scrollX, scroll); }, 5);\n            }\n\n        },\n\n        methods: {\n\n            init: function init(e) {\n\n                var target = e.target;\n                var button = e.button;\n                var defaultPrevented = e.defaultPrevented;\n                var placeholder = toNodes(this.$el.children).filter(function (el) { return within(target, el); })[0];\n\n                if (!placeholder\n                    || isInput(e.target)\n                    || this.handle && !within(target, this.handle)\n                    || button !== 0\n                    || within(target, (\".\" + (this.clsNoDrag)))\n                    || defaultPrevented\n                ) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                this.touched = [this];\n                this.placeholder = placeholder;\n                this.origin = assign({target: target, index: index(placeholder)}, this.pos);\n\n                on(docEl, pointerMove, this.move);\n                on(docEl, pointerUp, this.end);\n                on(win, 'scroll', this.scroll);\n\n                if (!this.threshold) {\n                    this.start(e);\n                }\n\n            },\n\n            start: function start(e) {\n\n                this.drag = append(UIkit.container, this.placeholder.outerHTML.replace(/^<li/i, '<div').replace(/li>$/i, 'div>'));\n\n                css(this.drag, assign({\n                    boxSizing: 'border-box',\n                    width: this.placeholder.offsetWidth,\n                    height: this.placeholder.offsetHeight\n                }, css(this.placeholder, ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'])));\n                attr(this.drag, 'uk-no-boot', '');\n                addClass(this.drag, ((this.clsDrag) + \" \" + (this.clsCustom)));\n\n                height(this.drag.firstElementChild, height(this.placeholder.firstElementChild));\n\n                var ref = offset(this.placeholder);\n                var left = ref.left;\n                var top = ref.top;\n                assign(this.origin, {left: left - this.pos.x, top: top - this.pos.y});\n\n                addClass(this.placeholder, this.clsPlaceholder);\n                addClass(this.$el.children, this.clsItem);\n                addClass(docEl, this.clsDragState);\n\n                trigger(this.$el, 'start', [this, this.placeholder, this.drag]);\n\n                this.move(e);\n            },\n\n            move: function move(e) {\n\n                if (!this.drag) {\n\n                    if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) {\n                        this.start(e);\n                    }\n\n                    return;\n                }\n\n                this.$emit();\n\n                var target = e.type === 'mousemove' ? e.target : doc.elementFromPoint(this.pos.x - doc.body.scrollLeft, this.pos.y - doc.body.scrollTop),\n                    sortable = getSortable(target),\n                    previous = getSortable(this.placeholder),\n                    move = sortable !== previous;\n\n                if (!sortable || within(target, this.placeholder) || move && (!sortable.group || sortable.group !== previous.group)) {\n                    return;\n                }\n\n                target = sortable.$el === target.parentNode && target || toNodes(sortable.$el.children).filter(function (element) { return within(target, element); })[0];\n\n                if (move) {\n                    previous.remove(this.placeholder);\n                } else if (!target) {\n                    return;\n                }\n\n                sortable.insert(this.placeholder, target);\n\n                if (!includes(this.touched, sortable)) {\n                    this.touched.push(sortable);\n                }\n\n            },\n\n            scroll: function scroll() {\n                var scroll = win.scrollY;\n                if (scroll !== this.scrollY) {\n                    this.pos.y += scroll - this.scrollY;\n                    this.scrollY = scroll;\n                    this.$emit();\n                }\n            },\n\n            end: function end(e) {\n\n                off(docEl, pointerMove, this.move);\n                off(docEl, pointerUp, this.end);\n                off(win, 'scroll', this.scroll);\n\n                if (!this.drag) {\n\n                    if (e.type !== 'mouseup' && within(e.target, 'a[href]')) {\n                        location.href = closest(e.target, 'a[href]').href;\n                    }\n\n                    return;\n                }\n\n                preventClick();\n\n                var sortable = getSortable(this.placeholder);\n\n                if (this === sortable) {\n                    if (this.origin.index !== index(this.placeholder)) {\n                        trigger(this.$el, 'moved', [this, this.placeholder]);\n                    }\n                } else {\n                    trigger(sortable.$el, 'added', [sortable, this.placeholder]);\n                    trigger(this.$el, 'removed', [this, this.placeholder]);\n                }\n\n                trigger(this.$el, 'stop', [this]);\n\n                remove(this.drag);\n                this.drag = null;\n\n                var classes = this.touched.map(function (sortable) { return ((sortable.clsPlaceholder) + \" \" + (sortable.clsItem)); }).join(' ');\n                this.touched.forEach(function (sortable) { return removeClass(sortable.$el.children, classes); });\n\n                removeClass(docEl, this.clsDragState);\n\n            },\n\n            insert: function insert(element, target) {\n                var this$1 = this;\n\n\n                addClass(this.$el.children, this.clsItem);\n\n                var insert = function () {\n\n                    if (target) {\n\n                        if (!within(element, this$1.$el) || isPredecessor(element, target)) {\n                            before(target, element);\n                        } else {\n                            after(target, element);\n                        }\n\n                    } else {\n                        append(this$1.$el, element);\n                    }\n\n                };\n\n                if (this.animation) {\n                    this.animate(insert);\n                } else {\n                    insert();\n                }\n\n            },\n\n            remove: function remove$1(element) {\n\n                if (!within(element, this.$el)) {\n                    return;\n                }\n\n                if (this.animation) {\n                    this.animate(function () { return remove(element); });\n                } else {\n                    remove(element);\n                }\n\n            },\n\n            animate: function animate(action) {\n                var this$1 = this;\n\n\n                var props = [],\n                    children = toNodes(this.$el.children),\n                    reset = {position: '', width: '', height: '', pointerEvents: '', top: '', left: '', bottom: '', right: ''};\n\n                children.forEach(function (el) {\n                    props.push(assign({\n                        position: 'absolute',\n                        pointerEvents: 'none',\n                        width: el.offsetWidth,\n                        height: el.offsetHeight\n                    }, position(el)));\n                });\n\n                action();\n\n                children.forEach(Transition.cancel);\n                css(this.$el.children, reset);\n                this.$update('update', true);\n                fastdom.flush();\n\n                css(this.$el, 'minHeight', height(this.$el));\n\n                var positions = children.map(function (el) { return position(el); });\n                Promise.all(children.map(function (el, i) { return Transition.start(css(el, props[i]), positions[i], this$1.animation); }))\n                    .then(function () {\n                        css(this$1.$el, 'minHeight', '');\n                        css(children, reset);\n                        this$1.$update('update', true);\n                        fastdom.flush();\n                    }, noop);\n\n            }\n\n        }\n\n    });\n    var obj;\n\n    function getSortable(element) {\n        return element && (UIkit.getComponent(element, 'sortable') || getSortable(element.parentNode));\n    }\n\n    function isPredecessor(element, target) {\n        return element.parentNode === target.parentNode && index(element) > index(target);\n    }\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$7);\n}\n\nfunction plugin$8(UIkit) {\n\n    if (plugin$8.installed) {\n        return;\n    }\n\n    var util = UIkit.util;\n    var mixin = UIkit.mixin;\n    var append = util.append;\n    var attr = util.attr;\n    var doc = util.doc;\n    var fastdom = util.fastdom;\n    var flipPosition = util.flipPosition;\n    var includes = util.includes;\n    var isTouch = util.isTouch;\n    var isVisible = util.isVisible;\n    var matches = util.matches;\n    var on = util.on;\n    var pointerDown = util.pointerDown;\n    var pointerEnter = util.pointerEnter;\n    var pointerLeave = util.pointerLeave;\n    var remove = util.remove;\n    var within = util.within;\n\n    var actives = [];\n\n    UIkit.component('tooltip', {\n\n        attrs: true,\n\n        mixins: [mixin.container, mixin.togglable, mixin.position],\n\n        props: {\n            delay: Number,\n            title: String\n        },\n\n        defaults: {\n            pos: 'top',\n            title: '',\n            delay: 0,\n            animation: ['uk-animation-scale-up'],\n            duration: 100,\n            cls: 'uk-active',\n            clsPos: 'uk-tooltip'\n        },\n\n        connected: function connected() {\n            var this$1 = this;\n\n            fastdom.mutate(function () { return attr(this$1.$el, {title: null, 'aria-expanded': false}); });\n        },\n\n        disconnected: function disconnected() {\n            this.hide();\n        },\n\n        methods: {\n\n            show: function show() {\n                var this$1 = this;\n\n\n                if (includes(actives, this)) {\n                    return;\n                }\n\n                actives.forEach(function (active) { return active.hide(); });\n                actives.push(this);\n\n                this._unbind = on(doc, 'click', function (e) { return !within(e.target, this$1.$el) && this$1.hide(); });\n\n                clearTimeout(this.showTimer);\n\n                this.tooltip = append(this.container, (\"<div class=\\\"\" + (this.clsPos) + \"\\\" aria-hidden><div class=\\\"\" + (this.clsPos) + \"-inner\\\">\" + (this.title) + \"</div></div>\"));\n\n                attr(this.$el, 'aria-expanded', true);\n\n                this.positionAt(this.tooltip, this.$el);\n\n                this.origin = this.getAxis() === 'y' ? ((flipPosition(this.dir)) + \"-\" + (this.align)) : ((this.align) + \"-\" + (flipPosition(this.dir)));\n\n                this.showTimer = setTimeout(function () {\n\n                    this$1.toggleElement(this$1.tooltip, true);\n\n                    this$1.hideTimer = setInterval(function () {\n\n                        if (!isVisible(this$1.$el)) {\n                            this$1.hide();\n                        }\n\n                    }, 150);\n\n                }, this.delay);\n            },\n\n            hide: function hide() {\n\n                var index = actives.indexOf(this);\n\n                if (!~index || matches(this.$el, 'input') && this.$el === doc.activeElement) {\n                    return;\n                }\n\n                actives.splice(index, 1);\n\n                clearTimeout(this.showTimer);\n                clearInterval(this.hideTimer);\n                attr(this.$el, 'aria-expanded', false);\n                this.toggleElement(this.tooltip, false);\n                this.tooltip && remove(this.tooltip);\n                this.tooltip = false;\n                this._unbind();\n\n            }\n\n        },\n\n        events: ( obj = {\n\n            'blur': 'hide'\n\n        }, obj[(\"focus \" + pointerEnter + \" \" + pointerDown)] = function (e) {\n                if (e.type !== pointerDown || !isTouch(e)) {\n                    this.show();\n                }\n            }, obj[pointerLeave] = function (e) {\n                if (!isTouch(e)) {\n                    this.hide();\n                }\n            }, obj )\n\n    });\n    var obj;\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$8);\n}\n\nfunction plugin$9(UIkit) {\n\n    if (plugin$9.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var addClass = ref.addClass;\n    var ajax = ref.ajax;\n    var matches = ref.matches;\n    var noop = ref.noop;\n    var on = ref.on;\n    var removeClass = ref.removeClass;\n    var trigger = ref.trigger;\n\n    UIkit.component('upload', {\n\n        props: {\n            allow: String,\n            clsDragover: String,\n            concurrent: Number,\n            mime: String,\n            msgInvalidMime: String,\n            msgInvalidName: String,\n            multiple: Boolean,\n            name: String,\n            params: Object,\n            type: String,\n            url: String\n        },\n\n        defaults: {\n            allow: false,\n            clsDragover: 'uk-dragover',\n            concurrent: 1,\n            mime: false,\n            msgInvalidMime: 'Invalid File Type: %s',\n            msgInvalidName: 'Invalid File Name: %s',\n            multiple: false,\n            name: 'files[]',\n            params: {},\n            type: 'POST',\n            url: '',\n            abort: noop,\n            beforeAll: noop,\n            beforeSend: noop,\n            complete: noop,\n            completeAll: noop,\n            error: noop,\n            fail: noop,\n            load: noop,\n            loadEnd: noop,\n            loadStart: noop,\n            progress: noop\n        },\n\n        events: {\n\n            change: function change(e) {\n\n                if (!matches(e.target, 'input[type=\"file\"]')) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                if (e.target.files) {\n                    this.upload(e.target.files);\n                }\n\n                e.target.value = '';\n            },\n\n            drop: function drop(e) {\n                stop(e);\n\n                var transfer = e.dataTransfer;\n\n                if (!transfer || !transfer.files) {\n                    return;\n                }\n\n                removeClass(this.$el, this.clsDragover);\n\n                this.upload(transfer.files);\n            },\n\n            dragenter: function dragenter(e) {\n                stop(e);\n            },\n\n            dragover: function dragover(e) {\n                stop(e);\n                addClass(this.$el, this.clsDragover);\n            },\n\n            dragleave: function dragleave(e) {\n                stop(e);\n                removeClass(this.$el, this.clsDragover);\n            }\n\n        },\n\n        methods: {\n\n            upload: function upload(files) {\n                var this$1 = this;\n\n\n                if (!files.length) {\n                    return;\n                }\n\n                trigger(this.$el, 'upload', [files]);\n\n                for (var i = 0; i < files.length; i++) {\n\n                    if (this$1.allow) {\n                        if (!match(this$1.allow, files[i].name)) {\n                            this$1.fail(this$1.msgInvalidName.replace(/%s/, this$1.allow));\n                            return;\n                        }\n                    }\n\n                    if (this$1.mime) {\n                        if (!match(this$1.mime, files[i].type)) {\n                            this$1.fail(this$1.msgInvalidMime.replace(/%s/, this$1.mime));\n                            return;\n                        }\n                    }\n\n                }\n\n                if (!this.multiple) {\n                    files = [files[0]];\n                }\n\n                this.beforeAll(this, files);\n\n                var chunks = chunk(files, this.concurrent),\n                    upload = function (files) {\n\n                        var data = new FormData();\n\n                        files.forEach(function (file) { return data.append(this$1.name, file); });\n\n                        for (var key in this$1.params) {\n                            data.append(key, this$1.params[key]);\n                        }\n\n                        ajax(this$1.url, {\n                            data: data,\n                            method: this$1.type,\n                            beforeSend: function (env) {\n\n                                var xhr = env.xhr;\n                                xhr.upload && on(xhr.upload, 'progress', this$1.progress);\n                                ['loadStart', 'load', 'loadEnd', 'abort'].forEach(function (type) { return on(xhr, type.toLowerCase(), this$1[type]); }\n                                );\n\n                                this$1.beforeSend(env);\n\n                            }\n                        }).then(\n                            function (xhr) {\n\n                                this$1.complete(xhr);\n\n                                if (chunks.length) {\n                                    upload(chunks.shift());\n                                } else {\n                                    this$1.completeAll(xhr);\n                                }\n\n                            },\n                            function (e) { return this$1.error(e.message); }\n                        );\n\n                    };\n\n                upload(chunks.shift());\n\n            }\n\n        }\n\n    });\n\n    function match(pattern, path) {\n        return path.match(new RegExp((\"^\" + (pattern.replace(/\\//g, '\\\\/').replace(/\\*\\*/g, '(\\\\/[^\\\\/]+)*').replace(/\\*/g, '[^\\\\/]+').replace(/((?!\\\\))\\?/g, '$1.')) + \"$\"), 'i'));\n    }\n\n    function chunk(files, size) {\n        var chunks = [];\n        for (var i = 0; i < files.length; i += size) {\n            var chunk = [];\n            for (var j = 0; j < size; j++) {\n                chunk.push(files[i + j]);\n            }\n            chunks.push(chunk);\n        }\n        return chunks;\n    }\n\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n}\n\nif (false) {\n    window.UIkit.use(plugin$9);\n}\n\nUIkit$2.use(plugin);\nUIkit$2.use(plugin$1);\nUIkit$2.use(plugin$2);\nUIkit$2.use(plugin$4);\nUIkit$2.use(plugin$5);\nUIkit$2.use(plugin$6);\nUIkit$2.use(plugin$7);\nUIkit$2.use(plugin$8);\nUIkit$2.use(plugin$9);\n\n{\n    boot(UIkit$2);\n}\n\nreturn UIkit$2;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../timers-browserify/main.js */ 2).setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ 3);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzP2Q3YWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgd2luZG93LCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbCh3aW5kb3csIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSBzZXRJbW1lZGlhdGU7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gY2xlYXJJbW1lZGlhdGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ 4), __webpack_require__(/*! ./../process/browser.js */ 5)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XG59IGNhdGNoKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcblx0XHRnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!***************************************************!*\
  !*** ./node_modules/uikit/dist/js/uikit-icons.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! UIkit 3.0.0-beta.34 | http://www.getuikit.com | (c) 2014 - 2017 YOOtheme | MIT License */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('uikiticons', factory) :\n\t(global.UIkitIcons = factory());\n}(this, (function () { 'use strict';\n\nvar album = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"5\\\" y=\\\"2\\\" width=\\\"10\\\" height=\\\"1\\\"></rect> <rect x=\\\"3\\\" y=\\\"4\\\" width=\\\"14\\\" height=\\\"1\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"6.5\\\" width=\\\"17\\\" height=\\\"11\\\"></rect></svg>\";\nvar ban = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"></circle> <line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"4\\\" y1=\\\"3.5\\\" x2=\\\"16\\\" y2=\\\"16.5\\\"></line></svg>\";\nvar behance = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z\\\"></path> <path d=\\\"M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z\\\"></path> <rect x=\\\"13\\\" y=\\\"4\\\" width=\\\"5\\\" height=\\\"1.4\\\"></rect></svg>\";\nvar bell = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16\\\"></path></svg>\";\nvar bold = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z\\\"></path></svg>\";\nvar bolt = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z\\\"></path></svg>\";\nvar bookmark = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5\\\"></polygon></svg>\";\nvar calendar = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z\\\"></path> <rect width=\\\"1\\\" height=\\\"3\\\" x=\\\"6\\\" y=\\\"2\\\"></rect> <rect width=\\\"1\\\" height=\\\"3\\\" x=\\\"13\\\" y=\\\"2\\\"></rect></svg>\";\nvar camera = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10.8\\\" r=\\\"3.8\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z\\\"></path></svg>\";\nvar cart = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"7.3\\\" cy=\\\"17.3\\\" r=\\\"1.4\\\"></circle> <circle cx=\\\"13.3\\\" cy=\\\"17.3\\\" r=\\\"1.4\\\"></circle> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5\\\"></polyline></svg>\";\nvar check = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"4,10 8,15 17,4\\\"></polyline></svg>\";\nvar clock = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"></circle> <rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"></rect> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.018,14.197 L9.445,10.625\\\"></path></svg>\";\nvar close = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.06\\\" d=\\\"M16,16 L4,4\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.06\\\" d=\\\"M16,4 L4,16\\\"></path></svg>\";\nvar code = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"13,4 19,10 13,16\\\"></polyline> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"7,4 1,10 7,16\\\"></polyline></svg>\";\nvar cog = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"9.997\\\" cy=\\\"10\\\" r=\\\"3.31\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z\\\"></path></svg>\";\nvar comment = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z\\\"></path></svg>\";\nvar commenting = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5\\\"></polygon> <circle cx=\\\"10\\\" cy=\\\"8\\\" r=\\\"1\\\"></circle> <circle cx=\\\"6\\\" cy=\\\"8\\\" r=\\\"1\\\"></circle> <circle cx=\\\"14\\\" cy=\\\"8\\\" r=\\\"1\\\"></circle></svg>\";\nvar comments = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"2 0.5 19.5 0.5 19.5 13\\\"></polyline> <path d=\\\"M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z\\\"></path></svg>\";\nvar copy = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"2.5\\\" width=\\\"12\\\" height=\\\"16\\\"></rect> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5 0.5 17.5 0.5 17.5 17\\\"></polyline></svg>\";\nvar database = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"4.64\\\" rx=\\\"7.5\\\" ry=\\\"3.14\\\"></ellipse> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64\\\"></path></svg>\";\nvar desktop = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"8\\\" y=\\\"15\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"11\\\" y=\\\"15\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"5\\\" y=\\\"16\\\" width=\\\"10\\\" height=\\\"1\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"3.5\\\" width=\\\"17\\\" height=\\\"11\\\"></rect></svg>\";\nvar download = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"14,10 9.5,14.5 5,10\\\"></polyline> <rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"13\\\" height=\\\"1\\\"></rect> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"13.91\\\" x2=\\\"9.5\\\" y2=\\\"3\\\"></line></svg>\";\nvar dribbble = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4\\\"></path> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"></circle></svg>\";\nvar expand = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"13 2 18 2 18 7 17 7 17 3 13 3\\\"></polygon> <polygon points=\\\"2 13 3 13 3 17 7 17 7 18 2 18\\\"></polygon> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M11,9 L17,3\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M3,17 L9,11\\\"></path></svg>\";\nvar facebook = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z\\\"></path></svg>\";\nvar file = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"1.5\\\" width=\\\"13\\\" height=\\\"17\\\"></rect></svg>\";\nvar flickr = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"5.5\\\" cy=\\\"9.5\\\" r=\\\"3.5\\\"></circle> <circle cx=\\\"14.5\\\" cy=\\\"9.5\\\" r=\\\"3.5\\\"></circle></svg>\";\nvar folder = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5\\\"></polygon></svg>\";\nvar forward = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z\\\"></path></svg>\";\nvar foursquare = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z\\\"></path></svg>\";\nvar future = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline points=\\\"19 2 18 2 18 6 14 6 14 7 19 7 19 2\\\"></polyline> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10\\\"></path> <rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"></rect> <path d=\\\"M13.018,14.197 L9.445,10.625\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\"></path></svg>\";\nvar github = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z\\\"></path></svg>\";\nvar gitter = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"3.5\\\" y=\\\"1\\\" width=\\\"1.531\\\" height=\\\"11.471\\\"></rect> <rect x=\\\"7.324\\\" y=\\\"4.059\\\" width=\\\"1.529\\\" height=\\\"15.294\\\"></rect> <rect x=\\\"11.148\\\" y=\\\"4.059\\\" width=\\\"1.527\\\" height=\\\"15.294\\\"></rect> <rect x=\\\"14.971\\\" y=\\\"4.059\\\" width=\\\"1.529\\\" height=\\\"8.412\\\"></rect></svg>\";\nvar google = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z\\\"></path></svg>\";\nvar grid = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"2\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"8\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"14\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"2\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"8\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"14\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"8\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"></rect> <rect x=\\\"14\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"></rect></svg>\";\nvar happy = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"13\\\" cy=\\\"7\\\" r=\\\"1\\\"></circle> <circle cx=\\\"7\\\" cy=\\\"7\\\" r=\\\"1\\\"></circle> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"8.5\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4\\\"></path></svg>\";\nvar hashtag = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z\\\"></path></svg>\";\nvar heart = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" d=\\\"M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z\\\"></path></svg>\";\nvar history = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"#000\\\" points=\\\"1 2 2 2 2 6 6 6 6 7 1 7 1 2\\\"></polyline> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10\\\"></path> <rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"></rect> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.018,14.197 L9.445,10.625\\\" id=\\\"Shape\\\"></path></svg>\";\nvar home = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65\\\"></polygon> <polygon points=\\\"15 4 18 4 18 7 17 7 17 5 15 5\\\"></polygon> <polygon points=\\\"3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19\\\"></polygon></svg>\";\nvar image = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"16.1\\\" cy=\\\"6.1\\\" r=\\\"1.1\\\"></circle> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"0.5\\\" y=\\\"2.5\\\" width=\\\"19\\\" height=\\\"15\\\"></rect> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"4,13 8,9 13,14\\\"></polyline> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"11,12 12.5,10.5 16,14\\\"></polyline></svg>\";\nvar info = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z\\\"></path> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"></circle></svg>\";\nvar instagram = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z\\\"></path> <circle cx=\\\"14.87\\\" cy=\\\"5.26\\\" r=\\\"1.09\\\"></circle> <path d=\\\"M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z\\\"></path></svg>\";\nvar italic = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z\\\"></path></svg>\";\nvar joomla = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z\\\"></path> <path d=\\\"M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8\\\"></path> <path d=\\\"M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8\\\"></path> <path d=\\\"M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7\\\"></path></svg>\";\nvar laptop = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect y=\\\"16\\\" width=\\\"20\\\" height=\\\"1\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"2.5\\\" y=\\\"4.5\\\" width=\\\"15\\\" height=\\\"10\\\"></rect></svg>\";\nvar lifesaver = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M10,0.5 C4.76,0.5 0.5,4.76 0.5,10 C0.5,15.24 4.76,19.5 10,19.5 C15.24,19.5 19.5,15.24 19.5,10 C19.5,4.76 15.24,0.5 10,0.5 L10,0.5 Z M10,1.5 C11.49,1.5 12.89,1.88 14.11,2.56 L11.85,4.82 C11.27,4.61 10.65,4.5 10,4.5 C9.21,4.5 8.47,4.67 7.79,4.96 L5.58,2.75 C6.87,1.95 8.38,1.5 10,1.5 L10,1.5 Z M4.96,7.8 C4.67,8.48 4.5,9.21 4.5,10 C4.5,10.65 4.61,11.27 4.83,11.85 L2.56,14.11 C1.88,12.89 1.5,11.49 1.5,10 C1.5,8.38 1.95,6.87 2.75,5.58 L4.96,7.79 L4.96,7.8 L4.96,7.8 Z M10,18.5 C8.25,18.5 6.62,17.97 5.27,17.06 L7.46,14.87 C8.22,15.27 9.08,15.5 10,15.5 C10.79,15.5 11.53,15.33 12.21,15.04 L14.42,17.25 C13.13,18.05 11.62,18.5 10,18.5 L10,18.5 Z M10,14.5 C7.52,14.5 5.5,12.48 5.5,10 C5.5,7.52 7.52,5.5 10,5.5 C12.48,5.5 14.5,7.52 14.5,10 C14.5,12.48 12.48,14.5 10,14.5 L10,14.5 Z M15.04,12.21 C15.33,11.53 15.5,10.79 15.5,10 C15.5,9.08 15.27,8.22 14.87,7.46 L17.06,5.27 C17.97,6.62 18.5,8.25 18.5,10 C18.5,11.62 18.05,13.13 17.25,14.42 L15.04,12.21 L15.04,12.21 Z\\\"></path></svg>\";\nvar link = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M7.925,11.875 L11.925,7.975\\\"></path></svg>\";\nvar linkedin = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z\\\"></path> <path d=\\\"M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z\\\"></path></svg>\";\nvar list = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"6\\\" y=\\\"4\\\" width=\\\"12\\\" height=\\\"1\\\"></rect> <rect x=\\\"6\\\" y=\\\"9\\\" width=\\\"12\\\" height=\\\"1\\\"></rect> <rect x=\\\"6\\\" y=\\\"14\\\" width=\\\"12\\\" height=\\\"1\\\"></rect> <rect x=\\\"2\\\" y=\\\"4\\\" width=\\\"2\\\" height=\\\"1\\\"></rect> <rect x=\\\"2\\\" y=\\\"9\\\" width=\\\"2\\\" height=\\\"1\\\"></rect> <rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"2\\\" height=\\\"1\\\"></rect></svg>\";\nvar location = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" d=\\\"M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z\\\"></path> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"6.8\\\" r=\\\"2.3\\\"></circle></svg>\";\nvar lock = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" height=\\\"10\\\" width=\\\"13\\\" y=\\\"8.5\\\" x=\\\"3.5\\\"></rect> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8\\\"></path></svg>\";\nvar mail = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"1.4,6.5 10,11 18.6,6.5\\\"></polyline> <path d=\\\"M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z\\\"></path></svg>\";\nvar menu = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"2\\\" y=\\\"4\\\" width=\\\"16\\\" height=\\\"1\\\"></rect> <rect x=\\\"2\\\" y=\\\"9\\\" width=\\\"16\\\" height=\\\"1\\\"></rect> <rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"16\\\" height=\\\"1\\\"></rect></svg>\";\nvar minus = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect height=\\\"1\\\" width=\\\"18\\\" y=\\\"9\\\" x=\\\"1\\\"></rect></svg>\";\nvar more = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"3\\\" cy=\\\"10\\\" r=\\\"2\\\"></circle> <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"2\\\"></circle> <circle cx=\\\"17\\\" cy=\\\"10\\\" r=\\\"2\\\"></circle></svg>\";\nvar move = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"4,5 1,5 1,9 2,9 2,6 4,6 \\\"></polygon> <polygon points=\\\"1,16 2,16 2,18 4,18 4,19 1,19 \\\"></polygon> <polygon points=\\\"14,16 14,19 11,19 11,18 13,18 13,16 \\\"></polygon> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"5.5\\\" y=\\\"1.5\\\" width=\\\"13\\\" height=\\\"13\\\"></rect> <rect x=\\\"1\\\" y=\\\"11\\\" width=\\\"1\\\" height=\\\"3\\\"></rect> <rect x=\\\"6\\\" y=\\\"18\\\" width=\\\"3\\\" height=\\\"1\\\"></rect></svg>\";\nvar nut = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3\\\"></polygon> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"3.5\\\"></circle></svg>\";\nvar pagekit = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19 \\\"></polygon></svg>\";\nvar pencil = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M15.98,7.268 L13.851,5.148\\\"></path></svg>\";\nvar phone = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z\\\"></path> <circle cx=\\\"10.5\\\" cy=\\\"16.5\\\" r=\\\"0.8\\\"></circle></svg>\";\nvar pinterest = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1\\\"></path></svg>\";\nvar play = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6.5,5 14.5,10 6.5,15\\\"></polygon></svg>\";\nvar plus = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"9\\\" y=\\\"1\\\" width=\\\"1\\\" height=\\\"17\\\"></rect> <rect x=\\\"1\\\" y=\\\"9\\\" width=\\\"17\\\" height=\\\"1\\\"></rect></svg>\";\nvar pull = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7\\\"></polygon> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"11\\\" x2=\\\"9.5\\\" y2=\\\"2\\\"></line> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5\\\"></polyline></svg>\";\nvar push = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3\\\"></polygon> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"10\\\" x2=\\\"9.5\\\" y2=\\\"1\\\"></line> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5\\\"></polyline></svg>\";\nvar question = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"></circle> <circle cx=\\\"10.44\\\" cy=\\\"14.42\\\" r=\\\"1.05\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" d=\\\"M8.17,7.79 C8.17,4.75 12.72,4.73 12.72,7.72 C12.72,8.67 11.81,9.15 11.23,9.75 C10.75,10.24 10.51,10.73 10.45,11.4 C10.44,11.53 10.43,11.64 10.43,11.75\\\"></path></svg>\";\nvar receiver = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" d=\\\"M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611\\\"></path></svg>\";\nvar refresh = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5\\\"></path> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"9.9 2 12.79 4.89 9.79 7.9\\\"></polyline></svg>\";\nvar reply = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z\\\"></path></svg>\";\nvar rss = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"3.12\\\" cy=\\\"16.8\\\" r=\\\"1.85\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5\\\"></path></svg>\";\nvar search = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"></path></svg>\";\nvar server = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"3\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"5\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"7\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"16\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"1\\\"></rect> <rect x=\\\"16\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"1\\\"></rect> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"9.9\\\" cy=\\\"17.4\\\" r=\\\"1.4\\\"></circle> <rect x=\\\"3\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"5\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"9.5\\\" y=\\\"14\\\" width=\\\"1\\\" height=\\\"2\\\"></rect> <rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"6\\\" height=\\\"1\\\"></rect> <rect x=\\\"11\\\" y=\\\"17\\\" width=\\\"6\\\" height=\\\"1\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"1.5\\\" width=\\\"17\\\" height=\\\"5\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"8.5\\\" width=\\\"17\\\" height=\\\"5\\\"></rect></svg>\";\nvar settings = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"6.11\\\" cy=\\\"3.55\\\" rx=\\\"2.11\\\" ry=\\\"2.15\\\"></ellipse> <ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"6.11\\\" cy=\\\"15.55\\\" rx=\\\"2.11\\\" ry=\\\"2.15\\\"></ellipse> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"13.15\\\" cy=\\\"9.55\\\" r=\\\"2.15\\\"></circle> <rect x=\\\"1\\\" y=\\\"3\\\" width=\\\"3\\\" height=\\\"1\\\"></rect> <rect x=\\\"10\\\" y=\\\"3\\\" width=\\\"8\\\" height=\\\"1\\\"></rect> <rect x=\\\"1\\\" y=\\\"9\\\" width=\\\"8\\\" height=\\\"1\\\"></rect> <rect x=\\\"15\\\" y=\\\"9\\\" width=\\\"3\\\" height=\\\"1\\\"></rect> <rect x=\\\"1\\\" y=\\\"15\\\" width=\\\"3\\\" height=\\\"1\\\"></rect> <rect x=\\\"10\\\" y=\\\"15\\\" width=\\\"8\\\" height=\\\"1\\\"></rect></svg>\";\nvar shrink = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"11 4 12 4 12 8 16 8 16 9 11 9\\\"></polygon> <polygon points=\\\"4 11 9 11 9 16 8 16 8 12 4 12\\\"></polygon> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M12,8 L18,2\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M2,18 L8,12\\\"></path></svg>\";\nvar social = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13.4\\\" y1=\\\"14\\\" x2=\\\"6.3\\\" y2=\\\"10.7\\\"></line> <line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13.5\\\" y1=\\\"5.5\\\" x2=\\\"6.5\\\" y2=\\\"8.8\\\"></line> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"15.5\\\" cy=\\\"4.6\\\" r=\\\"2.3\\\"></circle> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"15.5\\\" cy=\\\"14.8\\\" r=\\\"2.3\\\"></circle> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"4.5\\\" cy=\\\"9.8\\\" r=\\\"2.3\\\"></circle></svg>\";\nvar soundcloud = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z\\\"></path> <rect x=\\\"6\\\" y=\\\"6.5\\\" width=\\\"1.5\\\" height=\\\"8.5\\\"></rect> <rect x=\\\"3\\\" y=\\\"8\\\" width=\\\"1.5\\\" height=\\\"7\\\"></rect> <rect y=\\\"10\\\" width=\\\"1.5\\\" height=\\\"5\\\"></rect></svg>\";\nvar star = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27\\\"></polygon></svg>\";\nvar strikethrough = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z\\\"></path> <rect x=\\\"3\\\" y=\\\"10\\\" width=\\\"15\\\" height=\\\"1\\\"></rect></svg>\";\nvar table = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"1\\\" y=\\\"3\\\" width=\\\"18\\\" height=\\\"1\\\"></rect> <rect x=\\\"1\\\" y=\\\"7\\\" width=\\\"18\\\" height=\\\"1\\\"></rect> <rect x=\\\"1\\\" y=\\\"11\\\" width=\\\"18\\\" height=\\\"1\\\"></rect> <rect x=\\\"1\\\" y=\\\"15\\\" width=\\\"18\\\" height=\\\"1\\\"></rect></svg>\";\nvar tablet = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z\\\"></path> <circle cx=\\\"10.5\\\" cy=\\\"16.3\\\" r=\\\"0.8\\\"></circle></svg>\";\nvar tag = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z\\\"></path> <circle cx=\\\"14\\\" cy=\\\"6\\\" r=\\\"1\\\"></circle></svg>\";\nvar thumbnails = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"3.5\\\" width=\\\"5\\\" height=\\\"5\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"11.5\\\" y=\\\"3.5\\\" width=\\\"5\\\" height=\\\"5\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"11.5\\\" y=\\\"11.5\\\" width=\\\"5\\\" height=\\\"5\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"11.5\\\" width=\\\"5\\\" height=\\\"5\\\"></rect></svg>\";\nvar trash = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6.5 3 6.5 1.5 13.5 1.5 13.5 3\\\"></polyline> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"4.5 4 4.5 18.5 15.5 18.5 15.5 4\\\"></polyline> <rect x=\\\"8\\\" y=\\\"7\\\" width=\\\"1\\\" height=\\\"9\\\"></rect> <rect x=\\\"11\\\" y=\\\"7\\\" width=\\\"1\\\" height=\\\"9\\\"></rect> <rect x=\\\"2\\\" y=\\\"3\\\" width=\\\"16\\\" height=\\\"1\\\"></rect></svg>\";\nvar tripadvisor = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z\\\"></path></svg>\";\nvar tumblr = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z\\\"></path></svg>\";\nvar tv = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect x=\\\"7\\\" y=\\\"16\\\" width=\\\"6\\\" height=\\\"1\\\"></rect> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"0.5\\\" y=\\\"3.5\\\" width=\\\"19\\\" height=\\\"11\\\"></rect></svg>\";\nvar twitter = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74\\\"></path></svg>\";\nvar uikit = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3\\\"></polygon> <polygon points=\\\"9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3\\\"></polygon></svg>\";\nvar unlock = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"8.5\\\" width=\\\"13\\\" height=\\\"10\\\"></rect> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9\\\"></path></svg>\";\nvar upload = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5 8 9.5 3.5 14 8 \\\"></polyline> <rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"13\\\" height=\\\"1\\\"></rect> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"15\\\" x2=\\\"9.5\\\" y2=\\\"4\\\"></line></svg>\";\nvar user = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.9\\\" cy=\\\"6.4\\\" r=\\\"4.4\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2\\\"></path></svg>\";\nvar users = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"7.7\\\" cy=\\\"8.6\\\" r=\\\"3.5\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1\\\"></path></svg>\";\nvar vimeo = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z\\\"></path></svg>\";\nvar warning = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"10\\\" cy=\\\"14\\\" r=\\\"1\\\"></circle> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"></circle> <path d=\\\"M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z\\\"></path></svg>\";\nvar whatsapp = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9\\\"></path></svg>\";\nvar wordpress = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z\\\"></path></svg>\";\nvar world = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1,10.5 L19,10.5\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M2.35,15.5 L17.65,15.5\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M2.35,5.5 L17.523,5.5\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z\\\"></path> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10.5\\\" r=\\\"9\\\"></circle></svg>\";\nvar xing = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z\\\"></path> <path d=\\\"M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z\\\"></path></svg>\";\nvar yelp = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z\\\"></path></svg>\";\nvar youtube = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z\\\"></path></svg>\";\nvar Icons = {\n\talbum: album,\n\tban: ban,\n\tbehance: behance,\n\tbell: bell,\n\tbold: bold,\n\tbolt: bolt,\n\tbookmark: bookmark,\n\tcalendar: calendar,\n\tcamera: camera,\n\tcart: cart,\n\tcheck: check,\n\tclock: clock,\n\tclose: close,\n\tcode: code,\n\tcog: cog,\n\tcomment: comment,\n\tcommenting: commenting,\n\tcomments: comments,\n\tcopy: copy,\n\tdatabase: database,\n\tdesktop: desktop,\n\tdownload: download,\n\tdribbble: dribbble,\n\texpand: expand,\n\tfacebook: facebook,\n\tfile: file,\n\tflickr: flickr,\n\tfolder: folder,\n\tforward: forward,\n\tfoursquare: foursquare,\n\tfuture: future,\n\tgithub: github,\n\tgitter: gitter,\n\tgoogle: google,\n\tgrid: grid,\n\thappy: happy,\n\thashtag: hashtag,\n\theart: heart,\n\thistory: history,\n\thome: home,\n\timage: image,\n\tinfo: info,\n\tinstagram: instagram,\n\titalic: italic,\n\tjoomla: joomla,\n\tlaptop: laptop,\n\tlifesaver: lifesaver,\n\tlink: link,\n\tlinkedin: linkedin,\n\tlist: list,\n\tlocation: location,\n\tlock: lock,\n\tmail: mail,\n\tmenu: menu,\n\tminus: minus,\n\tmore: more,\n\tmove: move,\n\tnut: nut,\n\tpagekit: pagekit,\n\tpencil: pencil,\n\tphone: phone,\n\tpinterest: pinterest,\n\tplay: play,\n\tplus: plus,\n\tpull: pull,\n\tpush: push,\n\tquestion: question,\n\treceiver: receiver,\n\trefresh: refresh,\n\treply: reply,\n\trss: rss,\n\tsearch: search,\n\tserver: server,\n\tsettings: settings,\n\tshrink: shrink,\n\tsocial: social,\n\tsoundcloud: soundcloud,\n\tstar: star,\n\tstrikethrough: strikethrough,\n\ttable: table,\n\ttablet: tablet,\n\ttag: tag,\n\tthumbnails: thumbnails,\n\ttrash: trash,\n\ttripadvisor: tripadvisor,\n\ttumblr: tumblr,\n\ttv: tv,\n\ttwitter: twitter,\n\tuikit: uikit,\n\tunlock: unlock,\n\tupload: upload,\n\tuser: user,\n\tusers: users,\n\tvimeo: vimeo,\n\twarning: warning,\n\twhatsapp: whatsapp,\n\twordpress: wordpress,\n\tworld: world,\n\txing: xing,\n\tyelp: yelp,\n\tyoutube: youtube,\n\t\"500px\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719\\t\\tc0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449\\t\\tc-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045\\t\\tc-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z\\\"></path> <path d=\\\"M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066\\t\\tc0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564\\t\\tc0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271\\t\\tc0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z\\\"></path> <path d=\\\"M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521\\t\\tc-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53\\t\\tc-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203\\t\\tc-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604\\t\\tc0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645\\t\\tc1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z\\\"></path> <path d=\\\"M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461\\t\\tc0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882\\t\\tc0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881\\t\\tc-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461\\t\\tc-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915\\t\\tC5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0\\t\\tc0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408\\t\\tc0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406\\t\\tc-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799\\t\\tc0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468\\t\\tc-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607\\t\\tc0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038\\t\\tc-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113\\t\\tc-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z\\\"></path></svg>\",\n\t\"arrow-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66\\\"></polygon> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10.5\\\" y1=\\\"4\\\" x2=\\\"10.5\\\" y2=\\\"15\\\"></line></svg>\",\n\t\"arrow-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"10 14 5 9.5 10 5\\\"></polyline> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"16\\\" y1=\\\"9.5\\\" x2=\\\"5\\\" y2=\\\"9.52\\\"></line></svg>\",\n\t\"arrow-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"10 5 15 9.5 10 14\\\"></polyline> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"4\\\" y1=\\\"9.5\\\" x2=\\\"15\\\" y2=\\\"9.5\\\"></line></svg>\",\n\t\"arrow-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4\\\"></polygon> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10.5\\\" y1=\\\"16\\\" x2=\\\"10.5\\\" y2=\\\"5\\\"></line></svg>\",\n\t\"chevron-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"16 7 10 13 4 7\\\"></polyline></svg>\",\n\t\"chevron-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"13 16 7 10 13 4\\\"></polyline></svg>\",\n\t\"chevron-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"7 4 13 10 7 16\\\"></polyline></svg>\",\n\t\"chevron-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"4 13 10 7 16 13\\\"></polyline></svg>\",\n\t\"cloud-download\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\\\"></path> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"11.75 16 9.5 18.25 7.25 16\\\"></polyline> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M9.5,18 L9.5,9.5\\\"></path></svg>\",\n\t\"cloud-upload\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\\\"></path> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"7.25 11.75 9.5 9.5 11.75 11.75\\\"></polyline> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M9.5,18 L9.5,9.5\\\"></path></svg>\",\n\t\"credit-card\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"4.5\\\" width=\\\"17\\\" height=\\\"12\\\"></rect> <rect x=\\\"1\\\" y=\\\"7\\\" width=\\\"18\\\" height=\\\"3\\\"></rect></svg>\",\n\t\"file-edit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z\\\"></path> <polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5\\\"></polyline></svg>\",\n\t\"git-branch\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"7\\\" cy=\\\"3\\\" r=\\\"2\\\"></circle> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"14\\\" cy=\\\"6\\\" r=\\\"2\\\"></circle> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"7\\\" cy=\\\"17\\\" r=\\\"2\\\"></circle> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" d=\\\"M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5\\\"></path></svg>\",\n\t\"git-fork\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"5.79\\\" cy=\\\"2.79\\\" r=\\\"1.79\\\"></circle> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"14.19\\\" cy=\\\"2.79\\\" r=\\\"1.79\\\"></circle> <ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"10.03\\\" cy=\\\"16.79\\\" rx=\\\"1.79\\\" ry=\\\"1.79\\\"></ellipse> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" d=\\\"M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57\\\"></path></svg>\",\n\t\"github-alt\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z\\\"></path></svg>\",\n\t\"google-plus\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M12.9,9c0,2.7-0.6,5-3.2,6.3c-3.7,1.8-8.1,0.2-9.4-3.6C-1.1,7.6,1.9,3.3,6.1,3c1.7-0.1,3.2,0.3,4.6,1.3 c0.1,0.1,0.3,0.2,0.4,0.4c-0.5,0.5-1.2,1-1.7,1.6c-1-0.8-2.1-1.1-3.5-0.9C5,5.6,4.2,6,3.6,6.7c-1.3,1.3-1.5,3.4-0.5,5 c1,1.7,2.6,2.3,4.6,1.9c1.4-0.3,2.4-1.2,2.6-2.6H6.9V9H12.9z\\\"></path> <polygon points=\\\"20,9 20,11 18,11 18,13 16,13 16,11 14,11 14,9 16,9 16,7 18,7 18,9 \\\"></polygon></svg>\",\n\t\"minus-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.5\\\" cy=\\\"9.5\\\" r=\\\"9\\\"></circle> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"5\\\" y1=\\\"9.5\\\" x2=\\\"14\\\" y2=\\\"9.5\\\"></line></svg>\",\n\t\"more-vertical\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle cx=\\\"10\\\" cy=\\\"3\\\" r=\\\"2\\\"></circle> <circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"2\\\"></circle> <circle cx=\\\"10\\\" cy=\\\"17\\\" r=\\\"2\\\"></circle></svg>\",\n\t\"paint-bucket\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M10.21,1 L0,11.21 L8.1,19.31 L18.31,9.1 L10.21,1 L10.21,1 Z M16.89,9.1 L15,11 L1.7,11 L10.21,2.42 L16.89,9.1 Z\\\"></path> <path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.42,2.33 L11.7,7.61\\\"></path> <path d=\\\"M18.49,12 C18.49,12 20,14.06 20,15.36 C20,16.28 19.24,17 18.49,17 L18.49,17 C17.74,17 17,16.28 17,15.36 C17,14.06 18.49,12 18.49,12 L18.49,12 Z\\\"></path></svg>\",\n\t\"phone-landscape\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z\\\"></path> <circle cx=\\\"3.8\\\" cy=\\\"10.5\\\" r=\\\"0.8\\\"></circle></svg>\",\n\t\"play-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"8.5 7 13.5 10 8.5 13\\\"></polygon> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"></circle></svg>\",\n\t\"plus-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.5\\\" cy=\\\"9.5\\\" r=\\\"9\\\"></circle> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"5\\\" x2=\\\"9.5\\\" y2=\\\"14\\\"></line> <line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"5\\\" y1=\\\"9.5\\\" x2=\\\"14\\\" y2=\\\"9.5\\\"></line></svg>\",\n\t\"quote-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path d=\\\"M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z\\\"></path> <path d=\\\"M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z\\\"></path></svg>\",\n\t\"sign-in\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3\\\"></polygon> <polygon points=\\\"9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5\\\"></polygon></svg>\",\n\t\"sign-out\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5\\\"></polygon> <polygon points=\\\"13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3\\\"></polygon></svg>\",\n\t\"tablet-landscape\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z\\\"></path> <circle cx=\\\"3.7\\\" cy=\\\"10.5\\\" r=\\\"0.8\\\"></circle></svg>\",\n\t\"triangle-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"5 7 15 7 10 12\\\"></polygon></svg>\",\n\t\"triangle-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"12 5 7 10 12 15\\\"></polygon></svg>\",\n\t\"triangle-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"8 5 13 10 8 15\\\"></polygon></svg>\",\n\t\"triangle-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"5 13 10 8 15 13\\\"></polygon></svg>\",\n\t\"video-camera\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <polygon points=\\\"18,6 18,14 12,10 \\\"></polygon> <rect x=\\\"2\\\" y=\\\"5\\\" width=\\\"12\\\" height=\\\"10\\\"></rect></svg>\"\n};\n\nfunction plugin(UIkit) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    UIkit.icon.add(Icons);\n\n}\n\nif (typeof window !== 'undefined' && window.UIkit) {\n    window.UIkit.use(plugin);\n}\n\nreturn plugin;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91aWtpdC9kaXN0L2pzL3Vpa2l0LWljb25zLmpzP2ZmMzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIFVJa2l0IDMuMC4wLWJldGEuMzQgfCBodHRwOi8vd3d3LmdldHVpa2l0LmNvbSB8IChjKSAyMDE0IC0gMjAxNyBZT090aGVtZSB8IE1JVCBMaWNlbnNlICovXG5cbihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG5cdHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpIDpcblx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKCd1aWtpdGljb25zJywgZmFjdG9yeSkgOlxuXHQoZ2xvYmFsLlVJa2l0SWNvbnMgPSBmYWN0b3J5KCkpO1xufSh0aGlzLCAoZnVuY3Rpb24gKCkgeyAndXNlIHN0cmljdCc7XG5cbnZhciBhbGJ1bSA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgeD1cXFwiNVxcXCIgeT1cXFwiMlxcXCIgd2lkdGg9XFxcIjEwXFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiM1xcXCIgeT1cXFwiNFxcXCIgd2lkdGg9XFxcIjE0XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIxLjVcXFwiIHk9XFxcIjYuNVxcXCIgd2lkdGg9XFxcIjE3XFxcIiBoZWlnaHQ9XFxcIjExXFxcIj48L3JlY3Q+PC9zdmc+XCI7XG52YXIgYmFuID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiIGN4PVxcXCIxMFxcXCIgY3k9XFxcIjEwXFxcIiByPVxcXCI5XFxcIj48L2NpcmNsZT4gPGxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgeDE9XFxcIjRcXFwiIHkxPVxcXCIzLjVcXFwiIHgyPVxcXCIxNlxcXCIgeTI9XFxcIjE2LjVcXFwiPjwvbGluZT48L3N2Zz5cIjtcbnZhciBiZWhhbmNlID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNOS41LDEwLjZjLTAuNC0wLjUtMC45LTAuOS0xLjYtMS4xYzEuNy0xLDIuMi0zLjIsMC43LTQuN0M3LjgsNCw2LjMsNCw1LjIsNEMzLjUsNCwxLjcsNCwwLDR2MTJjMS43LDAsMy40LDAsNS4yLDAgYzEsMCwyLjEsMCwzLjEtMC41QzEwLjIsMTQuNiwxMC41LDEyLjMsOS41LDEwLjZMOS41LDEwLjZ6IE01LjYsNi4xYzEuOCwwLDEuOCwyLjctMC4xLDIuN2MtMSwwLTIsMC0yLjksMFY2LjFINS42eiBNMi42LDEzLjh2LTMuMSBjMS4xLDAsMi4xLDAsMy4yLDBjMi4xLDAsMi4xLDMuMiwwLjEsMy4yTDIuNiwxMy44elxcXCI+PC9wYXRoPiA8cGF0aCBkPVxcXCJNMTkuOSwxMC45QzE5LjcsOS4yLDE4LjcsNy42LDE3LDdjLTQuMi0xLjMtNy4zLDMuNC01LjMsNy4xYzAuOSwxLjcsMi44LDIuMyw0LjcsMi4xYzEuNy0wLjIsMi45LTEuMywzLjQtMi45aC0yLjIgYy0wLjQsMS4zLTIuNCwxLjUtMy41LDAuNmMtMC40LTAuNC0wLjYtMS4xLTAuNi0xLjdIMjBDMjAsMTEuNywxOS45LDEwLjksMTkuOSwxMC45eiBNMTMuNSwxMC42YzAtMS42LDIuMy0yLjcsMy41LTEuNCBjMC40LDAuNCwwLjUsMC45LDAuNiwxLjRIMTMuNUwxMy41LDEwLjZ6XFxcIj48L3BhdGg+IDxyZWN0IHg9XFxcIjEzXFxcIiB5PVxcXCI0XFxcIiB3aWR0aD1cXFwiNVxcXCIgaGVpZ2h0PVxcXCIxLjRcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBiZWxsID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMTcsMTUuNSBMMywxNS41IEMyLjk5LDE0LjYxIDMuNzksMTMuMzQgNC4xLDEyLjUxIEM0LjU4LDExLjMgNC43MiwxMC4zNSA1LjE5LDcuMDEgQzUuNTQsNC41MyA1Ljg5LDMuMiA3LjI4LDIuMTYgQzguMTMsMS41NiA5LjM3LDEuNSA5LjgxLDEuNSBMOS45NiwxLjUgQzkuOTYsMS41IDExLjYyLDEuNDEgMTIuNjcsMi4xNyBDMTQuMDgsMy4yIDE0LjQyLDQuNTQgMTQuNzcsNy4wMiBDMTUuMjYsMTAuMzUgMTUuNCwxMS4zMSAxNS44NywxMi41MiBDMTYuMiwxMy4zNCAxNy4wMSwxNC42MSAxNywxNS41IEwxNywxNS41IFpcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMTIuMzksMTYgQzEyLjM5LDE3LjM3IDExLjM1LDE4LjQzIDkuOTEsMTguNDMgQzguNDgsMTguNDMgNy40MiwxNy4zNyA3LjQyLDE2XFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgYm9sZCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTUsMTUuMyBDNS42NiwxNS4zIDUuOSwxNSA1LjksMTQuNTMgTDUuOSw1LjUgQzUuOSw0LjkyIDUuNTYsNC43IDUsNC43IEw1LDQgTDguOTUsNCBDMTIuNiw0IDEzLjcsNS4zNyAxMy43LDYuOSBDMTMuNyw3Ljg3IDEzLjE0LDkuMTcgMTAuODYsOS41OSBMMTAuODYsOS43IEMxMy4yNSw5Ljg2IDE0LjI5LDExLjI4IDE0LjMsMTIuNTQgQzE0LjMsMTQuNDcgMTIuOTQsMTYgOSwxNiBMNSwxNiBMNSwxNS4zIFogTTksOS4zIEMxMS4xOSw5LjMgMTEuOCw4LjUgMTEuODUsNyBDMTEuODUsNS42NSAxMS4zLDQuOCA5LDQuOCBMNy42Nyw0LjggTDcuNjcsOS4zIEw5LDkuMyBaIE05LjE4NSwxNS4yMiBDMTEuOTcsMTUgMTIuMzksMTQgMTIuNCwxMi41OCBDMTIuNCwxMS4xNSAxMS4zOSwxMCA5LDEwIEw3LjY3LDEwIEw3LjY3LDE1IEw5LjE4LDE1IFpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBib2x0ID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNNC43NCwyMCBMNy43MywxMiBMMywxMiBMMTUuNDMsMSBMMTIuMzIsOSBMMTcuMDIsOSBMNC43NCwyMCBMNC43NCwyMCBMNC43NCwyMCBaIE05LjE4LDExIEw3LjEsMTYuMzkgTDE0LjQ3LDEwIEwxMC44NiwxMCBMMTIuOTksNC42NyBMNS42MSwxMSBMOS4xOCwxMSBMOS4xOCwxMSBMOS4xOCwxMSBaXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgYm9va21hcmsgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgcG9pbnRzPVxcXCI1LjUgMS41IDE1LjUgMS41IDE1LjUgMTcuNSAxMC41IDEyLjUgNS41IDE3LjVcXFwiPjwvcG9seWdvbj48L3N2Zz5cIjtcbnZhciBjYWxlbmRhciA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTSAyLDMgMiwxNyAxOCwxNyAxOCwzIDIsMyBaIE0gMTcsMTYgMywxNiAzLDggMTcsOCAxNywxNiBaIE0gMTcsNyAzLDcgMyw0IDE3LDQgMTcsNyBaXFxcIj48L3BhdGg+IDxyZWN0IHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjNcXFwiIHg9XFxcIjZcXFwiIHk9XFxcIjJcXFwiPjwvcmVjdD4gPHJlY3Qgd2lkdGg9XFxcIjFcXFwiIGhlaWdodD1cXFwiM1xcXCIgeD1cXFwiMTNcXFwiIHk9XFxcIjJcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBjYW1lcmEgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTAuOFxcXCIgcj1cXFwiMy44XFxcIj48L2NpcmNsZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMSw0LjUgQzAuNyw0LjUgMC41LDQuNyAwLjUsNSBMMC41LDE3IEMwLjUsMTcuMyAwLjcsMTcuNSAxLDE3LjUgTDE5LDE3LjUgQzE5LjMsMTcuNSAxOS41LDE3LjMgMTkuNSwxNyBMMTkuNSw1IEMxOS41LDQuNyAxOS4zLDQuNSAxOSw0LjUgTDEzLjUsNC41IEwxMy41LDIuOSBDMTMuNSwyLjYgMTMuMywyLjUgMTMsMi41IEw3LDIuNSBDNi43LDIuNSA2LjUsMi42IDYuNSwyLjkgTDYuNSw0LjUgTDEsNC41IEwxLDQuNSBaXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgY2FydCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBjeD1cXFwiNy4zXFxcIiBjeT1cXFwiMTcuM1xcXCIgcj1cXFwiMS40XFxcIj48L2NpcmNsZT4gPGNpcmNsZSBjeD1cXFwiMTMuM1xcXCIgY3k9XFxcIjE3LjNcXFwiIHI9XFxcIjEuNFxcXCI+PC9jaXJjbGU+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHBvaW50cz1cXFwiMCAyIDMuMiA0IDUuMyAxMi41IDE2IDEyLjUgMTggNi41IDggNi41XFxcIj48L3BvbHlsaW5lPjwvc3ZnPlwiO1xudmFyIGNoZWNrID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgcG9pbnRzPVxcXCI0LDEwIDgsMTUgMTcsNFxcXCI+PC9wb2x5bGluZT48L3N2Zz5cIjtcbnZhciBjbG9jayA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiMTBcXFwiIGN5PVxcXCIxMFxcXCIgcj1cXFwiOVxcXCI+PC9jaXJjbGU+IDxyZWN0IHg9XFxcIjlcXFwiIHk9XFxcIjRcXFwiIHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjdcXFwiPjwvcmVjdD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgZD1cXFwiTTEzLjAxOCwxNC4xOTcgTDkuNDQ1LDEwLjYyNVxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGNsb3NlID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4wNlxcXCIgZD1cXFwiTTE2LDE2IEw0LDRcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMDZcXFwiIGQ9XFxcIk0xNiw0IEw0LDE2XFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgY29kZSA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjAxXFxcIiBwb2ludHM9XFxcIjEzLDQgMTksMTAgMTMsMTZcXFwiPjwvcG9seWxpbmU+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4wMVxcXCIgcG9pbnRzPVxcXCI3LDQgMSwxMCA3LDE2XFxcIj48L3BvbHlsaW5lPjwvc3ZnPlwiO1xudmFyIGNvZyA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGN4PVxcXCI5Ljk5N1xcXCIgY3k9XFxcIjEwXFxcIiByPVxcXCIzLjMxXFxcIj48L2NpcmNsZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMTguNDg4LDEyLjI4NSBMMTYuMjA1LDE2LjIzNyBDMTUuMzIyLDE1LjQ5NiAxNC4xODUsMTUuMjgxIDEzLjMwMywxNS43OTEgQzEyLjQyOCwxNi4yODkgMTIuMDQ3LDE3LjM3MyAxMi4yNDYsMTguNSBMNy43MzUsMTguNSBDNy45MzgsMTcuMzc0IDcuNTUzLDE2LjI5OSA2LjY4NCwxNS43OTEgQzUuODAxLDE1LjI3IDQuNjU1LDE1LjQ5MiAzLjc3MywxNi4yMzcgTDEuNSwxMi4yODUgQzIuNTczLDExLjg3MSAzLjMxNywxMC45OTkgMy4zMTcsOS45OTEgQzMuMzA1LDguOTggMi41NzMsOC4xMjEgMS41LDcuNzE2IEwzLjc2NSwzLjc4NCBDNC42NDUsNC41MTYgNS43OTQsNC43MzggNi42ODcsNC4yMzIgQzcuNTU1LDMuNzIyIDcuOTM5LDIuNjM3IDcuNzM1LDEuNSBMMTIuMjYzLDEuNSBDMTIuMDcyLDIuNjM3IDEyLjQ0MSwzLjcxIDEzLjMxNCw0LjIyIEMxNC4yMDYsNC43MyAxNS4zNDMsNC41MTYgMTYuMjI1LDMuNzk0IEwxOC40ODcsNy43MTQgQzE3LjQwNCw4LjExNyAxNi42NjEsOC45ODggMTYuNjcsMTAuMDA5IEMxNi42NzIsMTEuMDE4IDE3LjQxNSwxMS44OCAxOC40ODgsMTIuMjg1IEwxOC40ODgsMTIuMjg1IFpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBjb21tZW50ID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNNiwxOC43MSBMNiwxNCBMMSwxNCBMMSwxIEwxOSwxIEwxOSwxNCBMMTAuNzEsMTQgTDYsMTguNzEgTDYsMTguNzEgWiBNMiwxMyBMNywxMyBMNywxNi4yOSBMMTAuMjksMTMgTDE4LDEzIEwxOCwyIEwyLDIgTDIsMTMgTDIsMTMgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGNvbW1lbnRpbmcgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgcG9pbnRzPVxcXCIxLjUsMS41IDE4LjUsMS41IDE4LjUsMTMuNSAxMC41LDEzLjUgNi41LDE3LjUgNi41LDEzLjUgMS41LDEzLjVcXFwiPjwvcG9seWdvbj4gPGNpcmNsZSBjeD1cXFwiMTBcXFwiIGN5PVxcXCI4XFxcIiByPVxcXCIxXFxcIj48L2NpcmNsZT4gPGNpcmNsZSBjeD1cXFwiNlxcXCIgY3k9XFxcIjhcXFwiIHI9XFxcIjFcXFwiPjwvY2lyY2xlPiA8Y2lyY2xlIGN4PVxcXCIxNFxcXCIgY3k9XFxcIjhcXFwiIHI9XFxcIjFcXFwiPjwvY2lyY2xlPjwvc3ZnPlwiO1xudmFyIGNvbW1lbnRzID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjIgMC41IDE5LjUgMC41IDE5LjUgMTNcXFwiPjwvcG9seWxpbmU+IDxwYXRoIGQ9XFxcIk01LDE5LjcxIEw1LDE1IEwwLDE1IEwwLDIgTDE4LDIgTDE4LDE1IEw5LjcxLDE1IEw1LDE5LjcxIEw1LDE5LjcxIEw1LDE5LjcxIFogTTEsMTQgTDYsMTQgTDYsMTcuMjkgTDkuMjksMTQgTDE3LDE0IEwxNywzIEwxLDMgTDEsMTQgTDEsMTQgTDEsMTQgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGNvcHkgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxyZWN0IGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeD1cXFwiMy41XFxcIiB5PVxcXCIyLjVcXFwiIHdpZHRoPVxcXCIxMlxcXCIgaGVpZ2h0PVxcXCIxNlxcXCI+PC9yZWN0PiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjUgMC41IDE3LjUgMC41IDE3LjUgMTdcXFwiPjwvcG9seWxpbmU+PC9zdmc+XCI7XG52YXIgZGF0YWJhc2UgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxlbGxpcHNlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgY3g9XFxcIjEwXFxcIiBjeT1cXFwiNC42NFxcXCIgcng9XFxcIjcuNVxcXCIgcnk9XFxcIjMuMTRcXFwiPjwvZWxsaXBzZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMTcuNSw4LjExIEMxNy41LDkuODUgMTQuMTQsMTEuMjUgMTAsMTEuMjUgQzUuODYsMTEuMjUgMi41LDkuODQgMi41LDguMTFcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMTcuNSwxMS4yNSBDMTcuNSwxMi45OSAxNC4xNCwxNC4zOSAxMCwxNC4zOSBDNS44NiwxNC4zOSAyLjUsMTIuOTggMi41LDExLjI1XFxcIj48L3BhdGg+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgZD1cXFwiTTE3LjQ5LDQuNjQgTDE3LjUsMTQuMzYgQzE3LjUsMTYuMSAxNC4xNCwxNy41IDEwLDE3LjUgQzUuODYsMTcuNSAyLjUsMTYuMDkgMi41LDE0LjM2IEwyLjUsNC42NFxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGRlc2t0b3AgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxyZWN0IHg9XFxcIjhcXFwiIHk9XFxcIjE1XFxcIiB3aWR0aD1cXFwiMVxcXCIgaGVpZ2h0PVxcXCIyXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjExXFxcIiB5PVxcXCIxNVxcXCIgd2lkdGg9XFxcIjFcXFwiIGhlaWdodD1cXFwiMlxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCI1XFxcIiB5PVxcXCIxNlxcXCIgd2lkdGg9XFxcIjEwXFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIxLjVcXFwiIHk9XFxcIjMuNVxcXCIgd2lkdGg9XFxcIjE3XFxcIiBoZWlnaHQ9XFxcIjExXFxcIj48L3JlY3Q+PC9zdmc+XCI7XG52YXIgZG93bmxvYWQgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHBvaW50cz1cXFwiMTQsMTAgOS41LDE0LjUgNSwxMFxcXCI+PC9wb2x5bGluZT4gPHJlY3QgeD1cXFwiM1xcXCIgeT1cXFwiMTdcXFwiIHdpZHRoPVxcXCIxM1xcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjkuNVxcXCIgeTE9XFxcIjEzLjkxXFxcIiB4Mj1cXFwiOS41XFxcIiB5Mj1cXFwiM1xcXCI+PC9saW5lPjwvc3ZnPlwiO1xudmFyIGRyaWJiYmxlID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS40XFxcIiBkPVxcXCJNMS4zLDguOWMwLDAsNSwwLjEsOC42LTFjMS40LTAuNCwyLjYtMC45LDQtMS45IGMxLjQtMS4xLDIuNS0yLjUsMi41LTIuNVxcXCI+PC9wYXRoPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS40XFxcIiBkPVxcXCJNMy45LDE2LjZjMCwwLDEuNy0yLjgsMy41LTQuMiBjMS44LTEuMyw0LTIsNS43LTIuMkMxNiwxMCwxOSwxMC42LDE5LDEwLjZcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuNFxcXCIgZD1cXFwiTTYuOSwxLjZjMCwwLDMuMyw0LjYsNC4yLDYuOCBjMC40LDAuOSwxLjMsMy4xLDEuOSw1LjJjMC42LDIsMC45LDQuNCwwLjksNC40XFxcIj48L3BhdGg+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuNFxcXCIgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTBcXFwiIHI9XFxcIjlcXFwiPjwvY2lyY2xlPjwvc3ZnPlwiO1xudmFyIGV4cGFuZCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlnb24gcG9pbnRzPVxcXCIxMyAyIDE4IDIgMTggNyAxNyA3IDE3IDMgMTMgM1xcXCI+PC9wb2x5Z29uPiA8cG9seWdvbiBwb2ludHM9XFxcIjIgMTMgMyAxMyAzIDE3IDcgMTcgNyAxOCAyIDE4XFxcIj48L3BvbHlnb24+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiIGQ9XFxcIk0xMSw5IEwxNywzXFxcIj48L3BhdGg+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiIGQ9XFxcIk0zLDE3IEw5LDExXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgZmFjZWJvb2sgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xMSwxMGgyLjZsMC40LTNIMTFWNS4zYzAtMC45LDAuMi0xLjUsMS41LTEuNUgxNFYxLjFjLTAuMywwLTEtMC4xLTIuMS0wLjFDOS42LDEsOCwyLjQsOCw1djJINS41djNIOHY4aDNWMTB6XFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgZmlsZSA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIzLjVcXFwiIHk9XFxcIjEuNVxcXCIgd2lkdGg9XFxcIjEzXFxcIiBoZWlnaHQ9XFxcIjE3XFxcIj48L3JlY3Q+PC9zdmc+XCI7XG52YXIgZmxpY2tyID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8Y2lyY2xlIGN4PVxcXCI1LjVcXFwiIGN5PVxcXCI5LjVcXFwiIHI9XFxcIjMuNVxcXCI+PC9jaXJjbGU+IDxjaXJjbGUgY3g9XFxcIjE0LjVcXFwiIGN5PVxcXCI5LjVcXFwiIHI9XFxcIjMuNVxcXCI+PC9jaXJjbGU+PC9zdmc+XCI7XG52YXIgZm9sZGVyID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWdvbiBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHBvaW50cz1cXFwiOS41IDUuNSA4LjUgMy41IDEuNSAzLjUgMS41IDE2LjUgMTguNSAxNi41IDE4LjUgNS41XFxcIj48L3BvbHlnb24+PC9zdmc+XCI7XG52YXIgZm9yd2FyZCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTIuNDcsMTMuMTEgQzQuMDIsMTAuMDIgNi4yNyw3Ljg1IDkuMDQsNi42MSBDOS40OCw2LjQxIDEwLjI3LDYuMTMgMTEsNS45MSBMMTEsMiBMMTguODksOSBMMTEsMTYgTDExLDEyLjEzIEM5LjI1LDEyLjQ3IDcuNTgsMTMuMTkgNi4wMiwxNC4yNSBDMy4wMywxNi4yOCAxLjYzLDE4LjU0IDEuNjMsMTguNTQgQzEuNjMsMTguNTQgMS4zOCwxNS4yOCAyLjQ3LDEzLjExIEwyLjQ3LDEzLjExIFogTTUuMywxMy41MyBDNi45MiwxMi40IDkuMDQsMTEuNCAxMiwxMC45MiBMMTIsMTMuNjMgTDE3LjM2LDkgTDEyLDQuMjUgTDEyLDYuOCBDMTEuNzEsNi44NiAxMC44Niw3LjAyIDkuNjcsNy40OSBDNi43OSw4LjY1IDQuNTgsMTAuOTYgMy40OSwxMy4wOCBDMy4xOCwxMy43IDIuNjgsMTQuODcgMi40OSwxNiBDMy4yOCwxNS4wNSA0LjQsMTQuMTUgNS4zLDEzLjUzIEw1LjMsMTMuNTMgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGZvdXJzcXVhcmUgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xNS4yMywyIEMxNS45NiwyIDE2LjQsMi40MSAxNi41LDIuODYgQzE2LjU3LDMuMTUgMTYuNTYsMy40NCAxNi41MSwzLjczIEMxNi40Niw0LjA0IDE0Ljg2LDExLjcyIDE0Ljc1LDEyLjAzIEMxNC41NiwxMi41NiAxNC4xNiwxMi44MiAxMy42MSwxMi44MyBDMTMuMDMsMTIuODQgMTEuMDksMTIuNTEgMTAuNjksMTMgQzEwLjM4LDEzLjM4IDcuNzksMTYuMzkgNi44MSwxNy41MyBDNi42MSwxNy43NiA2LjQsMTcuOTYgNi4wOCwxNy45OSBDNS42OCwxOC4wNCA1LjI5LDE3Ljg3IDUuMTcsMTcuNDUgQzUuMTIsMTcuMjggNS4xLDE3LjA5IDUuMSwxNi45MSBDNS4xLDEyLjQgNC44Niw3LjgxIDUuMTEsMy4zMSBDNS4xNywyLjUgNS44MSwyLjEyIDYuNTMsMiBMMTUuMjMsMiBMMTUuMjMsMiBaIE05Ljc2LDExLjQyIEM5Ljk0LDExLjE5IDEwLjE3LDExLjEgMTAuNDUsMTEuMSBMMTIuODYsMTEuMSBDMTMuMTIsMTEuMSAxMy4zMSwxMC45NCAxMy4zNiwxMC42OSBDMTMuMzcsMTAuNjQgMTMuNjIsOS40MSAxMy43NCw4LjgzIEMxMy44MSw4LjUyIDEzLjUzLDguMjggMTMuMjcsOC4yOCBDMTIuMzUsOC4yOSAxMS40Miw4LjI4IDEwLjUsOC4yOCBDOS44NCw4LjI4IDkuODMsNy42OSA5LjgyLDcuMjEgQzkuOCw2Ljg1IDEwLjEzLDYuNTUgMTAuNSw2LjU1IEMxMS41OSw2LjU2IDEyLjY3LDYuNTUgMTMuNzYsNi41NSBDMTQuMDMsNi41NSAxNC4yMyw2LjQgMTQuMjgsNi4xNCBDMTQuMzQsNS44NyAxNC42Nyw0LjI5IDE0LjY3LDQuMjkgQzE0LjY3LDQuMjkgMTQuODIsMy43NCAxNC4xOSwzLjc0IEw3LjM0LDMuNzQgQzcsMy43NSA2Ljg0LDQuMDIgNi44NCw0LjMzIEM2Ljg0LDcuNTggNi44NSwxNC45NSA2Ljg1LDE0Ljk5IEM2Ljg3LDE1IDguODksMTIuNTEgOS43NiwxMS40MiBMOS43NiwxMS40MiBaXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgZnV0dXJlID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWxpbmUgcG9pbnRzPVxcXCIxOSAyIDE4IDIgMTggNiAxNCA2IDE0IDcgMTkgNyAxOSAyXFxcIj48L3BvbHlsaW5lPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMTgsNi41NDggQzE2LjcwOSwzLjI5IDEzLjM1NCwxIDkuNiwxIEM0LjYsMSAwLjYsNSAwLjYsMTAgQzAuNiwxNSA0LjYsMTkgOS42LDE5IEMxNC42LDE5IDE4LjYsMTUgMTguNiwxMFxcXCI+PC9wYXRoPiA8cmVjdCB4PVxcXCI5XFxcIiB5PVxcXCI0XFxcIiB3aWR0aD1cXFwiMVxcXCIgaGVpZ2h0PVxcXCI3XFxcIj48L3JlY3Q+IDxwYXRoIGQ9XFxcIk0xMy4wMTgsMTQuMTk3IEw5LjQ0NSwxMC42MjVcXFwiIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBnaXRodWIgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xMCwxIEM1LjAzLDEgMSw1LjAzIDEsMTAgQzEsMTMuOTggMy41OCwxNy4zNSA3LjE2LDE4LjU0IEM3LjYxLDE4LjYyIDcuNzcsMTguMzQgNy43NywxOC4xMSBDNy43NywxNy45IDcuNzYsMTcuMzMgNy43NiwxNi41OCBDNS4yNiwxNy4xMiA0LjczLDE1LjM3IDQuNzMsMTUuMzcgQzQuMzIsMTQuMzMgMy43MywxNC4wNSAzLjczLDE0LjA1IEMyLjkxLDEzLjUgMy43OSwxMy41IDMuNzksMTMuNSBDNC42OSwxMy41NiA1LjE3LDE0LjQzIDUuMTcsMTQuNDMgQzUuOTcsMTUuOCA3LjI4LDE1LjQxIDcuNzksMTUuMTggQzcuODcsMTQuNiA4LjEsMTQuMiA4LjM2LDEzLjk4IEM2LjM2LDEzLjc1IDQuMjYsMTIuOTggNC4yNiw5LjUzIEM0LjI2LDguNTUgNC42MSw3Ljc0IDUuMTksNy4xMSBDNS4xLDYuODggNC43OSw1Ljk3IDUuMjgsNC43MyBDNS4yOCw0LjczIDYuMDQsNC40OSA3Ljc1LDUuNjUgQzguNDcsNS40NSA5LjI0LDUuMzUgMTAsNS4zNSBDMTAuNzYsNS4zNSAxMS41Myw1LjQ1IDEyLjI1LDUuNjUgQzEzLjk3LDQuNDggMTQuNzIsNC43MyAxNC43Miw0LjczIEMxNS4yMSw1Ljk3IDE0LjksNi44OCAxNC44MSw3LjExIEMxNS4zOSw3Ljc0IDE1LjczLDguNTQgMTUuNzMsOS41MyBDMTUuNzMsMTIuOTkgMTMuNjMsMTMuNzUgMTEuNjIsMTMuOTcgQzExLjk0LDE0LjI1IDEyLjIzLDE0LjggMTIuMjMsMTUuNjQgQzEyLjIzLDE2Ljg0IDEyLjIyLDE3LjgxIDEyLjIyLDE4LjExIEMxMi4yMiwxOC4zNSAxMi4zOCwxOC42MyAxMi44NCwxOC41NCBDMTYuNDIsMTcuMzUgMTksMTMuOTggMTksMTAgQzE5LDUuMDMgMTQuOTcsMSAxMCwxIEwxMCwxIFpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBnaXR0ZXIgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxyZWN0IHg9XFxcIjMuNVxcXCIgeT1cXFwiMVxcXCIgd2lkdGg9XFxcIjEuNTMxXFxcIiBoZWlnaHQ9XFxcIjExLjQ3MVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCI3LjMyNFxcXCIgeT1cXFwiNC4wNTlcXFwiIHdpZHRoPVxcXCIxLjUyOVxcXCIgaGVpZ2h0PVxcXCIxNS4yOTRcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMTEuMTQ4XFxcIiB5PVxcXCI0LjA1OVxcXCIgd2lkdGg9XFxcIjEuNTI3XFxcIiBoZWlnaHQ9XFxcIjE1LjI5NFxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxNC45NzFcXFwiIHk9XFxcIjQuMDU5XFxcIiB3aWR0aD1cXFwiMS41MjlcXFwiIGhlaWdodD1cXFwiOC40MTJcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBnb29nbGUgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xNy44Niw5LjA5IEMxOC40NiwxMi4xMiAxNy4xNCwxNi4wNSAxMy44MSwxNy41NiBDOS40NSwxOS41MyA0LjEzLDE3LjY4IDIuNDcsMTIuODcgQzAuNjgsNy42OCA0LjIyLDIuNDIgOS41LDIuMDMgQzExLjU3LDEuODggMTMuNDIsMi4zNyAxNS4wNSwzLjY1IEMxNS4yMiwzLjc4IDE1LjM3LDMuOTMgMTUuNjEsNC4xNCBDMTQuOSw0LjgxIDE0LjIzLDUuNDUgMTMuNSw2LjE0IEMxMi4yNyw1LjA4IDEwLjg0LDQuNzIgOS4yOCw0Ljk4IEM4LjEyLDUuMTcgNy4xNiw1Ljc2IDYuMzcsNi42MyBDNC44OCw4LjI3IDQuNjIsMTAuODYgNS43NiwxMi44MiBDNi45NSwxNC44NyA5LjE3LDE1LjggMTEuNTcsMTUuMjUgQzEzLjI3LDE0Ljg3IDE0Ljc2LDEzLjMzIDE0Ljg5LDExLjc1IEwxMC41MSwxMS43NSBMMTAuNTEsOS4wOSBMMTcuODYsOS4wOSBMMTcuODYsOS4wOSBaXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgZ3JpZCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgeD1cXFwiMlxcXCIgeT1cXFwiMlxcXCIgd2lkdGg9XFxcIjNcXFwiIGhlaWdodD1cXFwiM1xcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCI4XFxcIiB5PVxcXCIyXFxcIiB3aWR0aD1cXFwiM1xcXCIgaGVpZ2h0PVxcXCIzXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjE0XFxcIiB5PVxcXCIyXFxcIiB3aWR0aD1cXFwiM1xcXCIgaGVpZ2h0PVxcXCIzXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjJcXFwiIHk9XFxcIjhcXFwiIHdpZHRoPVxcXCIzXFxcIiBoZWlnaHQ9XFxcIjNcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiOFxcXCIgeT1cXFwiOFxcXCIgd2lkdGg9XFxcIjNcXFwiIGhlaWdodD1cXFwiM1xcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxNFxcXCIgeT1cXFwiOFxcXCIgd2lkdGg9XFxcIjNcXFwiIGhlaWdodD1cXFwiM1xcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIyXFxcIiB5PVxcXCIxNFxcXCIgd2lkdGg9XFxcIjNcXFwiIGhlaWdodD1cXFwiM1xcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCI4XFxcIiB5PVxcXCIxNFxcXCIgd2lkdGg9XFxcIjNcXFwiIGhlaWdodD1cXFwiM1xcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxNFxcXCIgeT1cXFwiMTRcXFwiIHdpZHRoPVxcXCIzXFxcIiBoZWlnaHQ9XFxcIjNcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBoYXBweSA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBjeD1cXFwiMTNcXFwiIGN5PVxcXCI3XFxcIiByPVxcXCIxXFxcIj48L2NpcmNsZT4gPGNpcmNsZSBjeD1cXFwiN1xcXCIgY3k9XFxcIjdcXFwiIHI9XFxcIjFcXFwiPjwvY2lyY2xlPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTBcXFwiIHI9XFxcIjguNVxcXCI+PC9jaXJjbGU+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgZD1cXFwiTTE0LjYsMTEuNCBDMTMuOSwxMy4zIDEyLjEsMTQuNSAxMCwxNC41IEM3LjksMTQuNSA2LjEsMTMuMyA1LjQsMTEuNFxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGhhc2h0YWcgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xNS40MzEsOCBMMTUuNjYxLDcgTDEyLjkxMSw3IEwxMy44MzEsMyBMMTIuOTAxLDMgTDExLjk4LDcgTDkuMjksNyBMMTAuMjEsMyBMOS4yODEsMyBMOC4zNjEsNyBMNS4yMyw3IEw1LDggTDguMTMsOCBMNy4yMSwxMiBMNC4yMywxMiBMNCwxMyBMNi45OCwxMyBMNi4wNjEsMTcgTDYuOTkxLDE3IEw3LjkxMSwxMyBMMTAuNjAxLDEzIEw5LjY4MSwxNyBMMTAuNjExLDE3IEwxMS41MzEsMTMgTDE0LjQzMSwxMyBMMTQuNjYxLDEyIEwxMS43NiwxMiBMMTIuNjgxLDggTDE1LjQzMSw4IFogTTEwLjgzMSwxMiBMOC4xNDEsMTIgTDkuMDYxLDggTDExLjc1LDggTDEwLjgzMSwxMiBaXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgaGVhcnQgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjAzXFxcIiBkPVxcXCJNMTAsNCBDMTAsNCA4LjEsMiA1Ljc0LDIgQzMuMzgsMiAxLDMuNTUgMSw2LjczIEMxLDguODQgMi42NywxMC40NCAyLjY3LDEwLjQ0IEwxMCwxOCBMMTcuMzMsMTAuNDQgQzE3LjMzLDEwLjQ0IDE5LDguODQgMTksNi43MyBDMTksMy41NSAxNi42MiwyIDE0LjI2LDIgQzExLjksMiAxMCw0IDEwLDQgTDEwLDQgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGhpc3RvcnkgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5bGluZSBmaWxsPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjEgMiAyIDIgMiA2IDYgNiA2IDcgMSA3IDEgMlxcXCI+PC9wb2x5bGluZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgZD1cXFwiTTIuMSw2LjU0OCBDMy4zOTEsMy4yOSA2Ljc0NiwxIDEwLjUsMSBDMTUuNSwxIDE5LjUsNSAxOS41LDEwIEMxOS41LDE1IDE1LjUsMTkgMTAuNSwxOSBDNS41LDE5IDEuNSwxNSAxLjUsMTBcXFwiPjwvcGF0aD4gPHJlY3QgeD1cXFwiOVxcXCIgeT1cXFwiNFxcXCIgd2lkdGg9XFxcIjFcXFwiIGhlaWdodD1cXFwiN1xcXCI+PC9yZWN0PiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMTMuMDE4LDE0LjE5NyBMOS40NDUsMTAuNjI1XFxcIiBpZD1cXFwiU2hhcGVcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBob21lID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWdvbiBwb2ludHM9XFxcIjE4LjY1IDExLjM1IDEwIDIuNzEgMS4zNSAxMS4zNSAwLjY1IDEwLjY1IDEwIDEuMjkgMTkuMzUgMTAuNjVcXFwiPjwvcG9seWdvbj4gPHBvbHlnb24gcG9pbnRzPVxcXCIxNSA0IDE4IDQgMTggNyAxNyA3IDE3IDUgMTUgNVxcXCI+PC9wb2x5Z29uPiA8cG9seWdvbiBwb2ludHM9XFxcIjMgMTEgNCAxMSA0IDE4IDcgMTggNyAxMiAxMiAxMiAxMiAxOCAxNiAxOCAxNiAxMSAxNyAxMSAxNyAxOSAxMSAxOSAxMSAxMyA4IDEzIDggMTkgMyAxOVxcXCI+PC9wb2x5Z29uPjwvc3ZnPlwiO1xudmFyIGltYWdlID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8Y2lyY2xlIGN4PVxcXCIxNi4xXFxcIiBjeT1cXFwiNi4xXFxcIiByPVxcXCIxLjFcXFwiPjwvY2lyY2xlPiA8cmVjdCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHg9XFxcIjAuNVxcXCIgeT1cXFwiMi41XFxcIiB3aWR0aD1cXFwiMTlcXFwiIGhlaWdodD1cXFwiMTVcXFwiPjwvcmVjdD4gPHBvbHlsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjAxXFxcIiBwb2ludHM9XFxcIjQsMTMgOCw5IDEzLDE0XFxcIj48L3BvbHlsaW5lPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMDFcXFwiIHBvaW50cz1cXFwiMTEsMTIgMTIuNSwxMC41IDE2LDE0XFxcIj48L3BvbHlsaW5lPjwvc3ZnPlwiO1xudmFyIGluZm8gPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xMi4xMywxMS41OSBDMTEuOTcsMTIuODQgMTAuMzUsMTQuMTIgOS4xLDE0LjE2IEM2LjE3LDE0LjIgOS44OSw5LjQ2IDguNzQsOC4zNyBDOS4zLDguMTYgMTAuNjIsNy44MyAxMC42Miw4LjgxIEMxMC42Miw5LjYzIDEwLjEyLDEwLjU1IDkuODgsMTEuMzIgQzguNjYsMTUuMTYgMTIuMTMsMTEuMTUgMTIuMTQsMTEuMTggQzEyLjE2LDExLjIxIDEyLjE2LDExLjM1IDEyLjEzLDExLjU5IEMxMi4wOCwxMS45NSAxMi4xNiwxMS4zNSAxMi4xMywxMS41OSBMMTIuMTMsMTEuNTkgWiBNMTEuNTYsNS42NyBDMTEuNTYsNi42NyA5LjM2LDcuMTUgOS4zNiw2LjAzIEM5LjM2LDUgMTEuNTYsNC41NCAxMS41Niw1LjY3IEwxMS41Niw1LjY3IFpcXFwiPjwvcGF0aD4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiMTBcXFwiIGN5PVxcXCIxMFxcXCIgcj1cXFwiOVxcXCI+PC9jaXJjbGU+PC9zdmc+XCI7XG52YXIgaW5zdGFncmFtID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTMuNTUsMUg2LjQ2QzMuNDUsMSwxLDMuNDQsMSw2LjQ0djcuMTJjMCwzLDIuNDUsNS40NCw1LjQ2LDUuNDRoNy4wOGMzLjAyLDAsNS40Ni0yLjQ0LDUuNDYtNS40NFY2LjQ0IEMxOS4wMSwzLjQ0LDE2LjU2LDEsMTMuNTUsMXogTTE3LjUsMTRjMCwxLjkzLTEuNTcsMy41LTMuNSwzLjVINmMtMS45MywwLTMuNS0xLjU3LTMuNS0zLjVWNmMwLTEuOTMsMS41Ny0zLjUsMy41LTMuNWg4IGMxLjkzLDAsMy41LDEuNTcsMy41LDMuNVYxNHpcXFwiPjwvcGF0aD4gPGNpcmNsZSBjeD1cXFwiMTQuODdcXFwiIGN5PVxcXCI1LjI2XFxcIiByPVxcXCIxLjA5XFxcIj48L2NpcmNsZT4gPHBhdGggZD1cXFwiTTEwLjAzLDUuNDVjLTIuNTUsMC00LjYzLDIuMDYtNC42Myw0LjZjMCwyLjU1LDIuMDcsNC42MSw0LjYzLDQuNjFjMi41NiwwLDQuNjMtMi4wNjEsNC42My00LjYxIEMxNC42NSw3LjUxLDEyLjU4LDUuNDUsMTAuMDMsNS40NUwxMC4wMyw1LjQ1TDEwLjAzLDUuNDV6IE0xMC4wOCwxM2MtMS42NiwwLTMtMS4zNC0zLTIuOTljMC0xLjY1LDEuMzQtMi45OSwzLTIuOTlzMywxLjM0LDMsMi45OSBDMTMuMDgsMTEuNjYsMTEuNzQsMTMsMTAuMDgsMTNMMTAuMDgsMTNMMTAuMDgsMTN6XFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgaXRhbGljID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTIuNjMsNS40OCBMMTAuMTUsMTQuNTIgQzEwLDE1LjA4IDEwLjM3LDE1LjI1IDExLjkyLDE1LjMgTDExLjcyLDE2IEw2LDE2IEw2LjIsMTUuMzEgQzcuNzgsMTUuMjYgOC4xOSwxNS4wOSA4LjM0LDE0LjUzIEwxMC44Miw1LjQ5IEMxMC45Nyw0LjkyIDEwLjYzLDQuNzYgOS4wOSw0LjcxIEw5LjI4LDQgTDE1LDQgTDE0LjgxLDQuNjkgQzEzLjIzLDQuNzUgMTIuNzgsNC45MSAxMi42Myw1LjQ4IEwxMi42Myw1LjQ4IFpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBqb29tbGEgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk03LjgsMTMuNGwxLjctMS43TDUuOSw4Yy0wLjYtMC41LTAuNi0xLjUsMC0yYzAuNi0wLjYsMS40LTAuNiwyLDBsMS43LTEuN2MtMS0xLTIuMy0xLjMtMy42LTFDNS44LDIuMiw0LjgsMS40LDMuNywxLjQgYy0xLjMsMC0yLjMsMS0yLjMsMi4zYzAsMS4xLDAuOCwyLDEuOCwyLjNjLTAuNCwxLjMtMC4xLDIuOCwxLDMuOEw3LjgsMTMuNEw3LjgsMTMuNHpcXFwiPjwvcGF0aD4gPHBhdGggZD1cXFwiTTEwLjIsNC4zYzEtMSwyLjUtMS40LDMuOC0xYzAuMi0xLjEsMS4xLTIsMi4zLTJjMS4zLDAsMi4zLDEsMi4zLDIuM2MwLDEuMi0wLjksMi4yLTIsMi4zYzAuNCwxLjMsMCwyLjgtMSwzLjhMMTMuOSw4IGMwLjYtMC41LDAuNi0xLjUsMC0yYy0wLjUtMC42LTEuNS0wLjYtMiwwTDguMiw5LjdMNi41LDhcXFwiPjwvcGF0aD4gPHBhdGggZD1cXFwiTTE0LjEsMTYuOGMtMS4zLDAuNC0yLjgsMC4xLTMuOC0xbDEuNy0xLjdjMC42LDAuNiwxLjUsMC42LDIsMGMwLjUtMC42LDAuNi0xLjUsMC0ybC0zLjctMy43TDEyLDYuN2wzLjcsMy43IGMxLDEsMS4zLDIuNCwxLDMuNmMxLjEsMC4yLDIsMS4xLDIsMi4zYzAsMS4zLTEsMi4zLTIuMywyLjNDMTUuMiwxOC42LDE0LjMsMTcuOCwxNC4xLDE2LjhcXFwiPjwvcGF0aD4gPHBhdGggZD1cXFwiTTEzLjIsMTIuMmwtMy43LDMuN2MtMSwxLTIuNCwxLjMtMy42LDFjLTAuMiwxLTEuMiwxLjgtMi4yLDEuOGMtMS4zLDAtMi4zLTEtMi4zLTIuM2MwLTEuMSwwLjgtMiwxLjgtMi4zIGMtMC4zLTEuMywwLTIuNywxLTMuN2wxLjcsMS43Yy0wLjYsMC42LTAuNiwxLjUsMCwyYzAuNiwwLjYsMS40LDAuNiwyLDBsMy43LTMuN1xcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGxhcHRvcCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgeT1cXFwiMTZcXFwiIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxyZWN0IGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeD1cXFwiMi41XFxcIiB5PVxcXCI0LjVcXFwiIHdpZHRoPVxcXCIxNVxcXCIgaGVpZ2h0PVxcXCIxMFxcXCI+PC9yZWN0Pjwvc3ZnPlwiO1xudmFyIGxpZmVzYXZlciA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTEwLDAuNSBDNC43NiwwLjUgMC41LDQuNzYgMC41LDEwIEMwLjUsMTUuMjQgNC43NiwxOS41IDEwLDE5LjUgQzE1LjI0LDE5LjUgMTkuNSwxNS4yNCAxOS41LDEwIEMxOS41LDQuNzYgMTUuMjQsMC41IDEwLDAuNSBMMTAsMC41IFogTTEwLDEuNSBDMTEuNDksMS41IDEyLjg5LDEuODggMTQuMTEsMi41NiBMMTEuODUsNC44MiBDMTEuMjcsNC42MSAxMC42NSw0LjUgMTAsNC41IEM5LjIxLDQuNSA4LjQ3LDQuNjcgNy43OSw0Ljk2IEw1LjU4LDIuNzUgQzYuODcsMS45NSA4LjM4LDEuNSAxMCwxLjUgTDEwLDEuNSBaIE00Ljk2LDcuOCBDNC42Nyw4LjQ4IDQuNSw5LjIxIDQuNSwxMCBDNC41LDEwLjY1IDQuNjEsMTEuMjcgNC44MywxMS44NSBMMi41NiwxNC4xMSBDMS44OCwxMi44OSAxLjUsMTEuNDkgMS41LDEwIEMxLjUsOC4zOCAxLjk1LDYuODcgMi43NSw1LjU4IEw0Ljk2LDcuNzkgTDQuOTYsNy44IEw0Ljk2LDcuOCBaIE0xMCwxOC41IEM4LjI1LDE4LjUgNi42MiwxNy45NyA1LjI3LDE3LjA2IEw3LjQ2LDE0Ljg3IEM4LjIyLDE1LjI3IDkuMDgsMTUuNSAxMCwxNS41IEMxMC43OSwxNS41IDExLjUzLDE1LjMzIDEyLjIxLDE1LjA0IEwxNC40MiwxNy4yNSBDMTMuMTMsMTguMDUgMTEuNjIsMTguNSAxMCwxOC41IEwxMCwxOC41IFogTTEwLDE0LjUgQzcuNTIsMTQuNSA1LjUsMTIuNDggNS41LDEwIEM1LjUsNy41MiA3LjUyLDUuNSAxMCw1LjUgQzEyLjQ4LDUuNSAxNC41LDcuNTIgMTQuNSwxMCBDMTQuNSwxMi40OCAxMi40OCwxNC41IDEwLDE0LjUgTDEwLDE0LjUgWiBNMTUuMDQsMTIuMjEgQzE1LjMzLDExLjUzIDE1LjUsMTAuNzkgMTUuNSwxMCBDMTUuNSw5LjA4IDE1LjI3LDguMjIgMTQuODcsNy40NiBMMTcuMDYsNS4yNyBDMTcuOTcsNi42MiAxOC41LDguMjUgMTguNSwxMCBDMTguNSwxMS42MiAxOC4wNSwxMy4xMyAxNy4yNSwxNC40MiBMMTUuMDQsMTIuMjEgTDE1LjA0LDEyLjIxIFpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBsaW5rID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMTAuNjI1LDEyLjM3NSBMNy41MjUsMTUuNDc1IEM2LjgyNSwxNi4xNzUgNS45MjUsMTYuMTc1IDUuMjI1LDE1LjQ3NSBMNC41MjUsMTQuNzc1IEMzLjgyNSwxNC4wNzQgMy44MjUsMTMuMTc1IDQuNTI1LDEyLjQ3NSBMNy42MjUsOS4zNzVcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgZD1cXFwiTTkuMzI1LDcuMzc1IEwxMi40MjUsNC4yNzUgQzEzLjEyNSwzLjU3NSAxNC4wMjUsMy41NzUgMTQuNzI0LDQuMjc1IEwxNS40MjUsNC45NzUgQzE2LjEyNSw1LjY3NSAxNi4xMjUsNi41NzUgMTUuNDI1LDcuMjc1IEwxMi4zMjUsMTAuMzc1XFxcIj48L3BhdGg+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiIGQ9XFxcIk03LjkyNSwxMS44NzUgTDExLjkyNSw3Ljk3NVxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGxpbmtlZGluID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNNS43NywxNy44OSBMNS43Nyw3LjE3IEwyLjIxLDcuMTcgTDIuMjEsMTcuODkgTDUuNzcsMTcuODkgTDUuNzcsMTcuODkgWiBNMy45OSw1LjcxIEM1LjIzLDUuNzEgNi4wMSw0Ljg5IDYuMDEsMy44NiBDNS45OSwyLjggNS4yNCwyIDQuMDIsMiBDMi44LDIgMiwyLjggMiwzLjg1IEMyLDQuODggMi43Nyw1LjcgMy45Nyw1LjcgTDMuOTksNS43IEwzLjk5LDUuNzEgTDMuOTksNS43MSBaXFxcIj48L3BhdGg+IDxwYXRoIGQ9XFxcIk03Ljc1LDE3Ljg5IEwxMS4zMSwxNy44OSBMMTEuMzEsMTEuOSBDMTEuMzEsMTEuNTggMTEuMzMsMTEuMjYgMTEuNDMsMTEuMDMgQzExLjY5LDEwLjM5IDEyLjI3LDkuNzMgMTMuMjYsOS43MyBDMTQuNTUsOS43MyAxNS4wNiwxMC43MSAxNS4wNiwxMi4xNSBMMTUuMDYsMTcuODkgTDE4LjYyLDE3Ljg5IEwxOC42MiwxMS43NCBDMTguNjIsOC40NSAxNi44Niw2LjkyIDE0LjUyLDYuOTIgQzEyLjYsNi45MiAxMS43NSw3Ljk5IDExLjI4LDguNzMgTDExLjMsOC43MyBMMTEuMyw3LjE3IEw3Ljc1LDcuMTcgQzcuNzksOC4xNyA3Ljc1LDE3Ljg5IDcuNzUsMTcuODkgTDcuNzUsMTcuODkgTDcuNzUsMTcuODkgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIGxpc3QgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxyZWN0IHg9XFxcIjZcXFwiIHk9XFxcIjRcXFwiIHdpZHRoPVxcXCIxMlxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjZcXFwiIHk9XFxcIjlcXFwiIHdpZHRoPVxcXCIxMlxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjZcXFwiIHk9XFxcIjE0XFxcIiB3aWR0aD1cXFwiMTJcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIyXFxcIiB5PVxcXCI0XFxcIiB3aWR0aD1cXFwiMlxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjJcXFwiIHk9XFxcIjlcXFwiIHdpZHRoPVxcXCIyXFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMlxcXCIgeT1cXFwiMTRcXFwiIHdpZHRoPVxcXCIyXFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBsb2NhdGlvbiA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMDFcXFwiIGQ9XFxcIk0xMCwwLjUgQzYuNDEsMC41IDMuNSwzLjM5IDMuNSw2Ljk4IEMzLjUsMTEuODMgMTAsMTkgMTAsMTkgQzEwLDE5IDE2LjUsMTEuODMgMTYuNSw2Ljk4IEMxNi41LDMuMzkgMTMuNTksMC41IDEwLDAuNSBMMTAsMC41IFpcXFwiPjwvcGF0aD4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGN4PVxcXCIxMFxcXCIgY3k9XFxcIjYuOFxcXCIgcj1cXFwiMi4zXFxcIj48L2NpcmNsZT48L3N2Zz5cIjtcbnZhciBsb2NrID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cmVjdCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGhlaWdodD1cXFwiMTBcXFwiIHdpZHRoPVxcXCIxM1xcXCIgeT1cXFwiOC41XFxcIiB4PVxcXCIzLjVcXFwiPjwvcmVjdD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNNi41LDggTDYuNSw0Ljg4IEM2LjUsMy4wMSA4LjA3LDEuNSAxMCwxLjUgQzExLjkzLDEuNSAxMy41LDMuMDEgMTMuNSw0Ljg4IEwxMy41LDhcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBtYWlsID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjEuNCw2LjUgMTAsMTEgMTguNiw2LjVcXFwiPjwvcG9seWxpbmU+IDxwYXRoIGQ9XFxcIk0gMSw0IDEsMTYgMTksMTYgMTksNCAxLDQgWiBNIDE4LDE1IDIsMTUgMiw1IDE4LDUgMTgsMTUgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIG1lbnUgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxyZWN0IHg9XFxcIjJcXFwiIHk9XFxcIjRcXFwiIHdpZHRoPVxcXCIxNlxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjJcXFwiIHk9XFxcIjlcXFwiIHdpZHRoPVxcXCIxNlxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjJcXFwiIHk9XFxcIjE0XFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0Pjwvc3ZnPlwiO1xudmFyIG1pbnVzID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cmVjdCBoZWlnaHQ9XFxcIjFcXFwiIHdpZHRoPVxcXCIxOFxcXCIgeT1cXFwiOVxcXCIgeD1cXFwiMVxcXCI+PC9yZWN0Pjwvc3ZnPlwiO1xudmFyIG1vcmUgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxjaXJjbGUgY3g9XFxcIjNcXFwiIGN5PVxcXCIxMFxcXCIgcj1cXFwiMlxcXCI+PC9jaXJjbGU+IDxjaXJjbGUgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTBcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPiA8Y2lyY2xlIGN4PVxcXCIxN1xcXCIgY3k9XFxcIjEwXFxcIiByPVxcXCIyXFxcIj48L2NpcmNsZT48L3N2Zz5cIjtcbnZhciBtb3ZlID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWdvbiBwb2ludHM9XFxcIjQsNSAxLDUgMSw5IDIsOSAyLDYgNCw2IFxcXCI+PC9wb2x5Z29uPiA8cG9seWdvbiBwb2ludHM9XFxcIjEsMTYgMiwxNiAyLDE4IDQsMTggNCwxOSAxLDE5IFxcXCI+PC9wb2x5Z29uPiA8cG9seWdvbiBwb2ludHM9XFxcIjE0LDE2IDE0LDE5IDExLDE5IDExLDE4IDEzLDE4IDEzLDE2IFxcXCI+PC9wb2x5Z29uPiA8cmVjdCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHg9XFxcIjUuNVxcXCIgeT1cXFwiMS41XFxcIiB3aWR0aD1cXFwiMTNcXFwiIGhlaWdodD1cXFwiMTNcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMVxcXCIgeT1cXFwiMTFcXFwiIHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjNcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiNlxcXCIgeT1cXFwiMThcXFwiIHdpZHRoPVxcXCIzXFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBudXQgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgcG9pbnRzPVxcXCIyLjUsNS43IDEwLDEuMyAxNy41LDUuNyAxNy41LDE0LjMgMTAsMTguNyAyLjUsMTQuM1xcXCI+PC9wb2x5Z29uPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTBcXFwiIHI9XFxcIjMuNVxcXCI+PC9jaXJjbGU+PC9zdmc+XCI7XG52YXIgcGFnZWtpdCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlnb24gcG9pbnRzPVxcXCIzLDEgMTcsMSAxNywxNiAxMCwxNiAxMCwxMyAxNCwxMyAxNCw0IDYsNCA2LDE2IDEwLDE2IDEwLDE5IDMsMTkgXFxcIj48L3BvbHlnb24+PC9zdmc+XCI7XG52YXIgcGVuY2lsID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGQ9XFxcIk0xNy4yNSw2LjAxIEw3LjEyLDE2LjEgTDMuODIsMTcuMiBMNS4wMiwxMy45IEwxNS4xMiwzLjg4IEMxNS43MSwzLjI5IDE2LjY2LDMuMjkgMTcuMjUsMy44OCBDMTcuODMsNC40NyAxNy44Myw1LjQyIDE3LjI1LDYuMDEgTDE3LjI1LDYuMDEgWlxcXCI+PC9wYXRoPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGQ9XFxcIk0xNS45OCw3LjI2OCBMMTMuODUxLDUuMTQ4XFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgcGhvbmUgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgZD1cXFwiTTE1LjUsMTcgQzE1LjUsMTcuOCAxNC44LDE4LjUgMTQsMTguNSBMNywxOC41IEM2LjIsMTguNSA1LjUsMTcuOCA1LjUsMTcgTDUuNSwzIEM1LjUsMi4yIDYuMiwxLjUgNywxLjUgTDE0LDEuNSBDMTQuOCwxLjUgMTUuNSwyLjIgMTUuNSwzIEwxNS41LDE3IEwxNS41LDE3IEwxNS41LDE3IFpcXFwiPjwvcGF0aD4gPGNpcmNsZSBjeD1cXFwiMTAuNVxcXCIgY3k9XFxcIjE2LjVcXFwiIHI9XFxcIjAuOFxcXCI+PC9jaXJjbGU+PC9zdmc+XCI7XG52YXIgcGludGVyZXN0ID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTAuMjEsMSBDNS41LDEgMyw0LjE2IDMsNy42MSBDMyw5LjIxIDMuODUsMTEuMiA1LjIyLDExLjg0IEM1LjQzLDExLjk0IDUuNTQsMTEuODkgNS41OCwxMS42OSBDNS42MiwxMS41NCA1LjgsMTAuOCA1Ljg4LDEwLjQ1IEM1LjkxLDEwLjM0IDUuODksMTAuMjQgNS44LDEwLjE0IEM1LjM2LDkuNTkgNSw4LjU4IDUsNy42NSBDNSw1LjI0IDYuODIsMi45MSA5LjkzLDIuOTEgQzEyLjYxLDIuOTEgMTQuNDksNC43NCAxNC40OSw3LjM1IEMxNC40OSwxMC4zIDEzLDEyLjM1IDExLjA2LDEyLjM1IEM5Ljk5LDEyLjM1IDkuMTksMTEuNDcgOS40NCwxMC4zOCBDOS43NSw5LjA4IDEwLjM1LDcuNjggMTAuMzUsNi43NSBDMTAuMzUsNS45MSA5LjksNS4yMSA4Ljk3LDUuMjEgQzcuODcsNS4yMSA2Ljk5LDYuMzQgNi45OSw3Ljg2IEM2Ljk5LDguODMgNy4zMiw5LjQ4IDcuMzIsOS40OCBDNy4zMiw5LjQ4IDYuMjQsMTQuMDYgNi4wNCwxNC45MSBDNS43LDE2LjM1IDYuMDgsMTguNyA2LjEyLDE4LjkgQzYuMTQsMTkuMDEgNi4yNiwxOS4wNSA2LjMzLDE4Ljk1IEM2LjQ0LDE4LjgxIDcuNzQsMTYuODUgOC4xMSwxNS40NCBDOC4yNCwxNC45MyA4Ljc5LDEyLjg0IDguNzksMTIuODQgQzkuMTUsMTMuNTIgMTAuMTksMTQuMDkgMTEuMjksMTQuMDkgQzE0LjU4LDE0LjA5IDE2Ljk2LDExLjA2IDE2Ljk2LDcuMyBDMTYuOTQsMy43IDE0LDEgMTAuMjEsMVxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHBsYXkgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgcG9pbnRzPVxcXCI2LjUsNSAxNC41LDEwIDYuNSwxNVxcXCI+PC9wb2x5Z29uPjwvc3ZnPlwiO1xudmFyIHBsdXMgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxyZWN0IHg9XFxcIjlcXFwiIHk9XFxcIjFcXFwiIHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjE3XFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjFcXFwiIHk9XFxcIjlcXFwiIHdpZHRoPVxcXCIxN1xcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+PC9zdmc+XCI7XG52YXIgcHVsbCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlnb24gcG9pbnRzPVxcXCI2Ljg1LDggOS41LDEwLjYgMTIuMTUsOCAxMi44NSw4LjcgOS41LDEyIDYuMTUsOC43XFxcIj48L3BvbHlnb24+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjkuNVxcXCIgeTE9XFxcIjExXFxcIiB4Mj1cXFwiOS41XFxcIiB5Mj1cXFwiMlxcXCI+PC9saW5lPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjYsNS41IDMuNSw1LjUgMy41LDE4LjUgMTUuNSwxOC41IDE1LjUsNS41IDEzLDUuNVxcXCI+PC9wb2x5bGluZT48L3N2Zz5cIjtcbnZhciBwdXNoID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWdvbiBwb2ludHM9XFxcIjEyLjE1LDQgOS41LDEuNCA2Ljg1LDQgNi4xNSwzLjMgOS41LDAgMTIuODUsMy4zXFxcIj48L3BvbHlnb24+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjkuNVxcXCIgeTE9XFxcIjEwXFxcIiB4Mj1cXFwiOS41XFxcIiB5Mj1cXFwiMVxcXCI+PC9saW5lPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjYgNS41IDMuNSA1LjUgMy41IDE4LjUgMTUuNSAxOC41IDE1LjUgNS41IDEzIDUuNVxcXCI+PC9wb2x5bGluZT48L3N2Zz5cIjtcbnZhciBxdWVzdGlvbiA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiMTBcXFwiIGN5PVxcXCIxMFxcXCIgcj1cXFwiOVxcXCI+PC9jaXJjbGU+IDxjaXJjbGUgY3g9XFxcIjEwLjQ0XFxcIiBjeT1cXFwiMTQuNDJcXFwiIHI9XFxcIjEuMDVcXFwiPjwvY2lyY2xlPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4yXFxcIiBkPVxcXCJNOC4xNyw3Ljc5IEM4LjE3LDQuNzUgMTIuNzIsNC43MyAxMi43Miw3LjcyIEMxMi43Miw4LjY3IDExLjgxLDkuMTUgMTEuMjMsOS43NSBDMTAuNzUsMTAuMjQgMTAuNTEsMTAuNzMgMTAuNDUsMTEuNCBDMTAuNDQsMTEuNTMgMTAuNDMsMTEuNjQgMTAuNDMsMTEuNzVcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciByZWNlaXZlciA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMDFcXFwiIGQ9XFxcIk02LjE4OSwxMy42MTFDOC4xMzQsMTUuNTI1IDExLjA5NywxOC4yMzkgMTMuODY3LDE4LjI1N0MxNi40NywxOC4yNzUgMTguMiwxNi4yNDEgMTguMiwxNi4yNDFMMTQuNTA5LDEyLjU1MUwxMS41MzksMTMuNjM5TDYuMTg5LDguMjlMNy4zMTMsNS4zNTVMMy43NiwxLjhDMy43NiwxLjggMS43MzIsMy41MzcgMS43LDYuMDkyQzEuNjY3LDguODA5IDQuMzQ3LDExLjczOCA2LjE4OSwxMy42MTFcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciByZWZyZXNoID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMTcuMDgsMTEuMTUgQzE3LjA5LDExLjMxIDE3LjEsMTEuNDcgMTcuMSwxMS42NCBDMTcuMSwxNS41MyAxMy45NCwxOC42OSAxMC4wNSwxOC42OSBDNi4xNiwxOC42OCAzLDE1LjUzIDMsMTEuNjMgQzMsNy43NCA2LjE2LDQuNTggMTAuMDUsNC41OCBDMTAuOSw0LjU4IDExLjcxLDQuNzMgMTIuNDYsNVxcXCI+PC9wYXRoPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjkuOSAyIDEyLjc5IDQuODkgOS43OSA3LjlcXFwiPjwvcG9seWxpbmU+PC9zdmc+XCI7XG52YXIgcmVwbHkgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xNy43LDEzLjExIEMxNi4xMiwxMC4wMiAxMy44NCw3Ljg1IDExLjAyLDYuNjEgQzEwLjU3LDYuNDEgOS43NSw2LjEzIDksNS45MSBMOSwyIEwxLDkgTDksMTYgTDksMTIuMTMgQzEwLjc4LDEyLjQ3IDEyLjUsMTMuMTkgMTQuMDksMTQuMjUgQzE3LjEzLDE2LjI4IDE4LjU2LDE4LjU0IDE4LjU2LDE4LjU0IEMxOC41NiwxOC41NCAxOC44MSwxNS4yOCAxNy43LDEzLjExIEwxNy43LDEzLjExIFogTTE0LjgyLDEzLjUzIEMxMy4xNywxMi40IDExLjAxLDExLjQgOCwxMC45MiBMOCwxMy42MyBMMi41NSw5IEw4LDQuMjUgTDgsNi44IEM4LjMsNi44NiA5LjE2LDcuMDIgMTAuMzcsNy40OSBDMTMuMyw4LjY1IDE1LjU0LDEwLjk2IDE2LjY1LDEzLjA4IEMxNi45NywxMy43IDE3LjQ4LDE0Ljg2IDE3LjY4LDE2IEMxNi44NywxNS4wNSAxNS43MywxNC4xNSAxNC44MiwxMy41MyBMMTQuODIsMTMuNTMgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHJzcyA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBjeD1cXFwiMy4xMlxcXCIgY3k9XFxcIjE2LjhcXFwiIHI9XFxcIjEuODVcXFwiPjwvY2lyY2xlPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMS41LDguMiBDMS43OCw4LjE4IDIuMDYsOC4xNiAyLjM1LDguMTYgQzcuNTcsOC4xNiAxMS44MSwxMi4zNyAxMS44MSwxNy41NyBDMTEuODEsMTcuODkgMTEuNzksMTguMTkgMTEuNzYsMTguNVxcXCI+PC9wYXRoPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMS41LDIuNTIgQzEuNzgsMi41MSAyLjA2LDIuNSAyLjM1LDIuNSBDMTAuNzIsMi41IDE3LjUsOS4yNCAxNy41LDE3LjU3IEMxNy41LDE3Ljg5IDE3LjQ5LDE4LjE5IDE3LjQ3LDE4LjVcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBzZWFyY2ggPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgY3g9XFxcIjlcXFwiIGN5PVxcXCI5XFxcIiByPVxcXCI3XFxcIj48L2NpcmNsZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgZD1cXFwiTTE0LDE0IEwxOCwxOCBMMTQsMTQgWlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHNlcnZlciA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgeD1cXFwiM1xcXCIgeT1cXFwiM1xcXCIgd2lkdGg9XFxcIjFcXFwiIGhlaWdodD1cXFwiMlxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCI1XFxcIiB5PVxcXCIzXFxcIiB3aWR0aD1cXFwiMVxcXCIgaGVpZ2h0PVxcXCIyXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjdcXFwiIHk9XFxcIjNcXFwiIHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjJcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMTZcXFwiIHk9XFxcIjNcXFwiIHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMTZcXFwiIHk9XFxcIjEwXFxcIiB3aWR0aD1cXFwiMVxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBjeD1cXFwiOS45XFxcIiBjeT1cXFwiMTcuNFxcXCIgcj1cXFwiMS40XFxcIj48L2NpcmNsZT4gPHJlY3QgeD1cXFwiM1xcXCIgeT1cXFwiMTBcXFwiIHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjJcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiNVxcXCIgeT1cXFwiMTBcXFwiIHdpZHRoPVxcXCIxXFxcIiBoZWlnaHQ9XFxcIjJcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiOS41XFxcIiB5PVxcXCIxNFxcXCIgd2lkdGg9XFxcIjFcXFwiIGhlaWdodD1cXFwiMlxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIzXFxcIiB5PVxcXCIxN1xcXCIgd2lkdGg9XFxcIjZcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxMVxcXCIgeT1cXFwiMTdcXFwiIHdpZHRoPVxcXCI2XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIxLjVcXFwiIHk9XFxcIjEuNVxcXCIgd2lkdGg9XFxcIjE3XFxcIiBoZWlnaHQ9XFxcIjVcXFwiPjwvcmVjdD4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIxLjVcXFwiIHk9XFxcIjguNVxcXCIgd2lkdGg9XFxcIjE3XFxcIiBoZWlnaHQ9XFxcIjVcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBzZXR0aW5ncyA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGVsbGlwc2UgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBjeD1cXFwiNi4xMVxcXCIgY3k9XFxcIjMuNTVcXFwiIHJ4PVxcXCIyLjExXFxcIiByeT1cXFwiMi4xNVxcXCI+PC9lbGxpcHNlPiA8ZWxsaXBzZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGN4PVxcXCI2LjExXFxcIiBjeT1cXFwiMTUuNTVcXFwiIHJ4PVxcXCIyLjExXFxcIiByeT1cXFwiMi4xNVxcXCI+PC9lbGxpcHNlPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgY3g9XFxcIjEzLjE1XFxcIiBjeT1cXFwiOS41NVxcXCIgcj1cXFwiMi4xNVxcXCI+PC9jaXJjbGU+IDxyZWN0IHg9XFxcIjFcXFwiIHk9XFxcIjNcXFwiIHdpZHRoPVxcXCIzXFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMTBcXFwiIHk9XFxcIjNcXFwiIHdpZHRoPVxcXCI4XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMVxcXCIgeT1cXFwiOVxcXCIgd2lkdGg9XFxcIjhcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxNVxcXCIgeT1cXFwiOVxcXCIgd2lkdGg9XFxcIjNcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxXFxcIiB5PVxcXCIxNVxcXCIgd2lkdGg9XFxcIjNcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxMFxcXCIgeT1cXFwiMTVcXFwiIHdpZHRoPVxcXCI4XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBzaHJpbmsgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIHBvaW50cz1cXFwiMTEgNCAxMiA0IDEyIDggMTYgOCAxNiA5IDExIDlcXFwiPjwvcG9seWdvbj4gPHBvbHlnb24gcG9pbnRzPVxcXCI0IDExIDkgMTEgOSAxNiA4IDE2IDggMTIgNCAxMlxcXCI+PC9wb2x5Z29uPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMTIsOCBMMTgsMlxcXCI+PC9wYXRoPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMiwxOCBMOCwxMlxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHNvY2lhbCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgeDE9XFxcIjEzLjRcXFwiIHkxPVxcXCIxNFxcXCIgeDI9XFxcIjYuM1xcXCIgeTI9XFxcIjEwLjdcXFwiPjwvbGluZT4gPGxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgeDE9XFxcIjEzLjVcXFwiIHkxPVxcXCI1LjVcXFwiIHgyPVxcXCI2LjVcXFwiIHkyPVxcXCI4LjhcXFwiPjwvbGluZT4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiMTUuNVxcXCIgY3k9XFxcIjQuNlxcXCIgcj1cXFwiMi4zXFxcIj48L2NpcmNsZT4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiMTUuNVxcXCIgY3k9XFxcIjE0LjhcXFwiIHI9XFxcIjIuM1xcXCI+PC9jaXJjbGU+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgY3g9XFxcIjQuNVxcXCIgY3k9XFxcIjkuOFxcXCIgcj1cXFwiMi4zXFxcIj48L2NpcmNsZT48L3N2Zz5cIjtcbnZhciBzb3VuZGNsb3VkID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTcuMiw5LjRjLTAuNCwwLTAuOCwwLjEtMS4xMDEsMC4yYy0wLjE5OS0yLjUtMi4zOTktNC41LTUtNC41Yy0wLjYsMC0xLjIsMC4xLTEuNywwLjNDOS4yLDUuNSw5LjEsNS42LDkuMSw1LjZWMTVoOCBjMS42MDEsMCwyLjgwMS0xLjIsMi44MDEtMi44QzIwLDEwLjcsMTguNyw5LjQsMTcuMiw5LjRMMTcuMiw5LjR6XFxcIj48L3BhdGg+IDxyZWN0IHg9XFxcIjZcXFwiIHk9XFxcIjYuNVxcXCIgd2lkdGg9XFxcIjEuNVxcXCIgaGVpZ2h0PVxcXCI4LjVcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiM1xcXCIgeT1cXFwiOFxcXCIgd2lkdGg9XFxcIjEuNVxcXCIgaGVpZ2h0PVxcXCI3XFxcIj48L3JlY3Q+IDxyZWN0IHk9XFxcIjEwXFxcIiB3aWR0aD1cXFwiMS41XFxcIiBoZWlnaHQ9XFxcIjVcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciBzdGFyID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWdvbiBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4wMVxcXCIgcG9pbnRzPVxcXCIxMCAyIDEyLjYzIDcuMjcgMTguNSA4LjEyIDE0LjI1IDEyLjIyIDE1LjI1IDE4IDEwIDE1LjI3IDQuNzUgMTggNS43NSAxMi4yMiAxLjUgOC4xMiA3LjM3IDcuMjdcXFwiPjwvcG9seWdvbj48L3N2Zz5cIjtcbnZhciBzdHJpa2V0aHJvdWdoID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNNiwxMy4wMiBMNi42NSwxMy4wMiBDNy42NCwxNS4xNiA4Ljg2LDE2LjEyIDEwLjQxLDE2LjEyIEMxMi4yMiwxNi4xMiAxMi45MiwxNC45MyAxMi45MiwxMy44OSBDMTIuOTIsMTIuNTUgMTEuOTksMTIuMDMgOS43NCwxMS4yMyBDOC4wNSwxMC42NCA2LjIzLDEwLjExIDYuMjMsNy44MyBDNi4yMyw1LjUgOC4wOSw0LjA5IDEwLjQsNC4wOSBDMTEuNDQsNC4wOSAxMi4xMyw0LjMxIDEyLjcyLDQuNTQgTDEzLjMzLDQgTDEzLjgxLDQgTDEzLjgxLDcuNTkgTDEzLjE2LDcuNTkgQzEyLjU1LDUuODggMTEuNTIsNC44OSAxMC4wNyw0Ljg5IEM4Ljg0LDQuODkgNy44OSw1LjY5IDcuODksNy4wMyBDNy44OSw4LjI5IDguODksOC43OCAxMC44OCw5LjQ1IEMxMi41NywxMC4wMyAxNC4zOCwxMC42IDE0LjM4LDEyLjkxIEMxNC4zOCwxNC43NSAxMy4yNywxNi45MyAxMC4xOCwxNi45MyBDOS4xOCwxNi45MyA4LjE3LDE2LjY5IDcuNDYsMTYuMzkgTDYuNTIsMTcgTDYsMTcgTDYsMTMuMDIgTDYsMTMuMDIgWlxcXCI+PC9wYXRoPiA8cmVjdCB4PVxcXCIzXFxcIiB5PVxcXCIxMFxcXCIgd2lkdGg9XFxcIjE1XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD48L3N2Zz5cIjtcbnZhciB0YWJsZSA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgeD1cXFwiMVxcXCIgeT1cXFwiM1xcXCIgd2lkdGg9XFxcIjE4XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMVxcXCIgeT1cXFwiN1xcXCIgd2lkdGg9XFxcIjE4XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgeD1cXFwiMVxcXCIgeT1cXFwiMTFcXFwiIHdpZHRoPVxcXCIxOFxcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjFcXFwiIHk9XFxcIjE1XFxcIiB3aWR0aD1cXFwiMThcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0Pjwvc3ZnPlwiO1xudmFyIHRhYmxldCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNNSwxOC41IEM0LjIsMTguNSAzLjUsMTcuOCAzLjUsMTcgTDMuNSwzIEMzLjUsMi4yIDQuMiwxLjUgNSwxLjUgTDE2LDEuNSBDMTYuOCwxLjUgMTcuNSwyLjIgMTcuNSwzIEwxNy41LDE3IEMxNy41LDE3LjggMTYuOCwxOC41IDE2LDE4LjUgTDUsMTguNSBMNSwxOC41IEw1LDE4LjUgWlxcXCI+PC9wYXRoPiA8Y2lyY2xlIGN4PVxcXCIxMC41XFxcIiBjeT1cXFwiMTYuM1xcXCIgcj1cXFwiMC44XFxcIj48L2NpcmNsZT48L3N2Zz5cIjtcbnZhciB0YWcgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiIGQ9XFxcIk0xNy41LDMuNzEgTDE3LjUsNy43MiBDMTcuNSw3Ljk2IDE3LjQsOC4yIDE3LjIxLDguMzkgTDguMzksMTcuMiBDNy45OSwxNy42IDcuMzMsMTcuNiA2LjkzLDE3LjIgTDIuOCwxMy4wNyBDMi40LDEyLjY3IDIuNCwxMi4wMSAyLjgsMTEuNjEgTDExLjYxLDIuOCBDMTEuODEsMi42IDEyLjA4LDIuNSAxMi4zNCwyLjUgTDE2LjE5LDIuNSBDMTYuNTIsMi41IDE2Ljg2LDIuNjMgMTcuMTEsMi44OCBDMTcuMzUsMy4xMSAxNy40OCwzLjQgMTcuNSwzLjcxIEwxNy41LDMuNzEgWlxcXCI+PC9wYXRoPiA8Y2lyY2xlIGN4PVxcXCIxNFxcXCIgY3k9XFxcIjZcXFwiIHI9XFxcIjFcXFwiPjwvY2lyY2xlPjwvc3ZnPlwiO1xudmFyIHRodW1ibmFpbHMgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxyZWN0IGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeD1cXFwiMy41XFxcIiB5PVxcXCIzLjVcXFwiIHdpZHRoPVxcXCI1XFxcIiBoZWlnaHQ9XFxcIjVcXFwiPjwvcmVjdD4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIxMS41XFxcIiB5PVxcXCIzLjVcXFwiIHdpZHRoPVxcXCI1XFxcIiBoZWlnaHQ9XFxcIjVcXFwiPjwvcmVjdD4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIxMS41XFxcIiB5PVxcXCIxMS41XFxcIiB3aWR0aD1cXFwiNVxcXCIgaGVpZ2h0PVxcXCI1XFxcIj48L3JlY3Q+IDxyZWN0IGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeD1cXFwiMy41XFxcIiB5PVxcXCIxMS41XFxcIiB3aWR0aD1cXFwiNVxcXCIgaGVpZ2h0PVxcXCI1XFxcIj48L3JlY3Q+PC9zdmc+XCI7XG52YXIgdHJhc2ggPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHBvaW50cz1cXFwiNi41IDMgNi41IDEuNSAxMy41IDEuNSAxMy41IDNcXFwiPjwvcG9seWxpbmU+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHBvaW50cz1cXFwiNC41IDQgNC41IDE4LjUgMTUuNSAxOC41IDE1LjUgNFxcXCI+PC9wb2x5bGluZT4gPHJlY3QgeD1cXFwiOFxcXCIgeT1cXFwiN1xcXCIgd2lkdGg9XFxcIjFcXFwiIGhlaWdodD1cXFwiOVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIxMVxcXCIgeT1cXFwiN1xcXCIgd2lkdGg9XFxcIjFcXFwiIGhlaWdodD1cXFwiOVxcXCI+PC9yZWN0PiA8cmVjdCB4PVxcXCIyXFxcIiB5PVxcXCIzXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMVxcXCI+PC9yZWN0Pjwvc3ZnPlwiO1xudmFyIHRyaXBhZHZpc29yID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTkuMDIxLDcuODY2QzE5LjI1Niw2Ljg2MiwyMCw1Ljg1NCwyMCw1Ljg1NGgtMy4zNDZDMTQuNzgxLDQuNjQxLDEyLjUwNCw0LDkuOTgsNEM3LjM2Myw0LDQuOTk5LDQuNjUxLDMuMTM1LDUuODc2SDBcXHRjMCwwLDAuNzM4LDAuOTg3LDAuOTc2LDEuOTg4Yy0wLjYxMSwwLjgzNy0wLjk3MywxLjg1Mi0wLjk3MywyLjk2NGMwLDIuNzYzLDIuMjQ5LDUuMDA5LDUuMDExLDUuMDA5XFx0YzEuNTc2LDAsMi45NzYtMC43MzcsMy45MDEtMS44NzlsMS4wNjMsMS41OTlsMS4wNzUtMS42MTVjMC40NzUsMC42MTEsMS4xLDEuMTExLDEuODM4LDEuNDUxYzEuMjEzLDAuNTQ3LDIuNTc0LDAuNjEyLDMuODI1LDAuMTVcXHRjMi41ODktMC45NjMsMy45MTMtMy44NTIsMi45NjQtNi40MzljLTAuMTc1LTAuNDYzLTAuNC0wLjg3Ni0wLjY3NS0xLjIzOEgxOS4wMjF6IE0xNi4zOCwxNC41OTRcXHRjLTEuMDAyLDAuMzcxLTIuMDg4LDAuMzI4LTMuMDYtMC4xMTljLTAuNjg4LTAuMzE3LTEuMjUyLTAuODE3LTEuNjU3LTEuNDM4Yy0wLjE2NC0wLjI1LTAuMzEzLTAuNTItMC40MTctMC44MTFcXHRjLTAuMTI0LTAuMzI4LTAuMTg2LTAuNjY4LTAuMjE3LTEuMDE0Yy0wLjA2My0wLjY4OSwwLjAzNy0xLjM5NiwwLjMzOS0yLjA0M2MwLjQ0OC0wLjk3MSwxLjI1MS0xLjcxLDIuMjUtMi4wNzlcXHRjMi4wNzUtMC43NjUsNC4zNzUsMC4zLDUuMTQsMi4zNjZjMC43NjIsMi4wNjYtMC4zMDEsNC4zNy0yLjM2Myw1LjEzNEwxNi4zOCwxNC41OTRMMTYuMzgsMTQuNTk0eiBNOC4zMjIsMTMuMDY2XFx0Yy0wLjcyLDEuMDU5LTEuOTM1LDEuNzYtMy4zMDksMS43NmMtMi4yMDcsMC00LjAwMS0xLjc5Ny00LjAwMS0zLjk5NmMwLTIuMjAzLDEuNzk1LTQuMDAyLDQuMDAxLTQuMDAyXFx0YzIuMjA0LDAsMy45OTksMS44LDMuOTk5LDQuMDAyYzAsMC4xMzctMC4wMjQsMC4yNjEtMC4wNCwwLjM5NmMtMC4wNjcsMC42NzgtMC4yODQsMS4zMTMtMC42NDgsMS44NTN2LTAuMDEzSDguMzIyeiBNMi40NzIsMTAuNzc1XFx0YzAsMS4zNjcsMS4xMTIsMi40NzksMi40NzYsMi40NzljMS4zNjMsMCwyLjQ3Mi0xLjExLDIuNDcyLTIuNDc5YzAtMS4zNTktMS4xMS0yLjQ2OC0yLjQ3Mi0yLjQ2OFxcdEMzLjU4NCw4LjMwNiwyLjQ3Myw5LjQxNiwyLjQ3MiwxMC43NzVMMi40NzIsMTAuNzc1eiBNMTIuNTE0LDEwLjc3NWMwLDEuMzY3LDEuMTA0LDIuNDc5LDIuNDcxLDIuNDc5XFx0YzEuMzYzLDAsMi40NzQtMS4xMDgsMi40NzQtMi40NzljMC0xLjM1OS0xLjExLTIuNDY4LTIuNDc0LTIuNDY4Yy0xLjM2NCwwLTIuNDc3LDEuMTA5LTIuNDc3LDIuNDY4SDEyLjUxNHogTTMuMzI0LDEwLjc3NVxcdGMwLTAuODkzLDAuNzI2LTEuNjE4LDEuNjE0LTEuNjE4YzAuODg5LDAsMS42MjUsMC43MjcsMS42MjUsMS42MThjMCwwLjg5OC0wLjcyNSwxLjYyNy0xLjYyNSwxLjYyN1xcdGMtMC45MDEsMC0xLjYyNS0wLjcyOS0xLjYyNS0xLjYyN0gzLjMyNHogTTEzLjM1NCwxMC43NzVjMC0wLjg5MywwLjcyNi0xLjYxOCwxLjYyNy0xLjYxOGMwLjg4NiwwLDEuNjEsMC43MjcsMS42MSwxLjYxOFxcdGMwLDAuODk4LTAuNzI2LDEuNjI3LTEuNjI2LDEuNjI3cy0xLjYyNS0wLjcyOS0xLjYyNS0xLjYyN0gxMy4zNTR6IE05Ljk3Nyw0Ljg3NWMxLjc5OCwwLDMuNDI1LDAuMzI0LDQuODQ5LDAuOTY4XFx0Yy0wLjUzNSwwLjAxNS0xLjA2MSwwLjEwOC0xLjU4NiwwLjNjLTEuMjY0LDAuNDYzLTIuMjY0LDEuMzg4LTIuODE1LDIuNjA0Yy0wLjI2MiwwLjU1MS0wLjM5OCwxLjEzMy0wLjQ0OCwxLjcyXFx0QzkuNzksNy45MDUsNy42NzcsNS44NzMsNS4wNzYsNS44MkM2LjUwMSw1LjIwOCw4LjE1Myw0Ljg3NSw5Ljk0LDQuODc1SDkuOTc3elxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHR1bWJsciA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTYuODg1LDguNTk4YzAsMCwwLDMuMzkzLDAsNC45OTZjMCwwLjI4MiwwLDAuNjYsMC4wOTQsMC45NDJjMC4zNzcsMS41MDksMS4xMzEsMi41NDUsMi41NDUsMy4xMSBjMS4zMTksMC40NzIsMi4zNTYsMC40NzIsMy42NzYsMGMwLjU2NS0wLjE4OCwxLjEzMi0wLjY1OSwxLjEzMi0wLjY1OWwtMC44NDktMi4yNjNjMCwwLTEuMDM2LDAuMzc4LTEuNjAzLDAuMjgzIGMtMC41NjUtMC4wOTQtMS4yMjYtMC42Ni0xLjIyNi0xLjUwOGMwLTEuNjAzLDAtNC45MDIsMC00LjkwMmgyLjgyOFY1Ljc3MWgtMi44MjhWMkg4LjIwNWMwLDAtMC4wOTQsMC42Ni0wLjE4OCwwLjk0MiBDNy44MjgsMy43OTEsNy4yNjIsNC43MzMsNi42MDMsNS4zOTRDNS44NDgsNi4xNDcsNSw2LjQzLDUsNi40M3YyLjE2OEg2Ljg4NXpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciB0diA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgeD1cXFwiN1xcXCIgeT1cXFwiMTZcXFwiIHdpZHRoPVxcXCI2XFxcIiBoZWlnaHQ9XFxcIjFcXFwiPjwvcmVjdD4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIwLjVcXFwiIHk9XFxcIjMuNVxcXCIgd2lkdGg9XFxcIjE5XFxcIiBoZWlnaHQ9XFxcIjExXFxcIj48L3JlY3Q+PC9zdmc+XCI7XG52YXIgdHdpdHRlciA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTE5LDQuNzQgQzE4LjMzOSw1LjAyOSAxNy42MjYsNS4yMjkgMTYuODgxLDUuMzIgQzE3LjY0NCw0Ljg2IDE4LjIyNyw0LjEzOSAxOC41MDMsMy4yOCBDMTcuNzksMy43IDE3LjAwMSw0LjAwOSAxNi4xNTksNC4xNyBDMTUuNDg1LDMuNDUgMTQuNTI2LDMgMTMuNDY0LDMgQzExLjQyMywzIDkuNzcxLDQuNjYgOS43NzEsNi43IEM5Ljc3MSw2Ljk5IDkuODA0LDcuMjY5IDkuODY4LDcuNTM5IEM2Ljc5NSw3LjM4IDQuMDc2LDUuOTE5IDIuMjU0LDMuNjc5IEMxLjkzNiw0LjIxOSAxLjc1NCw0Ljg2IDEuNzU0LDUuNTM5IEMxLjc1NCw2LjgyIDIuNDA1LDcuOTUgMy4zOTcsOC42MSBDMi43OSw4LjU4OSAyLjIyLDguNDI5IDEuNzIzLDguMTQ5IEwxLjcyMyw4LjE4OSBDMS43MjMsOS45NzggMi45OTcsMTEuNDc4IDQuNjg2LDExLjgyIEM0LjM3NiwxMS44OTkgNC4wNDksMTEuOTM5IDMuNzEzLDExLjkzOSBDMy40NzUsMTEuOTM5IDMuMjQ1LDExLjkxOSAzLjAxOCwxMS44OCBDMy40OSwxMy4zNDkgNC44NTIsMTQuNDE5IDYuNDY5LDE0LjQ0OSBDNS4yMDUsMTUuNDI5IDMuNjEyLDE2LjAxOSAxLjg4MiwxNi4wMTkgQzEuNTgzLDE2LjAxOSAxLjI5LDE2LjAwOSAxLDE1Ljk2OSBDMi42MzUsMTcuMDE5IDQuNTc2LDE3LjYyOSA2LjY2MiwxNy42MjkgQzEzLjQ1NCwxNy42MjkgMTcuMTcsMTIgMTcuMTcsNy4xMjkgQzE3LjE3LDYuOTY5IDE3LjE2Niw2LjgwOSAxNy4xNTcsNi42NDkgQzE3Ljg3OSw2LjEyOSAxOC41MDQsNS40NzggMTksNC43NFxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHVpa2l0ID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWdvbiBwb2ludHM9XFxcIjE0LjQsMy4xIDExLjMsNS4xIDE1LDcuMyAxNSwxMi45IDEwLDE1LjcgNSwxMi45IDUsOC41IDIsNi44IDIsMTQuOCA5LjksMTkuNSAxOCwxNC44IDE4LDUuM1xcXCI+PC9wb2x5Z29uPiA8cG9seWdvbiBwb2ludHM9XFxcIjkuOCw0LjIgNi43LDIuNCA5LjgsMC40IDEyLjksMi4zXFxcIj48L3BvbHlnb24+PC9zdmc+XCI7XG52YXIgdW5sb2NrID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cmVjdCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHg9XFxcIjMuNVxcXCIgeT1cXFwiOC41XFxcIiB3aWR0aD1cXFwiMTNcXFwiIGhlaWdodD1cXFwiMTBcXFwiPjwvcmVjdD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNNi41LDguNSBMNi41LDQuOSBDNi41LDMgOC4xLDEuNSAxMCwxLjUgQzExLjksMS41IDEzLjUsMyAxMy41LDQuOVxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHVwbG9hZCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgcG9pbnRzPVxcXCI1IDggOS41IDMuNSAxNCA4IFxcXCI+PC9wb2x5bGluZT4gPHJlY3QgeD1cXFwiM1xcXCIgeT1cXFwiMTdcXFwiIHdpZHRoPVxcXCIxM1xcXCIgaGVpZ2h0PVxcXCIxXFxcIj48L3JlY3Q+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjkuNVxcXCIgeTE9XFxcIjE1XFxcIiB4Mj1cXFwiOS41XFxcIiB5Mj1cXFwiNFxcXCI+PC9saW5lPjwvc3ZnPlwiO1xudmFyIHVzZXIgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgY3g9XFxcIjkuOVxcXCIgY3k9XFxcIjYuNFxcXCIgcj1cXFwiNC40XFxcIj48L2NpcmNsZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgZD1cXFwiTTEuNSwxOSBDMi4zLDE0LjUgNS44LDExLjIgMTAsMTEuMiBDMTQuMiwxMS4yIDE3LjcsMTQuNiAxOC41LDE5LjJcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciB1c2VycyA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiNy43XFxcIiBjeT1cXFwiOC42XFxcIiByPVxcXCIzLjVcXFwiPjwvY2lyY2xlPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNMSwxOC4xIEMxLjcsMTQuNiA0LjQsMTIuMSA3LjYsMTIuMSBDMTAuOSwxMi4xIDEzLjcsMTQuOCAxNC4zLDE4LjNcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgZD1cXFwiTTExLjQsNCBDMTIuOCwyLjQgMTUuNCwyLjggMTYuMyw0LjcgQzE3LjIsNi42IDE1LjcsOC45IDEzLjYsOC45IEMxNi41LDguOSAxOC44LDExLjMgMTkuMiwxNC4xXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgdmltZW8gPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0yLjA2NSw3LjU5QzEuODQsNy4zNjcsMS42NTQsNy4wODIsMS40NjgsNi44MzhjLTAuMzMyLTAuNDItMC4xMzctMC40MTEsMC4yNzQtMC43NzJjMS4wMjYtMC45MSwyLjAwNC0xLjg5NiwzLjEyNy0yLjY4OCBjMS4wMTctMC43MTMsMi4zNjUtMS4xNzMsMy4yODYtMC4wMzljMC44NDksMS4wNDUsMC44NjksMi42MjksMS4wODQsMy44OTFjMC4yMTUsMS4zMDksMC40MjEsMi42NDgsMC44OCwzLjkwMSBjMC4xMjcsMC4zNTIsMC4zNywxLjAxOCwwLjgxLDEuMDc0YzAuNTY3LDAuMDc4LDEuMTQ1LTAuOTE3LDEuNDA4LTEuMjg5YzAuNjg0LTAuOTg3LDEuNjExLTIuMzE3LDEuNDk0LTMuNTg3IGMtMC4xMTUtMS4zNDktMS41NzItMS4wOTUtMi40ODItMC43NzNjMC4xNDYtMS41MTQsMS41NTUtMy4yMTYsMi45MTItMy43OTJjMS40MzktMC41OTcsMy41NzktMC41ODcsNC4zMDIsMS4wMzYgYzAuNzcyLDEuNzU5LDAuMDc4LDMuODAyLTAuNzYzLDUuMzk2Yy0wLjkxOCwxLjczMS0yLjEsMy4zMzMtMy4zNjMsNC44MjljLTEuMTE0LDEuMzI5LTIuNDMyLDIuNzg3LTQuMDkzLDMuNDIyIGMtMS44OTcsMC43MjMtMy4wMjEtMC42ODYtMy42NjctMi4zMThjLTAuNzA1LTEuNzc3LTEuMDU2LTMuNzcxLTEuNTY1LTUuNjIxQzQuODk4LDguNzI2LDQuNjQ0LDcuODM2LDQuMTM2LDcuMTkxIEMzLjQ3Myw2LjM1OCwyLjcyLDcuMTQxLDIuMDY1LDcuNTlDMS45NzcsNy41MDIsMi4xMTUsNy41NTEsMi4wNjUsNy41OUwyLjA2NSw3LjU5elxcXCI+PC9wYXRoPjwvc3ZnPlwiO1xudmFyIHdhcm5pbmcgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxjaXJjbGUgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTRcXFwiIHI9XFxcIjFcXFwiPjwvY2lyY2xlPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiIGN4PVxcXCIxMFxcXCIgY3k9XFxcIjEwXFxcIiByPVxcXCI5XFxcIj48L2NpcmNsZT4gPHBhdGggZD1cXFwiTTEwLjk3LDcuNzIgQzEwLjg1LDkuNTQgMTAuNTYsMTEuMjkgMTAuNTYsMTEuMjkgQzEwLjUxLDExLjg3IDEwLjI3LDEyIDkuOTksMTIgQzkuNjksMTIgOS40OSwxMS44NyA5LjQzLDExLjI5IEM5LjQzLDExLjI5IDkuMTYsOS41NCA5LjAzLDcuNzIgQzguOTYsNi41NCA5LjAzLDYgOS4wMyw2IEM5LjAzLDUuNDUgOS40Niw1LjAyIDkuOTksNSBDMTAuNTMsNS4wMSAxMC45Nyw1LjQ0IDEwLjk3LDYgQzEwLjk3LDYgMTEuMDQsNi41NCAxMC45Nyw3LjcyIEwxMC45Nyw3LjcyIFpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciB3aGF0c2FwcCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTE2LjcsMy4zYy0xLjgtMS44LTQuMS0yLjgtNi43LTIuOGMtNS4yLDAtOS40LDQuMi05LjQsOS40YzAsMS43LDAuNCwzLjMsMS4zLDQuN2wtMS4zLDQuOWw1LTEuM2MxLjQsMC44LDIuOSwxLjIsNC41LDEuMiBsMCwwbDAsMGM1LjIsMCw5LjQtNC4yLDkuNC05LjRDMTkuNSw3LjQsMTguNSw1LDE2LjcsMy4zIE0xMC4xLDE3LjdMMTAuMSwxNy43Yy0xLjQsMC0yLjgtMC40LTQtMS4xbC0wLjMtMC4ybC0zLDAuOGwwLjgtMi45IGwtMC4yLTAuM2MtMC44LTEuMi0xLjItMi43LTEuMi00LjJjMC00LjMsMy41LTcuOCw3LjgtNy44YzIuMSwwLDQuMSwwLjgsNS41LDIuM2MxLjUsMS41LDIuMywzLjQsMi4zLDUuNSBDMTcuOSwxNC4yLDE0LjQsMTcuNywxMC4xLDE3LjcgTTE0LjQsMTEuOWMtMC4yLTAuMS0xLjQtMC43LTEuNi0wLjhjLTAuMi0wLjEtMC40LTAuMS0wLjUsMC4xYy0wLjIsMC4yLTAuNiwwLjgtMC44LDAuOSBjLTAuMSwwLjItMC4zLDAuMi0wLjUsMC4xYy0wLjItMC4xLTEtMC40LTEuOS0xLjJjLTAuNy0wLjYtMS4yLTEuNC0xLjMtMS42Yy0wLjEtMC4yLDAtMC40LDAuMS0wLjVDOCw4LjgsOC4xLDguNyw4LjIsOC41IGMwLjEtMC4xLDAuMi0wLjIsMC4yLTAuNGMwLjEtMC4yLDAtMC4zLDAtMC40QzguNCw3LjYsNy45LDYuNSw3LjcsNkM3LjUsNS41LDcuMyw1LjYsNy4yLDUuNmMtMC4xLDAtMC4zLDAtMC40LDAgYy0wLjIsMC0wLjQsMC4xLTAuNiwwLjNjLTAuMiwwLjItMC44LDAuOC0wLjgsMmMwLDEuMiwwLjgsMi4zLDEsMi40YzAuMSwwLjIsMS43LDIuNSw0LDMuNWMwLjYsMC4yLDEsMC40LDEuMywwLjUgYzAuNiwwLjIsMS4xLDAuMiwxLjUsMC4xYzAuNS0wLjEsMS40LTAuNiwxLjYtMS4xYzAuMi0wLjUsMC4yLTEsMC4xLTEuMUMxNC44LDEyLjEsMTQuNiwxMiwxNC40LDExLjlcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciB3b3JkcHJlc3MgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xMCwwLjVjLTUuMiwwLTkuNSw0LjMtOS41LDkuNXM0LjMsOS41LDkuNSw5LjVjNS4yLDAsOS41LTQuMyw5LjUtOS41UzE1LjIsMC41LDEwLDAuNUwxMCwwLjVMMTAsMC41eiBNMTUuNiwzLjloLTAuMSBjLTAuOCwwLTEuNCwwLjctMS40LDEuNWMwLDAuNywwLjQsMS4zLDAuOCwxLjljMC4zLDAuNiwwLjcsMS4zLDAuNywyLjNjMCwwLjctMC4zLDEuNS0wLjYsMi43TDE0LjEsMTVsLTMtOC45IGMwLjUsMCwwLjktMC4xLDAuOS0wLjFDMTIuNSw2LDEyLjUsNS4zLDEyLDUuNGMwLDAtMS4zLDAuMS0yLjIsMC4xQzksNS41LDcuNyw1LjQsNy43LDUuNEM3LjIsNS4zLDcuMiw2LDcuNiw2YzAsMCwwLjQsMC4xLDAuOSwwLjEgbDEuMywzLjVMOCwxNUw1LDYuMUM1LjUsNi4xLDUuOSw2LDUuOSw2QzYuNCw2LDYuMyw1LjMsNS45LDUuNGMwLDAtMS4zLDAuMS0yLjIsMC4xYy0wLjIsMC0wLjMsMC0wLjUsMGMxLjUtMi4yLDQtMy43LDYuOS0zLjcgQzEyLjIsMS43LDE0LjEsMi42LDE1LjYsMy45TDE1LjYsMy45TDE1LjYsMy45eiBNMi41LDYuNmwzLjksMTAuOGMtMi43LTEuMy00LjYtNC4yLTQuNi03LjRDMS44LDguOCwyLDcuNiwyLjUsNi42TDIuNSw2LjZMMi41LDYuNiB6IE0xMC4yLDEwLjdsMi41LDYuOWMwLDAsMCwwLjEsMC4xLDAuMUMxMS45LDE4LDExLDE4LjIsMTAsMTguMmMtMC44LDAtMS42LTAuMS0yLjMtMC4zTDEwLjIsMTAuN0wxMC4yLDEwLjdMMTAuMiwxMC43eiBNMTQuMiwxNy4xIGwyLjUtNy4zYzAuNS0xLjIsMC42LTIuMSwwLjYtMi45YzAtMC4zLDAtMC42LTAuMS0wLjhjMC42LDEuMiwxLDIuNSwxLDRDMTguMywxMywxNi42LDE1LjcsMTQuMiwxNy4xTDE0LjIsMTcuMUwxNC4yLDE3LjF6XFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgd29ybGQgPSBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgZD1cXFwiTTEsMTAuNSBMMTksMTAuNVxcXCI+PC9wYXRoPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGQ9XFxcIk0yLjM1LDE1LjUgTDE3LjY1LDE1LjVcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMi4zNSw1LjUgTDE3LjUyMyw1LjVcXFwiPjwvcGF0aD4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMTAsMTkuNDYgTDkuOTgsMTkuNDYgQzcuMzEsMTcuMzMgNS42MSwxNC4xNDEgNS42MSwxMC41OCBDNS42MSw3LjAyIDcuMzMsMy44MyAxMCwxLjcgQzEwLjAxLDEuNyA5Ljk5LDEuNyAxMCwxLjcgTDEwLDEuNyBDMTIuNjcsMy44MyAxNC40LDcuMDIgMTQuNCwxMC41OCBDMTQuNCwxNC4xNDEgMTIuNjcsMTcuMzMgMTAsMTkuNDYgTDEwLDE5LjQ2IEwxMCwxOS40NiBMMTAsMTkuNDYgWlxcXCI+PC9wYXRoPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTAuNVxcXCIgcj1cXFwiOVxcXCI+PC9jaXJjbGU+PC9zdmc+XCI7XG52YXIgeGluZyA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTQuNCw0LjU2IEM0LjI0LDQuNTYgNC4xMSw0LjYxIDQuMDUsNC43MiBDMy45OCw0LjgzIDMuOTksNC45NyA0LjA3LDUuMTIgTDUuODIsOC4xNiBMNS44Miw4LjE3IEwzLjA2LDEzLjA0IEMyLjk5LDEzLjE4IDIuOTksMTMuMzMgMy4wNiwxMy40NCBDMy4xMiwxMy41NSAzLjI0LDEzLjYyIDMuNCwxMy42MiBMNiwxMy42MiBDNi4zOSwxMy42MiA2LjU3LDEzLjM2IDYuNzEsMTMuMTIgQzYuNzEsMTMuMTIgOS40MSw4LjM1IDkuNTEsOC4xNiBDOS40OSw4LjE0IDcuNzIsNS4wNCA3LjcyLDUuMDQgQzcuNTgsNC44MSA3LjM5LDQuNTYgNi45OSw0LjU2IEw0LjQsNC41NiBMNC40LDQuNTYgWlxcXCI+PC9wYXRoPiA8cGF0aCBkPVxcXCJNMTUuMywxIEMxNC45MSwxIDE0Ljc0LDEuMjUgMTQuNiwxLjUgQzE0LjYsMS41IDkuMDEsMTEuNDIgOC44MiwxMS43NCBDOC44MywxMS43NiAxMi41MSwxOC41MSAxMi41MSwxOC41MSBDMTIuNjQsMTguNzQgMTIuODQsMTkgMTMuMjMsMTkgTDE1LjgyLDE5IEMxNS45OCwxOSAxNi4xLDE4Ljk0IDE2LjE2LDE4LjgzIEMxNi4yMywxOC43MiAxNi4yMywxOC41NyAxNi4xNiwxOC40MyBMMTIuNSwxMS43NCBMMTIuNSwxMS43MiBMMTguMjUsMS41NiBDMTguMzIsMS40MiAxOC4zMiwxLjI3IDE4LjI1LDEuMTYgQzE4LjIxLDEuMDYgMTguMDgsMSAxNy45MywxIEwxNS4zLDEgTDE1LjMsMSBaXFxcIj48L3BhdGg+PC9zdmc+XCI7XG52YXIgeWVscCA9IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTE3LjE3NSwxNC45NzFjLTAuMTEyLDAuNzctMS42ODYsMi43NjctMi40MDYsMy4wNTRjLTAuMjQ2LDAuMS0wLjQ4NywwLjA3Ni0wLjY3NS0wLjA2OVxcdGMtMC4xMjItMC4wOTYtMi40NDYtMy44NTktMi40NDYtMy44NTljLTAuMTk0LTAuMjkzLTAuMTU3LTAuNjgyLDAuMDgzLTAuOTc4YzAuMjM0LTAuMjg0LDAuNTgxLTAuMzkzLDAuODgxLTAuMjc2XFx0YzAuMDE2LDAuMDEsNC4yMSwxLjM5NCw0LjMzMiwxLjQ4MmMwLjE3OCwwLjE0OCwwLjI2MywwLjM3OSwwLjIyNSwwLjY0NkwxNy4xNzUsMTQuOTcxTDE3LjE3NSwxNC45NzF6IE0xMS40NjQsMTAuNzg5XFx0Yy0wLjIwMy0wLjMwNy0wLjE5OS0wLjY2NiwwLjAwOS0wLjkxNmMwLDAsMi42MjUtMy41NzQsMi43NDUtMy42NTdjMC4yMDMtMC4xMzUsMC40NTItMC4xNDEsMC42OS0wLjAyNVxcdGMwLjY5MSwwLjMzNSwyLjA4NSwyLjQwNSwyLjE2NywzLjE5OXYwLjAyN2MwLjAyNCwwLjI3MS0wLjA4MiwwLjQ5MS0wLjI3MywwLjYyM2MtMC4xMzIsMC4wODMtNC40MywxLjE1NS00LjQzLDEuMTU1XFx0Yy0wLjMyMiwwLjA5Ni0wLjY4LTAuMDYtMC44ODItMC4zODFMMTEuNDY0LDEwLjc4OXogTTkuNDc1LDkuNTYzQzkuMzIsOS42MDksOC44NDgsOS43NTcsOC4yNjksOC44MTdjMCwwLTMuOTE2LTYuMTYtNC4wMDctNi4zNTFcXHRjLTAuMDU3LTAuMjEyLDAuMDExLTAuNDU1LDAuMjAyLTAuNjVDNS4wNDcsMS4yMTEsOC4yMSwwLjMyNyw5LjAzNywwLjUyOWMwLjI3LDAuMDY5LDAuNDU3LDAuMjM4LDAuNTIyLDAuNDc5XFx0YzAuMDQ3LDAuMjY2LDAuNDMzLDUuOTgyLDAuNDg4LDcuMjY0QzEwLjA5OCw5LjM2OCw5LjYyOSw5LjUxNyw5LjQ3NSw5LjU2M3ogTTkuOTI3LDE5LjA2NmMtMC4wODMsMC4yMjUtMC4yNzMsMC4zNzMtMC41NCwwLjQyMVxcdGMtMC43NjIsMC4xMy0zLjE1LTAuNzUxLTMuNjQ3LTEuMzQyYy0wLjA5Ni0wLjEzMS0wLjE1NS0wLjI2Mi0wLjE2Ny0wLjM5NGMtMC4wMTEtMC4wOTUsMC0wLjE4OSwwLjAzNi0wLjI3MlxcdGMwLjA2MS0wLjE1NSwyLjkxNy0zLjUzOCwyLjkxNy0zLjUzOGMwLjIxNC0wLjI3MiwwLjU5NS0wLjM1NSwwLjk1Mi0wLjIxM2MwLjM0NSwwLjEzLDAuNTYsMC40MjgsMC41MzYsMC43NDlcXHRDMTAuMDE0LDE0LjQ3OSw5Ljk3NywxOC45MjMsOS45MjcsMTkuMDY2eiBNMy40OTUsMTMuOTEyYy0wLjIzNS0wLjAwOS0wLjQ0NC0wLjE0OC0wLjU2OC0wLjM4MmMtMC4wODktMC4xNy0wLjE1MS0wLjQ1My0wLjE5LTAuNzk0XFx0QzIuNjMsMTEuNzAxLDIuNzYxLDEwLjE0NCwzLjA3LDkuNjQ4YzAuMTQ1LTAuMjI2LDAuMzU3LTAuMzQ1LDAuNTkyLTAuMzM2YzAuMTU0LDAsNC4yNTUsMS42NjcsNC4yNTUsMS42NjdcXHRjMC4zMjEsMC4xMTgsMC41MjEsMC40NTMsMC41LDAuODMzYy0wLjAyMywwLjM3LTAuMjM2LDAuNjU1LTAuNTUxLDAuNzM4TDMuNDk1LDEzLjkxMnpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciB5b3V0dWJlID0gXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTUsNC4xYzEsMC4xLDIuMywwLDMsMC44YzAuOCwwLjgsMC45LDIuMSwwLjksMy4xQzE5LDkuMiwxOSwxMC45LDE5LDEyYy0wLjEsMS4xLDAsMi40LTAuNSwzLjRjLTAuNSwxLjEtMS40LDEuNS0yLjUsMS42IGMtMS4yLDAuMS04LjYsMC4xLTExLDBjLTEuMS0wLjEtMi40LTAuMS0zLjItMWMtMC43LTAuOC0wLjctMi0wLjgtM0MxLDExLjgsMSwxMC4xLDEsOC45YzAtMS4xLDAtMi40LDAuNS0zLjRDMiw0LjUsMyw0LjMsNC4xLDQuMiBDNS4zLDQuMSwxMi42LDQsMTUsNC4xeiBNOCw3LjV2Nmw1LjUtM0w4LDcuNXpcXFwiPjwvcGF0aD48L3N2Zz5cIjtcbnZhciBJY29ucyA9IHtcblx0YWxidW06IGFsYnVtLFxuXHRiYW46IGJhbixcblx0YmVoYW5jZTogYmVoYW5jZSxcblx0YmVsbDogYmVsbCxcblx0Ym9sZDogYm9sZCxcblx0Ym9sdDogYm9sdCxcblx0Ym9va21hcms6IGJvb2ttYXJrLFxuXHRjYWxlbmRhcjogY2FsZW5kYXIsXG5cdGNhbWVyYTogY2FtZXJhLFxuXHRjYXJ0OiBjYXJ0LFxuXHRjaGVjazogY2hlY2ssXG5cdGNsb2NrOiBjbG9jayxcblx0Y2xvc2U6IGNsb3NlLFxuXHRjb2RlOiBjb2RlLFxuXHRjb2c6IGNvZyxcblx0Y29tbWVudDogY29tbWVudCxcblx0Y29tbWVudGluZzogY29tbWVudGluZyxcblx0Y29tbWVudHM6IGNvbW1lbnRzLFxuXHRjb3B5OiBjb3B5LFxuXHRkYXRhYmFzZTogZGF0YWJhc2UsXG5cdGRlc2t0b3A6IGRlc2t0b3AsXG5cdGRvd25sb2FkOiBkb3dubG9hZCxcblx0ZHJpYmJibGU6IGRyaWJiYmxlLFxuXHRleHBhbmQ6IGV4cGFuZCxcblx0ZmFjZWJvb2s6IGZhY2Vib29rLFxuXHRmaWxlOiBmaWxlLFxuXHRmbGlja3I6IGZsaWNrcixcblx0Zm9sZGVyOiBmb2xkZXIsXG5cdGZvcndhcmQ6IGZvcndhcmQsXG5cdGZvdXJzcXVhcmU6IGZvdXJzcXVhcmUsXG5cdGZ1dHVyZTogZnV0dXJlLFxuXHRnaXRodWI6IGdpdGh1Yixcblx0Z2l0dGVyOiBnaXR0ZXIsXG5cdGdvb2dsZTogZ29vZ2xlLFxuXHRncmlkOiBncmlkLFxuXHRoYXBweTogaGFwcHksXG5cdGhhc2h0YWc6IGhhc2h0YWcsXG5cdGhlYXJ0OiBoZWFydCxcblx0aGlzdG9yeTogaGlzdG9yeSxcblx0aG9tZTogaG9tZSxcblx0aW1hZ2U6IGltYWdlLFxuXHRpbmZvOiBpbmZvLFxuXHRpbnN0YWdyYW06IGluc3RhZ3JhbSxcblx0aXRhbGljOiBpdGFsaWMsXG5cdGpvb21sYTogam9vbWxhLFxuXHRsYXB0b3A6IGxhcHRvcCxcblx0bGlmZXNhdmVyOiBsaWZlc2F2ZXIsXG5cdGxpbms6IGxpbmssXG5cdGxpbmtlZGluOiBsaW5rZWRpbixcblx0bGlzdDogbGlzdCxcblx0bG9jYXRpb246IGxvY2F0aW9uLFxuXHRsb2NrOiBsb2NrLFxuXHRtYWlsOiBtYWlsLFxuXHRtZW51OiBtZW51LFxuXHRtaW51czogbWludXMsXG5cdG1vcmU6IG1vcmUsXG5cdG1vdmU6IG1vdmUsXG5cdG51dDogbnV0LFxuXHRwYWdla2l0OiBwYWdla2l0LFxuXHRwZW5jaWw6IHBlbmNpbCxcblx0cGhvbmU6IHBob25lLFxuXHRwaW50ZXJlc3Q6IHBpbnRlcmVzdCxcblx0cGxheTogcGxheSxcblx0cGx1czogcGx1cyxcblx0cHVsbDogcHVsbCxcblx0cHVzaDogcHVzaCxcblx0cXVlc3Rpb246IHF1ZXN0aW9uLFxuXHRyZWNlaXZlcjogcmVjZWl2ZXIsXG5cdHJlZnJlc2g6IHJlZnJlc2gsXG5cdHJlcGx5OiByZXBseSxcblx0cnNzOiByc3MsXG5cdHNlYXJjaDogc2VhcmNoLFxuXHRzZXJ2ZXI6IHNlcnZlcixcblx0c2V0dGluZ3M6IHNldHRpbmdzLFxuXHRzaHJpbms6IHNocmluayxcblx0c29jaWFsOiBzb2NpYWwsXG5cdHNvdW5kY2xvdWQ6IHNvdW5kY2xvdWQsXG5cdHN0YXI6IHN0YXIsXG5cdHN0cmlrZXRocm91Z2g6IHN0cmlrZXRocm91Z2gsXG5cdHRhYmxlOiB0YWJsZSxcblx0dGFibGV0OiB0YWJsZXQsXG5cdHRhZzogdGFnLFxuXHR0aHVtYm5haWxzOiB0aHVtYm5haWxzLFxuXHR0cmFzaDogdHJhc2gsXG5cdHRyaXBhZHZpc29yOiB0cmlwYWR2aXNvcixcblx0dHVtYmxyOiB0dW1ibHIsXG5cdHR2OiB0dixcblx0dHdpdHRlcjogdHdpdHRlcixcblx0dWlraXQ6IHVpa2l0LFxuXHR1bmxvY2s6IHVubG9jayxcblx0dXBsb2FkOiB1cGxvYWQsXG5cdHVzZXI6IHVzZXIsXG5cdHVzZXJzOiB1c2Vycyxcblx0dmltZW86IHZpbWVvLFxuXHR3YXJuaW5nOiB3YXJuaW5nLFxuXHR3aGF0c2FwcDogd2hhdHNhcHAsXG5cdHdvcmRwcmVzczogd29yZHByZXNzLFxuXHR3b3JsZDogd29ybGQsXG5cdHhpbmc6IHhpbmcsXG5cdHllbHA6IHllbHAsXG5cdHlvdXR1YmU6IHlvdXR1YmUsXG5cdFwiNTAwcHhcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNOS42MjQsMTEuODY2Yy0wLjE0MSwwLjEzMiwwLjQ3OSwwLjY1OCwwLjY2MiwwLjQxOGMwLjA1MS0wLjA0NiwwLjYwNy0wLjYxLDAuNjYyLTAuNjY0YzAsMCwwLjczOCwwLjcxOSwwLjgxNCwwLjcxOVxcdFxcdGMwLjEsMCwwLjIwNy0wLjA1NSwwLjMyMi0wLjE3YzAuMjctMC4yNjksMC4xMzUtMC40MTYsMC4wNjYtMC40OTVsLTAuNjMxLTAuNjE2bDAuNjU4LTAuNjY4YzAuMTQ2LTAuMTU2LDAuMDIxLTAuMzE0LTAuMS0wLjQ0OVxcdFxcdGMtMC4xODItMC4xOC0wLjM1OS0wLjIyNi0wLjQ3MS0wLjEyNWwtMC42NTYsMC42NTRsLTAuNjU0LTAuNjU0Yy0wLjAzMy0wLjAzNC0wLjA4LTAuMDQ1LTAuMTI0LTAuMDQ1XFx0XFx0Yy0wLjA3OSwwLTAuMTkxLDAuMDY4LTAuMzA3LDAuMTgxYy0wLjIwMiwwLjIwMi0wLjI0NywwLjM1MS0wLjEzMywwLjQ2MmwwLjY2NSwwLjY2NUw5LjYyNCwxMS44NjZ6XFxcIj48L3BhdGg+IDxwYXRoIGQ9XFxcIk0xMS4wNjYsMi44ODRjLTEuMDYxLDAtMi4xODUsMC4yNDgtMy4wMTEsMC42MDRjLTAuMDg3LDAuMDM0LTAuMTQxLDAuMTA2LTAuMTUsMC4yMDVDNy44OTMsMy43ODQsNy45MTksMy45MDksNy45ODIsNC4wNjZcXHRcXHRjMC4wNSwwLjEzNiwwLjE4NywwLjQ3NCwwLjQ1MiwwLjM3MmMwLjg0NC0wLjMyNiwxLjc3OS0wLjUwNywyLjYzMy0wLjUwN2MwLjk2MywwLDEuOSwwLjE5MSwyLjc4MSwwLjU2NFxcdFxcdGMwLjY5NSwwLjI5MiwxLjM1NywwLjcxOSwyLjA3OCwxLjM0YzAuMDUxLDAuMDQ0LDAuMTA1LDAuMDY4LDAuMTY0LDAuMDY4YzAuMTQzLDAsMC4yNzMtMC4xMzcsMC4zODktMC4yNzFcXHRcXHRjMC4xOTEtMC4yMTQsMC4zMjQtMC4zOTUsMC4xMzUtMC41NzVjLTAuNjg2LTAuNjU0LTEuNDM2LTEuMTM4LTIuMzYzLTEuNTMzQzEzLjI0LDMuMDk3LDEyLjE2OCwyLjg4NCwxMS4wNjYsMi44ODR6XFxcIj48L3BhdGg+IDxwYXRoIGQ9XFxcIk0xNi40MywxNS43NDdjLTAuMDkyLTAuMDI4LTAuMjQyLDAuMDUtMC4zMDksMC4xMTlsMCwwYy0wLjY1MiwwLjY1Mi0xLjQyLDEuMTY5LTIuMjY4LDEuNTIxXFx0XFx0Yy0wLjg3NywwLjM3MS0xLjgxNCwwLjU1MS0yLjc3OSwwLjU1MWMtMC45NjEsMC0xLjg5Ni0wLjE4OS0yLjc3NS0wLjU2NGMtMC44NDgtMC4zNi0xLjYxMi0wLjg3OS0yLjI2OC0xLjUzXFx0XFx0Yy0wLjY4Mi0wLjY4OC0xLjE5Ni0xLjQ1NS0xLjUyOS0yLjI2OGMtMC4zMjUtMC43OTktMC40NzEtMS42NDMtMC40NzEtMS42NDNjLTAuMDQ1LTAuMjQtMC4yNTgtMC4yNDktMC41NjctMC4yMDNcXHRcXHRjLTAuMTI4LDAuMDIxLTAuNTE5LDAuMDc5LTAuNDgzLDAuMzZ2MC4wMWMwLjEwNSwwLjY0NCwwLjI4OSwxLjI4NCwwLjU0NSwxLjg5NWMwLjQxNywwLjk2OSwxLjAwMiwxLjg0OSwxLjc1NiwyLjYwNFxcdFxcdGMwLjc1NywwLjc1NCwxLjYzNiwxLjM0LDIuNjA0LDEuNzU3QzguOTAxLDE4Ljc4NSw5Ljk3LDE5LDExLjA4OCwxOWMxLjEwNCwwLDIuMTg2LTAuMjE1LDMuMTg4LTAuNjQ1XFx0XFx0YzEuODM4LTAuODk2LDIuNjA0LTEuNzU3LDIuNjA0LTEuNzU3YzAuMTgyLTAuMjA0LDAuMjI3LTAuMzE3LTAuMS0wLjY0M0MxNi43NzksMTUuOTU2LDE2LjUyNSwxNS43NzQsMTYuNDMsMTUuNzQ3elxcXCI+PC9wYXRoPiA8cGF0aCBkPVxcXCJNNS42MzMsMTMuMjg3YzAuMjkzLDAuNzEsMC43MjMsMS4zNDEsMS4yNjIsMS44ODJjMC41NCwwLjU0LDEuMTcyLDAuOTcxLDEuODgyLDEuMjY0YzAuNzMxLDAuMzAzLDEuNTA5LDAuNDYxLDIuMjk4LDAuNDYxXFx0XFx0YzAuODAxLDAsMS41NzgtMC4xNTgsMi4yOTctMC40NjFjMC43MTEtMC4yOTMsMS4zNDQtMC43MjQsMS44ODMtMS4yNjRjMC41NDMtMC41NDEsMC45NzEtMS4xNzIsMS4yNjQtMS44ODJcXHRcXHRjMC4zMTQtMC43MjEsMC40NjMtMS41LDAuNDYzLTIuMjk4YzAtMC43OS0wLjE0OC0xLjU2OS0wLjQ2My0yLjI4OWMtMC4yOTMtMC42OTktMC43MjEtMS4zMjktMS4yNjQtMS44ODFcXHRcXHRjLTAuNTM5LTAuNTQxLTEuMTcyLTAuOTU5LTEuODY3LTEuMjYzYy0wLjcyMS0wLjMwMy0xLjUtMC40NjEtMi4yOTktMC40NjFjLTAuODAyLDAtMS42MTMsMC4xNTktMi4zMjIsMC40NjFcXHRcXHRjLTAuNTc3LDAuMjUtMS41NDQsMC44NjctMi4xMTksMS40NTR2MC4wMTJWMi4xMDhoOC4xNkMxNS4xLDIuMTA0LDE1LjEsMS42OSwxNS4xLDEuNTUyQzE1LjEsMS40MTcsMTUuMSwxLDE0LjgwOSwxSDUuOTE1XFx0XFx0QzUuNjc2LDEsNS41MjcsMS4xOTIsNS41MjcsMS4zODR2Ni44NGMwLDAuMjE0LDAuMjczLDAuMzcyLDAuNTI5LDAuNDI4YzAuNSwwLjEwNSwwLjYxNC0wLjA1NiwwLjczNy0wLjIyNGwwLDBcXHRcXHRjMC4xOC0wLjI3MywwLjc3Ni0wLjg4NCwwLjc4Ny0wLjg5NGMwLjkwMS0wLjkwNSwyLjExNy0xLjQwOCwzLjQxNi0xLjQwOGMxLjI4NSwwLDIuNSwwLjUwMSwzLjQxMiwxLjQwOFxcdFxcdGMwLjkxNCwwLjkxNCwxLjQwOCwyLjEyMiwxLjQwOCwzLjQwNWMwLDEuMjg4LTAuNTA4LDIuNDk2LTEuNDA4LDMuNDA1Yy0wLjksMC44OTYtMi4xNTIsMS40MDYtMy40MzgsMS40MDZcXHRcXHRjLTAuODc3LDAtMS43MTEtMC4yMjktMi40MzMtMC42NzF2LTQuMTU4YzAtMC41NTMsMC4yMzctMS4xNTEsMC42NDMtMS42MTRjMC40NjItMC41MTksMS4wOTQtMC43OTksMS43ODItMC43OTlcXHRcXHRjMC42NjQsMCwxLjI5MywwLjI1MywxLjc1OCwwLjcxNWMwLjQ1OSwwLjQ1OSwwLjcwOSwxLjA3MSwwLjcwOSwxLjcyM2MwLDEuMzg1LTEuMDk0LDIuNDY4LTIuNDg4LDIuNDY4XFx0XFx0Yy0wLjI3MywwLTAuNzY5LTAuMTIxLTAuNzgxLTAuMTI1Yy0wLjI4MS0wLjA4Ny0wLjQwNSwwLjMwNi0wLjQzOCwwLjQzNmMtMC4xNTksMC40OTYsMC4wNzksMC41ODUsMC4xMjMsMC42MDdcXHRcXHRjMC40NTIsMC4xMzcsMC43NDMsMC4xNTcsMS4xMjksMC4xNTdjMS45NzMsMCwzLjU3Mi0xLjYsMy41NzItMy41N2MwLTEuOTY0LTEuNi0zLjU1Mi0zLjU3Mi0zLjU1MmMtMC45NywwLTEuODcyLDAuMzYtMi41NDYsMS4wMzhcXHRcXHRjLTAuNjU2LDAuNjMxLTEuMDI3LDEuNDg3LTEuMDI3LDIuMzIydjMuNDM4di0wLjAxMWMtMC4zNzItMC40Mi0wLjczMi0xLjA0MS0wLjk4MS0xLjY4MmMtMC4xMDItMC4yNDgtMC4zMTUtMC4yMDItMC42MDctMC4xMTNcXHRcXHRjLTAuMTM1LDAuMDM1LTAuNTE5LDAuMTU3LTAuNDQsMC40MzlDNS4zNzIsMTIuNzk5LDUuNTc3LDEzLjE2NCw1LjYzMywxMy4yODd6XFxcIj48L3BhdGg+PC9zdmc+XCIsXG5cdFwiYXJyb3ctZG93blwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIHBvaW50cz1cXFwiMTAuNSwxNi4wOCA1LjYzLDEwLjY2IDYuMzcsMTAgMTAuNSwxNC41OCAxNC42MywxMCAxNS4zNywxMC42NlxcXCI+PC9wb2x5Z29uPiA8bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHgxPVxcXCIxMC41XFxcIiB5MT1cXFwiNFxcXCIgeDI9XFxcIjEwLjVcXFwiIHkyPVxcXCIxNVxcXCI+PC9saW5lPjwvc3ZnPlwiLFxuXHRcImFycm93LWxlZnRcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjEwIDE0IDUgOS41IDEwIDVcXFwiPjwvcG9seWxpbmU+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjE2XFxcIiB5MT1cXFwiOS41XFxcIiB4Mj1cXFwiNVxcXCIgeTI9XFxcIjkuNTJcXFwiPjwvbGluZT48L3N2Zz5cIixcblx0XCJhcnJvdy1yaWdodFwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHBvaW50cz1cXFwiMTAgNSAxNSA5LjUgMTAgMTRcXFwiPjwvcG9seWxpbmU+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjRcXFwiIHkxPVxcXCI5LjVcXFwiIHgyPVxcXCIxNVxcXCIgeTI9XFxcIjkuNVxcXCI+PC9saW5lPjwvc3ZnPlwiLFxuXHRcImFycm93LXVwXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlnb24gcG9pbnRzPVxcXCIxMC41LDQgMTUuMzcsOS40IDE0LjYzLDEwLjA4IDEwLjUsNS40OSA2LjM3LDEwLjA4IDUuNjMsOS40XFxcIj48L3BvbHlnb24+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjEwLjVcXFwiIHkxPVxcXCIxNlxcXCIgeDI9XFxcIjEwLjVcXFwiIHkyPVxcXCI1XFxcIj48L2xpbmU+PC9zdmc+XCIsXG5cdFwiY2hldnJvbi1kb3duXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjAzXFxcIiBwb2ludHM9XFxcIjE2IDcgMTAgMTMgNCA3XFxcIj48L3BvbHlsaW5lPjwvc3ZnPlwiLFxuXHRcImNoZXZyb24tbGVmdFwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4wM1xcXCIgcG9pbnRzPVxcXCIxMyAxNiA3IDEwIDEzIDRcXFwiPjwvcG9seWxpbmU+PC9zdmc+XCIsXG5cdFwiY2hldnJvbi1yaWdodFwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5bGluZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4wM1xcXCIgcG9pbnRzPVxcXCI3IDQgMTMgMTAgNyAxNlxcXCI+PC9wb2x5bGluZT48L3N2Zz5cIixcblx0XCJjaGV2cm9uLXVwXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjAzXFxcIiBwb2ludHM9XFxcIjQgMTMgMTAgNyAxNiAxM1xcXCI+PC9wb2x5bGluZT48L3N2Zz5cIixcblx0XCJjbG91ZC1kb3dubG9hZFwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjFcXFwiIGQ9XFxcIk02LjUsMTQuNjEgTDMuNzUsMTQuNjEgQzEuOTYsMTQuNjEgMC41LDEzLjE3IDAuNSwxMS4zOSBDMC41LDkuNzYgMS43Miw4LjQxIDMuMyw4LjIgQzMuMzgsNS4zMSA1Ljc1LDMgOC42OCwzIEMxMS4xOSwzIDEzLjMxLDQuNzEgMTMuODksNy4wMiBDMTQuMzksNi44IDE0LjkzLDYuNjggMTUuNSw2LjY4IEMxNy43MSw2LjY4IDE5LjUsOC40NSAxOS41LDEwLjY0IEMxOS41LDEyLjgzIDE3LjcxLDE0LjYgMTUuNSwxNC42IEwxMi41LDE0LjZcXFwiPjwvcGF0aD4gPHBvbHlsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgcG9pbnRzPVxcXCIxMS43NSAxNiA5LjUgMTguMjUgNy4yNSAxNlxcXCI+PC9wb2x5bGluZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNOS41LDE4IEw5LjUsOS41XFxcIj48L3BhdGg+PC9zdmc+XCIsXG5cdFwiY2xvdWQtdXBsb2FkXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgZD1cXFwiTTYuNSwxNC42MSBMMy43NSwxNC42MSBDMS45NiwxNC42MSAwLjUsMTMuMTcgMC41LDExLjM5IEMwLjUsOS43NiAxLjcyLDguNDEgMy4zMSw4LjIgQzMuMzgsNS4zMSA1Ljc1LDMgOC42OCwzIEMxMS4xOSwzIDEzLjMxLDQuNzEgMTMuODksNy4wMiBDMTQuMzksNi44IDE0LjkzLDYuNjggMTUuNSw2LjY4IEMxNy43MSw2LjY4IDE5LjUsOC40NSAxOS41LDEwLjY0IEMxOS41LDEyLjgzIDE3LjcxLDE0LjYgMTUuNSwxNC42IEwxMi41LDE0LjZcXFwiPjwvcGF0aD4gPHBvbHlsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgcG9pbnRzPVxcXCI3LjI1IDExLjc1IDkuNSA5LjUgMTEuNzUgMTEuNzVcXFwiPjwvcG9seWxpbmU+IDxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgZD1cXFwiTTkuNSwxOCBMOS41LDkuNVxcXCI+PC9wYXRoPjwvc3ZnPlwiLFxuXHRcImNyZWRpdC1jYXJkXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHJlY3QgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4PVxcXCIxLjVcXFwiIHk9XFxcIjQuNVxcXCIgd2lkdGg9XFxcIjE3XFxcIiBoZWlnaHQ9XFxcIjEyXFxcIj48L3JlY3Q+IDxyZWN0IHg9XFxcIjFcXFwiIHk9XFxcIjdcXFwiIHdpZHRoPVxcXCIxOFxcXCIgaGVpZ2h0PVxcXCIzXFxcIj48L3JlY3Q+PC9zdmc+XCIsXG5cdFwiZmlsZS1lZGl0XCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBkPVxcXCJNMTguNjUsMS42OCBDMTguNDEsMS40NSAxOC4xMDksMS4zMyAxNy44MSwxLjMzIEMxNy40OTksMS4zMyAxNy4yMDksMS40NSAxNi45OCwxLjY4IEw4LjkyLDkuNzYgTDgsMTIuMzMgTDEwLjU1LDExLjQxIEwxOC42NTEsMy4zNCBDMTkuMTIsMi44NyAxOS4xMiwyLjE1IDE4LjY1LDEuNjggTDE4LjY1LDEuNjggTDE4LjY1LDEuNjggWlxcXCI+PC9wYXRoPiA8cG9seWxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBwb2ludHM9XFxcIjE2LjUgOC40ODIgMTYuNSAxOC41IDMuNSAxOC41IDMuNSAxLjUgMTQuMjExIDEuNVxcXCI+PC9wb2x5bGluZT48L3N2Zz5cIixcblx0XCJnaXQtYnJhbmNoXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4yXFxcIiBjeD1cXFwiN1xcXCIgY3k9XFxcIjNcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjJcXFwiIGN4PVxcXCIxNFxcXCIgY3k9XFxcIjZcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjJcXFwiIGN4PVxcXCI3XFxcIiBjeT1cXFwiMTdcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMlxcXCIgZD1cXFwiTTE0LDggQzE0LDEwLjQxIDEyLjQzLDEwLjg3IDEwLjU2LDExLjI1IEM5LjA5LDExLjU0IDcsMTIuMDYgNywxNSBMNyw1XFxcIj48L3BhdGg+PC9zdmc+XCIsXG5cdFwiZ2l0LWZvcmtcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8Y2lyY2xlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjJcXFwiIGN4PVxcXCI1Ljc5XFxcIiBjeT1cXFwiMi43OVxcXCIgcj1cXFwiMS43OVxcXCI+PC9jaXJjbGU+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMlxcXCIgY3g9XFxcIjE0LjE5XFxcIiBjeT1cXFwiMi43OVxcXCIgcj1cXFwiMS43OVxcXCI+PC9jaXJjbGU+IDxlbGxpcHNlIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgc3Ryb2tlLXdpZHRoPVxcXCIxLjJcXFwiIGN4PVxcXCIxMC4wM1xcXCIgY3k9XFxcIjE2Ljc5XFxcIiByeD1cXFwiMS43OVxcXCIgcnk9XFxcIjEuNzlcXFwiPjwvZWxsaXBzZT4gPHBhdGggZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjJcXFwiIGQ9XFxcIk01Ljc5LDQuNTcgTDUuNzksNi41NiBDNS43OSw5LjE5IDEwLjAzLDEwLjIyIDEwLjAzLDEzLjMxIEMxMC4wMywxNC44NiAxMC4wNCwxNC41NSAxMC4wNCwxNC41NSBDMTAuMDQsMTQuMzcgMTAuMDQsMTQuODYgMTAuMDQsMTMuMzEgQzEwLjA0LDEwLjIyIDE0LjIsOS4xOSAxNC4yLDYuNTYgTDE0LjIsNC41N1xcXCI+PC9wYXRoPjwvc3ZnPlwiLFxuXHRcImdpdGh1Yi1hbHRcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTAsMC41IEM0Ljc1LDAuNSAwLjUsNC43NiAwLjUsMTAuMDEgQzAuNSwxNS4yNiA0Ljc1LDE5LjUxIDEwLDE5LjUxIEMxNS4yNCwxOS41MSAxOS41LDE1LjI2IDE5LjUsMTAuMDEgQzE5LjUsNC43NiAxNS4yNSwwLjUgMTAsMC41IEwxMCwwLjUgWiBNMTIuODEsMTcuNjkgQzEyLjgxLDE3LjY5IDEyLjgxLDE3LjcgMTIuNzksMTcuNjkgQzEyLjQ3LDE3Ljc1IDEyLjM1LDE3LjU5IDEyLjM1LDE3LjM2IEwxMi4zNSwxNi4xNyBDMTIuMzUsMTUuNDUgMTIuMDksMTQuOTIgMTEuNTgsMTQuNTYgQzEyLjIsMTQuNTEgMTIuNzcsMTQuMzkgMTMuMjYsMTQuMjEgQzEzLjg3LDEzLjk4IDE0LjM2LDEzLjY5IDE0Ljc0LDEzLjI5IEMxNS40MiwxMi41OSAxNS43NiwxMS41NSAxNS43NiwxMC4xNyBDMTUuNzYsOS4yNSAxNS40NSw4LjQ2IDE0LjgzLDcuOCBDMTUuMSw3LjA4IDE1LjA3LDYuMjkgMTQuNzUsNS40NCBMMTQuNTEsNS40MiBDMTQuMzQsNS40IDE0LjA2LDUuNDYgMTMuNjcsNS42MSBDMTMuMjUsNS43OCAxMi43OSw2LjAzIDEyLjMxLDYuMzUgQzExLjU1LDYuMTYgMTAuODEsNi4wNSAxMC4wOSw2LjA1IEM5LjM2LDYuMDUgOC42MSw2LjE1IDcuODgsNi4zNSBDNy4yOCw1Ljk2IDYuNzUsNS42OCA2LjI2LDUuNTQgQzYuMDcsNS40NyA1LjksNS40NCA1Ljc4LDUuNDQgTDUuNDIsNS40NCBDNS4wNiw2LjI5IDUuMDQsNy4wOCA1LjMyLDcuOCBDNC43LDguNDYgNC40LDkuMjUgNC40LDEwLjE3IEM0LjQsMTEuOTQgNC45NiwxMy4xNiA2LjA4LDEzLjg0IEM2LjUzLDE0LjEzIDcuMDUsMTQuMzIgNy42OSwxNC40MyBDOC4wMywxNC41IDguMzIsMTQuNTQgOC41NSwxNC41NSBDOC4wNywxNC44OSA3LjgyLDE1LjQyIDcuODIsMTYuMTYgTDcuODIsMTcuNTEgQzcuOCwxNy42OSA3LjcsMTcuOCA3LjUxLDE3LjggQzQuMjEsMTYuNzQgMS44MiwxMy42NSAxLjgyLDEwLjAxIEMxLjgyLDUuNSA1LjQ5LDEuODMgMTAsMS44MyBDMTQuNSwxLjgzIDE4LjE3LDUuNSAxOC4xNywxMC4wMSBDMTguMTgsMTMuNTMgMTUuOTQsMTYuNTQgMTIuODEsMTcuNjkgTDEyLjgxLDE3LjY5IFpcXFwiPjwvcGF0aD48L3N2Zz5cIixcblx0XCJnb29nbGUtcGx1c1wiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwYXRoIGQ9XFxcIk0xMi45LDljMCwyLjctMC42LDUtMy4yLDYuM2MtMy43LDEuOC04LjEsMC4yLTkuNC0zLjZDLTEuMSw3LjYsMS45LDMuMyw2LjEsM2MxLjctMC4xLDMuMiwwLjMsNC42LDEuMyBjMC4xLDAuMSwwLjMsMC4yLDAuNCwwLjRjLTAuNSwwLjUtMS4yLDEtMS43LDEuNmMtMS0wLjgtMi4xLTEuMS0zLjUtMC45QzUsNS42LDQuMiw2LDMuNiw2LjdjLTEuMywxLjMtMS41LDMuNC0wLjUsNSBjMSwxLjcsMi42LDIuMyw0LjYsMS45YzEuNC0wLjMsMi40LTEuMiwyLjYtMi42SDYuOVY5SDEyLjl6XFxcIj48L3BhdGg+IDxwb2x5Z29uIHBvaW50cz1cXFwiMjAsOSAyMCwxMSAxOCwxMSAxOCwxMyAxNiwxMyAxNiwxMSAxNCwxMSAxNCw5IDE2LDkgMTYsNyAxOCw3IDE4LDkgXFxcIj48L3BvbHlnb24+PC9zdmc+XCIsXG5cdFwibWludXMtY2lyY2xlXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiOS41XFxcIiBjeT1cXFwiOS41XFxcIiByPVxcXCI5XFxcIj48L2NpcmNsZT4gPGxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4MT1cXFwiNVxcXCIgeTE9XFxcIjkuNVxcXCIgeDI9XFxcIjE0XFxcIiB5Mj1cXFwiOS41XFxcIj48L2xpbmU+PC9zdmc+XCIsXG5cdFwibW9yZS12ZXJ0aWNhbFwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxjaXJjbGUgY3g9XFxcIjEwXFxcIiBjeT1cXFwiM1xcXCIgcj1cXFwiMlxcXCI+PC9jaXJjbGU+IDxjaXJjbGUgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTBcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPiA8Y2lyY2xlIGN4PVxcXCIxMFxcXCIgY3k9XFxcIjE3XFxcIiByPVxcXCIyXFxcIj48L2NpcmNsZT48L3N2Zz5cIixcblx0XCJwYWludC1idWNrZXRcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBkPVxcXCJNMTAuMjEsMSBMMCwxMS4yMSBMOC4xLDE5LjMxIEwxOC4zMSw5LjEgTDEwLjIxLDEgTDEwLjIxLDEgWiBNMTYuODksOS4xIEwxNSwxMSBMMS43LDExIEwxMC4yMSwyLjQyIEwxNi44OSw5LjEgWlxcXCI+PC9wYXRoPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBkPVxcXCJNNi40MiwyLjMzIEwxMS43LDcuNjFcXFwiPjwvcGF0aD4gPHBhdGggZD1cXFwiTTE4LjQ5LDEyIEMxOC40OSwxMiAyMCwxNC4wNiAyMCwxNS4zNiBDMjAsMTYuMjggMTkuMjQsMTcgMTguNDksMTcgTDE4LjQ5LDE3IEMxNy43NCwxNyAxNywxNi4yOCAxNywxNS4zNiBDMTcsMTQuMDYgMTguNDksMTIgMTguNDksMTIgTDE4LjQ5LDEyIFpcXFwiPjwvcGF0aD48L3N2Zz5cIixcblx0XCJwaG9uZS1sYW5kc2NhcGVcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGQ9XFxcIk0xNyw1LjUgQzE3LjgsNS41IDE4LjUsNi4yIDE4LjUsNyBMMTguNSwxNCBDMTguNSwxNC44IDE3LjgsMTUuNSAxNywxNS41IEwzLDE1LjUgQzIuMiwxNS41IDEuNSwxNC44IDEuNSwxNCBMMS41LDcgQzEuNSw2LjIgMi4yLDUuNSAzLDUuNSBMMTcsNS41IEwxNyw1LjUgTDE3LDUuNSBaXFxcIj48L3BhdGg+IDxjaXJjbGUgY3g9XFxcIjMuOFxcXCIgY3k9XFxcIjEwLjVcXFwiIHI9XFxcIjAuOFxcXCI+PC9jaXJjbGU+PC9zdmc+XCIsXG5cdFwicGxheS1jaXJjbGVcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cG9seWdvbiBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBwb2ludHM9XFxcIjguNSA3IDEzLjUgMTAgOC41IDEzXFxcIj48L3BvbHlnb24+IDxjaXJjbGUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEuMVxcXCIgY3g9XFxcIjEwXFxcIiBjeT1cXFwiMTBcXFwiIHI9XFxcIjlcXFwiPjwvY2lyY2xlPjwvc3ZnPlwiLFxuXHRcInBsdXMtY2lyY2xlXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPGNpcmNsZSBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIHN0cm9rZS13aWR0aD1cXFwiMS4xXFxcIiBjeD1cXFwiOS41XFxcIiBjeT1cXFwiOS41XFxcIiByPVxcXCI5XFxcIj48L2NpcmNsZT4gPGxpbmUgZmlsbD1cXFwibm9uZVxcXCIgc3Ryb2tlPVxcXCIjMDAwXFxcIiB4MT1cXFwiOS41XFxcIiB5MT1cXFwiNVxcXCIgeDI9XFxcIjkuNVxcXCIgeTI9XFxcIjE0XFxcIj48L2xpbmU+IDxsaW5lIGZpbGw9XFxcIm5vbmVcXFwiIHN0cm9rZT1cXFwiIzAwMFxcXCIgeDE9XFxcIjVcXFwiIHkxPVxcXCI5LjVcXFwiIHgyPVxcXCIxNFxcXCIgeTI9XFxcIjkuNVxcXCI+PC9saW5lPjwvc3ZnPlwiLFxuXHRcInF1b3RlLXJpZ2h0XCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBhdGggZD1cXFwiTTE3LjI3LDcuNzkgQzE3LjI3LDkuNDUgMTYuOTcsMTAuNDMgMTUuOTksMTIuMDIgQzE0Ljk4LDEzLjY0IDEzLDE1LjIzIDExLjU2LDE1Ljk3IEwxMS4xLDE1LjA4IEMxMi4zNCwxNC4yIDEzLjE0LDEzLjUxIDE0LjAyLDExLjgyIEMxNC4yNywxMS4zNCAxNC40MSwxMC45MiAxNC40OSwxMC41NCBDMTQuMywxMC41OCAxNC4wOSwxMC42IDEzLjg4LDEwLjYgQzEyLjA2LDEwLjYgMTAuNTksOS4xMiAxMC41OSw3LjMgQzEwLjU5LDUuNDggMTIuMDYsNCAxMy44OCw0IEMxNS4zOSw0IDE2LjY3LDUuMDIgMTcuMDUsNi40MiBDMTcuMTksNi44MiAxNy4yNyw3LjI3IDE3LjI3LDcuNzkgTDE3LjI3LDcuNzkgWlxcXCI+PC9wYXRoPiA8cGF0aCBkPVxcXCJNOC42OCw3Ljc5IEM4LjY4LDkuNDUgOC4zOCwxMC40MyA3LjQsMTIuMDIgQzYuMzksMTMuNjQgNC40MSwxNS4yMyAyLjk3LDE1Ljk3IEwyLjUxLDE1LjA4IEMzLjc1LDE0LjIgNC41NSwxMy41MSA1LjQzLDExLjgyIEM1LjY4LDExLjM0IDUuODIsMTAuOTIgNS45LDEwLjU0IEM1LjcxLDEwLjU4IDUuNSwxMC42IDUuMjksMTAuNiBDMy40NywxMC42IDIsOS4xMiAyLDcuMyBDMiw1LjQ4IDMuNDcsNCA1LjI5LDQgQzYuOCw0IDguMDgsNS4wMiA4LjQ2LDYuNDIgQzguNiw2LjgyIDguNjgsNy4yNyA4LjY4LDcuNzkgTDguNjgsNy43OSBaXFxcIj48L3BhdGg+PC9zdmc+XCIsXG5cdFwic2lnbi1pblwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIHBvaW50cz1cXFwiNyAyIDE3IDIgMTcgMTcgNyAxNyA3IDE2IDE2IDE2IDE2IDMgNyAzXFxcIj48L3BvbHlnb24+IDxwb2x5Z29uIHBvaW50cz1cXFwiOS4xIDEzLjQgOC41IDEyLjggMTEuMjggMTAgNCAxMCA0IDkgMTEuMjggOSA4LjUgNi4yIDkuMSA1LjYyIDEzIDkuNVxcXCI+PC9wb2x5Z29uPjwvc3ZnPlwiLFxuXHRcInNpZ24tb3V0XCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlnb24gcG9pbnRzPVxcXCIxMy4xIDEzLjQgMTIuNSAxMi44IDE1LjI4IDEwIDggMTAgOCA5IDE1LjI4IDkgMTIuNSA2LjIgMTMuMSA1LjYyIDE3IDkuNVxcXCI+PC9wb2x5Z29uPiA8cG9seWdvbiBwb2ludHM9XFxcIjEzIDIgMyAyIDMgMTcgMTMgMTcgMTMgMTYgNCAxNiA0IDMgMTMgM1xcXCI+PC9wb2x5Z29uPjwvc3ZnPlwiLFxuXHRcInRhYmxldC1sYW5kc2NhcGVcIjogXCI8c3ZnIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDIwIDIwXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPiA8cGF0aCBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIiMwMDBcXFwiIGQ9XFxcIk0xLjUsNSBDMS41LDQuMiAyLjIsMy41IDMsMy41IEwxNywzLjUgQzE3LjgsMy41IDE4LjUsNC4yIDE4LjUsNSBMMTguNSwxNiBDMTguNSwxNi44IDE3LjgsMTcuNSAxNywxNy41IEwzLDE3LjUgQzIuMiwxNy41IDEuNSwxNi44IDEuNSwxNiBMMS41LDUgTDEuNSw1IEwxLjUsNSBaXFxcIj48L3BhdGg+IDxjaXJjbGUgY3g9XFxcIjMuN1xcXCIgY3k9XFxcIjEwLjVcXFwiIHI9XFxcIjAuOFxcXCI+PC9jaXJjbGU+PC9zdmc+XCIsXG5cdFwidHJpYW5nbGUtZG93blwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIHBvaW50cz1cXFwiNSA3IDE1IDcgMTAgMTJcXFwiPjwvcG9seWdvbj48L3N2Zz5cIixcblx0XCJ0cmlhbmdsZS1sZWZ0XCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlnb24gcG9pbnRzPVxcXCIxMiA1IDcgMTAgMTIgMTVcXFwiPjwvcG9seWdvbj48L3N2Zz5cIixcblx0XCJ0cmlhbmdsZS1yaWdodFwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIHBvaW50cz1cXFwiOCA1IDEzIDEwIDggMTVcXFwiPjwvcG9seWdvbj48L3N2Zz5cIixcblx0XCJ0cmlhbmdsZS11cFwiOiBcIjxzdmcgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAgMjBcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+IDxwb2x5Z29uIHBvaW50cz1cXFwiNSAxMyAxMCA4IDE1IDEzXFxcIj48L3BvbHlnb24+PC9zdmc+XCIsXG5cdFwidmlkZW8tY2FtZXJhXCI6IFwiPHN2ZyB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj4gPHBvbHlnb24gcG9pbnRzPVxcXCIxOCw2IDE4LDE0IDEyLDEwIFxcXCI+PC9wb2x5Z29uPiA8cmVjdCB4PVxcXCIyXFxcIiB5PVxcXCI1XFxcIiB3aWR0aD1cXFwiMTJcXFwiIGhlaWdodD1cXFwiMTBcXFwiPjwvcmVjdD48L3N2Zz5cIlxufTtcblxuZnVuY3Rpb24gcGx1Z2luKFVJa2l0KSB7XG5cbiAgICBpZiAocGx1Z2luLmluc3RhbGxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgVUlraXQuaWNvbi5hZGQoSWNvbnMpO1xuXG59XG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuVUlraXQpIHtcbiAgICB3aW5kb3cuVUlraXQudXNlKHBsdWdpbik7XG59XG5cbnJldHVybiBwbHVnaW47XG5cbn0pKSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy91aWtpdC9kaXN0L2pzL3Vpa2l0LWljb25zLmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ })
/******/ ]);